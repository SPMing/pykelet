<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="file:///home/joseph/Desktop/grobid/grobid-home/schemas/rng/Grobid.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">LieART – A Mathematica Application for Lie Algebras and Representation Theory</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Robert</forename>
								<surname>Feger</surname>
							</persName>
							<affiliation>
								<orgName type="department">Institut für Theoretische Physik und Astrophysik</orgName>
								<orgName type="institution">Universität Würzburg</orgName>
								<address>
									<addrLine>Emil-Hilb-Weg 22</addrLine>
									<postCode>97074</postCode>
									<settlement>Würzburg</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName>
								<forename type="first">Thomas</forename>
								<forename type="middle">W</forename>
								<surname>Kephart</surname>
							</persName>
							<affiliation>
								<orgName type="department">Department of Physics and Astronomy</orgName>
								<orgName type="institution">Vanderbilt University</orgName>
								<address>
									<postCode>37235</postCode>
									<settlement>Nashville</settlement>
									<region>TN</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">LieART – A Mathematica Application for Lie Algebras and Representation Theory</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Lie algebra</term>
					<term>Lie group</term>
					<term>representation theory</term>
					<term>irreducible representation</term>
					<term>tensor product</term>
					<term>branching rule</term>
					<term>GUT</term>
					<term>model building</term>
				</keywords>
			</textClass>
			<abstract>
				<p>We present the Mathematica application &quot; LieART &quot; (Lie Algebras and Representation Theory) for computations frequently encountered in Lie algebras and representation theory, such as tensor product decomposition and subalgebra branching of irreducible representations. LieART can handle all classical and exceptional Lie algebras. It computes root systems of Lie algebras, weight systems and several other properties of irreducible representations. LieART&apos;s user interface has been created with a strong focus on usability and thus allows the input of irreducible representations via their dimensional name, while the output is in the textbook style used in most particle-physics publications. The unique Dynkin labels of irreducible representations are used internally and can also be used for input and output. LieART exploits the Weyl reflection group for most of the calculations, resulting in fast computations and a low memory consumption. Extensive tables of properties, tensor products and branching rules of irreducible representations are included in the appendix.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
				<figure>
					<trash>Contents 1 Introduction 4 2 Download and Installation 5</trash>


				</figure>

			<note>2.1 Download . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 2.2 Automatic Installation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 2.3 Manual Installation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 2.4 Documentation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 2.5 L A T E X Package . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 3 Quick Start 6 3.1 Entering Irreducible Representations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 6 3.2 Decomposing Tensor Products . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7 3.3 Decomposition to Subalgebras . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8 3.4 Young Tableaux . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .</note>

				<figure>
					<trash>. . 9 4 Theoretical Background and Implementation</trash>

					<head>10</head>


				</figure>

			<note>4.1 Algebras . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10 4.1.1 Definition . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10 4.1.2 Roots . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11 4.1.3 Classification of Lie Algebras . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12 4.1.4 Bases . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12 4.1.5 Scalar Product . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15 4.1.6 Representation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15 4.2 Weyl Group Orbits . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16 4.3 Roots . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17 4.4 Representations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 19 4.4.1 Weight System . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20 4.4.2 Properties of Irreducible Representations . . . . . . . . . . . . . . . . . . . . . . . . . 23 4.4.3 Representation Names . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24 4.5 Tensor Product Decomposition . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28 4.5.1 Generic Algorithm . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28 4.5.2 Algorithm Based on Klimyk&apos;s Formula . . . . . . . . . . . . . . . . . . . . . . . . . . . 30 4.5.3 SU(N ) Decomposition via Young Tableaux . . . . . . . . . . . . . . . . . . . . . . . . 31 4.6 Subalgebra Decomposition . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33 4.6.1 Branching Rules and Maximal Subalgebras . . . . . . . . . . . . . . . . . . . . . . .</note>

				<figure>
					<trash>. 34 5 Benchmarks 39 6 L A T E X Package 44 7 Conclusions and Outlook 44 8 Acknowledgments 44 A Tables 45 A.1</trash>


				</figure>

			<note>Properties of Irreducible Representations . . . . . . . . . . . . . . . . . . . . . 46 A.1.1 SU(N ) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 46 A.1.2 SO(N ) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59 A.1.3 Sp(N ) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 71 A.1.4 Exceptional Algebras . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 78 A.2 Tensor Products . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 84 A.2.1 SU(N ) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 84 A.2.2 SO(N ) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 97 A.2.3 Sp(N ) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 109 A.2.4 Exceptional Algebras . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 114 A.3 Branching Rules . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 118 A.3.1 SU(N ) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 118</note>

			<div>
				<head n="1">Introduction</head>

				<p>Lie groups are a key ingredient in modern physics, while smaller Lie groups like SU(2) and SO(3, 1), enter the quantum mechanics of elementary chemistry and condensed matter physics, the full spectrum of Lie groups, i.e., the classical groups SU(N ), SO(N ) and Sp(2N ) and the exceptionals E 6 , E 7 , E 8 , F 4 and G 2 , have all appeared with varying degrees of frequency in particle physics. Lie groups have many other application e.g., to the theoretical physics of gravity, string theory, etc. as well as applications to engineering and elsewhere. Here we will focus on the Lie algebras of the compact forms of Lie groups that are most useful for particle physics. Most of the results are easily extended to the non-compact forms.</p>

				<p>Shortly after the Standard Model was completed, Grand Unified Theories (GUTs) were proposed, where the Standard-Model gauge group SU(3) C ×SU(2) L ×U(1) Y is embedded in a higher symmetry, typically SU(5) [3], SO(10) [4, 5] or E 6 [6], although other choices have been tried. Major reviews appeared on the uses of Lie algebras [7, 8], including tables of irreducible representations (irreps) and their invariants. There are also a number of useful textbooks that cover the topic [9, 10, 11]. While extensive tables already exist for building GUT models, it has sometimes been necessary to go beyond what is tabulated in the literature. Our purpose here is to give extended tables that will satisfy most modern model-building requirements, but also provide the software that allows one to go further as the situation may require. In describing the software we will incorporate a review of most of the necessary group-theory background. This includes root and weight systems, the associated Weyl groups for all the classical and exceptional Lie algebras, orthogonal basis systems, and Weyl-group orbits, which are used in our method of calculating tensor products and irrep decompositions.</p>

				<p>The theory of Lie algebras is in a mature state and many algorithms have been established to facilitate computations in representation theory. The correspondence of irreps to Young tableaux, especially for SU(N )&apos;s, with algorithms for decomposing tensor products and subalgebra decomposition, even allows complex calculations involving high-dimensional irreps by hand. Lie-algebra related computations have been implemented multiple times on the computer in many different programming languages. Popular programs with a similar aim as the software presented here are [12, 13, 14]. However, at the time we started the project no such implementation existed for the computer-algebra system Mathematica. (Meanwhile a package for computations in finite-dimensional and affine Lie algebras has been published [15] that has a similar intention as our software, as well as a package for the calculation of the 2-loop renormalization-group equations of supersymmetric models based on gauge groups incorporating many Lie algebra related computations [16]). Mathematica ® is a computer algebra software by Wolfram Research, Inc. which is widely used especially among particle physicists.</p>

				<p>Originally intended as an in-house solution for a computerized grand-unified-model scan of SU(N )&apos;s in Mathematica [17], we present here the Mathematica application LieART (Lie Algebras and Representation Theory), that makes tensor products and subalgebra branching of irreps of the classical and exceptional Lie algebras available for this platform. LieART&apos;s code exploits the Weyl reflection group, inherent in all simple Lie algebras, in many parts of the algorithms, which makes computations fast and at the same time economical on memory. We also focused on the usability of LieART with a particle physicist as user in mind: Irreps can be entered by their dimensional name, a nomenclature that physicists prefer over the more unique Dynkin label. LieART displays results in textbook style used in most particle-physics publications, e.g., 10 for the conjugated 10-dimensional irrep of SU(5) instead of the corresponding Dynkin label (0010). The Dynkin label is used internally, but can also be used as input and output. LieART can also display results in terms of L A T E X commands, that are defined in a supplemental L A T E X style file for the inclusion of results in publications.</p>

				<p>The paper is organized as follows: In Section 2 we give instructions for downloading and installing LieART, as well as locating its documentation integrated in Mathematica&apos;s help system. Section 3 comprises a quick-start tutorial for LieART, introducing the most important functions for the most common tasks in an example-based fashion. Section 4 presents a self-contained overview of the Lie algebra theory used in LieART and gives notes on its implementation. Section 5 gives benchmarks for a few tensor-product decompositions and a subalgebra decomposition of a large irrep. In Section 6 we present a L A T E X style file included in LieART for displaying weights, roots and irreps properly. In Section 7 we conclude and give an outlook on future versions. In the appendix we include an extensive collection of tables with properties of irreps, tensor products and branching rules. These tables follow [7] in selection and presentation style, but extend most of the results. We plan to maintain and further extend our tables, which can be used directly as lookup tables without the aid of LieART.</p>

			</div>
			<div>
				<head n="2">Download and Installation 2.1. Download</head>

				<p>LieART is hosted by Hepforge, IPPP Durham. The LieART project home page is http://lieart.hepforge.org/ and the LieART Mathematica application can be downloaded as tar.gz archive from http://www.hepforge.org/downloads/lieart/</p>

			</div>
			<div>
				<head n="2.2">Automatic Installation</head>

				<p>Start Mathematica and in the front end select the menu entry File → Install... In the appearing dialog select Application as Type of Item to Install and the tar.gz file in the open file dialog from Source. (It is not necessary to decompress the tar.gz archive since Mathematica does this automatically.) Choose whether you want to install LieART for an individual user or system wide. For a system-wide installation you might be asked for the superuser password.</p>

			</div>
			<div>
				<head n="2.3">Manual Installation</head>

				<p>The above procedure in Mathematica 7 only allows you to automatically install the Mathematica package file (LieART.m) of LieART without the documentation. We therefore suggest a manual installation of the LieART application in Mathematica 7 and in Mathematica 8 through 10 if problems with the automatic installation occur.</p>

				<p>Extract the archive to the subdirectory AddOns/Applications of the directory to which $UserBaseDirectory is set for a user-only installation. For a system-wide installation place it in the according subdirectory of $InstallationDirectory. Restart Mathematica to allow it to integrate LieART&apos;s documentation in its help system.</p>

			</div>
			<div>
				<head n="2.4">Documentation</head>

				<p>The documentation of LieART is integrated in Mathematica&apos;s help system. After restarting Mathematica the following path should lead to LieART&apos;s documentation: Help → Documentation Center → Add-Ons &amp; Packages (at the bottom) → LieART, Button labeled &quot;Documentation&quot; (Alternatively, a search for &quot; LieART &quot; (with the correct case) in the Documentation Center leads to the same page.) The displayed page serves as the documentation home of LieART and includes links to the descriptions of its most important functions.</p>

				<p>The documentation of LieART includes a Quick Start Tutorial for the impatient, which can be found near the bottom of LieART&apos;s documentation home under the section Tutorials.</p>

				<p>Tables of representation properties, tensor products and branching rules generated by LieART can be found in the section Tables at the bottom of LieART&apos;s documentation home. 2.5. L A T E X Package LieART comes with a L A T E X package that defines commands to display irreps, roots and weights properly. The style file lieart.sty can be found in the subdirectory latex/ of the LieART project tree. Please copy it to a location where your L A T E X installation can find it.</p>

			</div>
			<div>
				<head n="3">Quick Start</head>

				<p>This section provides a tutorial introducing the most important and frequently used functions of LieART for Lie-algebra and representation-theory related calculations. The functions are introduced based on simple examples that can easily be modified and extended to the user&apos;s desired application. Most examples use irreducible representations (irreps) of SU(5), which most textbooks use in examples since it is less trivial than SU(3), but small enough to return results almost instantly on any recent computer. Also, SU(5) frequently appears in unified model building since the Standard-Model gauge group is one of its maximal subgroups. This tutorial can also be found in the LieART documentation integrated into the Mathematica Documentation Center as &quot; Quick Start Tutorial &quot; under the section &quot; Tutorials &quot; on the LieART documentation home.</p>

				<p>This loads the package:</p>

			</div>
			<div>
				<head>In[1]</head>

				<p>:= « LieART&apos;</p>

			</div>
			<div>
				<head n="3.1">Entering Irreducible Representations</head>

				<p>Irreps are internally described by their Dynkin label with a combined head of Irrep and the Lie algebra.</p>

			</div>
			<div>
				<head>Irrep[algebraClass][label ]</head>

				<p>irrep described by its algebraClass and Dynkin label .</p>

				<p>Entering irreps by Dynkin label.</p>

				<p>The algebraClass follows the Dynkin classification of simple Lie algebras and can only be A, B, C, D for the classical algebras and E6, E7, E8, F4 and G2 for the exceptional algebras. The precise classical algebra is determined by the length of the Dynkin label.</p>

				<p>Entering the 10 of SU(5) by its Dynkin label and algebra class:</p>

			</div>
			<div>
				<head>In[2]</head>

				<p>:= Irrep[A][0,0,1,0]//FullForm</p>

			</div>
			<div>
				<head>Out[2]</head>

				<p>:= Irrep[A][0,0,1,0] In StandardForm the irrep is displayed in the textbook notation of Dynkin labels:</p>

			</div>
			<div>
				<head>In[3]</head>

				<p>:= Irrep[A][0,0,1,0]//StandardForm</p>

			</div>
			<div>
				<head>Out[3]</head>

				<p>:= (0010)</p>

				<p>In TraditionalForm (default) the irrep is displayed by its dimensional name:</p>

			</div>
			<div>
				<head>In[4]</head>

				<p>:= Irrep[A][0,0,1,0] Out[4]:= 10</p>

				<p>The default output format type of LieART is TraditionalForm. The associated user setting is overwritten for the notebook LieART that is loaded in. For StandardForm as output format type please set the global variable $DefaultOutputForm=StandardForm.</p>

				<p>As an example for entering an irrep of an exceptional algebra, consider the 27 of E 6 :</p>

			</div>
			<div>
				<head>In[5]</head>

				<p>:= Irrep[E6][1,0,0,0,0,0] Out[5]:= 27</p>

				<p>Irreps may also be entered by their dimensional name. The package transforms the irrep into its Dynkin label. Since the algebra of an irrep of a classical Lie algebra becomes ambiguous with only the dimensional name, it has to be specified.</p>

			</div>
			<div>
				<head>Irrep[algebra][dimname]</head>

				<p>irrep entered by its algebra and dimensional name dimname.</p>

				<p>Entering irreps by dimensional name.</p>

				<p>Entering the 10 of SU(5) by its dimensional name specifying the algebra by its Dynkin classification A 4 :</p>

			</div>
			<div>
				<head>In[6]</head>

				<p>:= Irrep[A4][Bar[10]]//InputForm</p>

			</div>
			<div>
				<head>Out[6]</head>

				<p>:= Irrep[A][0,0,1,0] The traditional name of the algebra SU(5) may also be used:</p>

			</div>
			<div>
				<head>In[7]</head>

				<p>:= Irrep[SU5][Bar[10]]//InputForm</p>

			</div>
			<div>
				<head>Out[7]</head>

				<p>:= Irrep[A][0,0,1,0] Irreps of product algebras like SU(3)⊗SU(2)⊗U(1) are specified by ProductIrrep with the individual irreps of simple Lie algebras as arguments.</p>

			</div>
			<div>
				<head>ProductIrrep[irreps]</head>

				<p>head of product irreps, gathering irreps of simple Lie algebras.</p>

			</div>
			<div>
				<head>Product irreps.</head>

				<p>The product irrep (3, 3) of SU(3)⊗SU(3):</p>

			</div>
			<div>
				<head>In[8]</head>

				<p>:= ProductIrrep[Irrep[SU3][3],Irrep[SU3][Bar[3]]]</p>

				<p>Out</p>

				<p>[8]:= (3,3)</p>

			</div>
			<div>
				<head>In[9]</head>

				<p>:= %//InputForm</p>

			</div>
			<div>
				<head>Out[9]</head>

				<p>:= ProductIrrep[Irrep[A][1,0],Irrep[A][0,1]] In[10]:= ProductIrrep[Irrep[A][1,0],Irrep[A][0,1]] Out[10]:= (3,3)</p>

				<p>Take for example the left-handed quark doublet in the Standard-Model gauge group SU(3)⊗SU(2)⊗U(1) (The U(1) charge is not typeset in bold face):</p>

			</div>
			<div>
				<head>In[11]</head>

				<p>:= ProductIrrep[Irrep[SU3][3],Irrep[SU2][2],Irrep[U1][1/3]] Out[11]:= (3,2)(1/3)</p>

			</div>
			<div>
				<head>In[12]</head>

				<p>:= %//InputForm</p>

			</div>
			<div>
				<head>Out[12]</head>

				<p>:= ProductIrrep[Irrep[A][1,0],Irrep[A][1],Irrep[U][1/3]] 3.2. Decomposing Tensor Products</p>

			</div>
			<div>
				<head>DecomposeProduct[irreps]</head>

				<p>decomposes the tensor product of several irreps.</p>

			</div>
			<div>
				<head>Tensor product decomposition.</head>

				<p>Decompose the tensor product 3⊗3 of SU(3):</p>

			</div>
			<div>
				<head>In[13]</head>

				<p>:= DecomposeProduct[Irrep[SU3][3],Irrep[SU3][Bar[3]]]</p>

				<p>Out</p>

				<p>[13]:= 1 + 8</p>

				<p>Decompose the tensor product 27⊗27 of E 6 :</p>

			</div>
			<div>
				<head>In[14]</head>

				<p>:= DecomposeProduct[Irrep[E6][27],Irrep[E6][Bar[27]]]</p>

				<p>Out</p>

				<p>[14]:= 1 + 78 + 650</p>

				<p>Decompose the tensor product 3⊗3⊗3 of SU(3):</p>

			</div>
			<div>
				<head>In[15]</head>

				<p>:= DecomposeProduct[Irrep[SU3][3],Irrep[SU3][3],Irrep[SU3][3]] Out[15]:= 1 + 2(8) + 10</p>

				<p>Decompose the tensor product 8⊗8 of SU(3):</p>

			</div>
			<div>
				<head>In[16]</head>

				<p>:= DecomposeProduct[Irrep[SU3][8],Irrep[SU3][8]] Out[16]</p>

				<figure>
					<trash>:= 1 + 2(8) + 10 + 10 + 27</trash>


				</figure>

				<p>Internally a sum of irreps is represented by IrrepPlus and IrrepTimes, an analog of the built-in functions Plus and Times:</p>

				<p><formula>In[17]</formula></p>

				<p>:= %//InputForm</p>

			</div>
			<div>
				<head>Out[17]</head>

				<p>:= IrrepPlus[Irrep[A][0,0], IrrepTimes[2, Irrep[A][1,1]], Irrep[A][3, 0], Irrep[A][0,3], Irrep[A][2,2]] Results can be transformed into a list of irreps with IrrepList, suitable for further processing with Mathematica built-in functions like Select or Cases:</p>

				<p><formula>In[18]</formula></p>

				<p>:= %//IrrepList</p>

			</div>
			<div>
				<head>Out[18]</head>

				<p>:= {1,8,8,10,10,27}</p>

				<p>Decompose the tensor product 4⊗4⊗6⊗15 of SU(4):</p>

			</div>
			<div>
				<head>In[19]</head>

				<p>:= DecomposeProduct[Irrep[SU4][4],Irrep[SU4][4],Irrep[SU4][6],Irrep[SU4][15]] Out[19]</p>

				<figure>
					<trash>:= 2(1) + 7(15) + 4(20 ) + 35 + 5(45) + 3(45) + 3(84) + 2(175) + 256</trash>


				</figure>

				<p>The Mathematica built-in command Times for products is replaced by DecomposeProduct for irreps as arguments. E.g., decompose the tensor product 10⊗24⊗45 of SU(5):</p>

			</div>
			<div>
				<head>In[20]</head>

				<p>:= Irrep[SU5][Bar[10]] * Irrep[SU5][24] * Irrep[SU5][45] Out[20]</p>

				<figure>
					<trash>:= 3(5)+6(45)+3(50)+5(70)+2(105)+175 +6(280)+2(280 )+420+450 +3(480)+2(720)+1120+2520</trash>


				</figure>

				<p>For powers of irreps the Mathematica built-in command Power may be used. E.g., decompose the tensor product 27⊗27⊗27 of E 6 :</p>

			</div>
			<div>
				<head>In[21]</head>

				<p>:= Irrep[E6][27]^3</p>

			</div>
			<div>
				<head>Out[21]</head>

				<figure>
					<trash>:= 1 + 2(78) + 3(650) + 2925 + 3003 + 2(5824) Decompose tensor products of product irreps (3, 3, 1)⊗(3, 3, 1) of SU(3)⊗SU(3)⊗SU(3):</trash>


				</figure>

			</div>
			<div>
				<head>In[22]</head>

				<p>:= DecomposeProduct[ ProductIrrep[Irrep[SU3][3],Irrep[SU3][Bar[3]],Irrep[SU3][1]], ProductIrrep[Irrep[SU3][Bar[3]],Irrep[SU3][3],Irrep[SU3][1]]]</p>

				<p>Out</p>

				<p>[22]</p>

				<figure>
					<trash>:= (1, 1, 1) + (8, 1, 1) + (1, 8, 1) + (8, 8, 1) Decompose the tensor products (3, 2)⊗(3, 1) of SU(3)⊗SU(2):</trash>


				</figure>

			</div>
			<div>
				<head>In[23]</head>

				<p>:= DecomposeProduct[ ProductIrrep[Irrep[SU3][3],Irrep[SU2][2]], ProductIrrep[Irrep[SU3][Bar[3]],Irrep[SU2][1]]]</p>

				<p>Out</p>

				<p>[23]</p>

				<figure>
					<trash>:= (1, 2) + (8, 2) 3.3. Decomposition to Subalgebras DecomposeIrrep[irrep, subalgebra]</trash>


				</figure>

				<p>decomposes irrep to the specified subalgebra.</p>

			</div>
			<div>
				<head>DecomposeIrrep[pirrep, subalgebra, pos]</head>

				<p>decomposes the product irrep pirrep at position pos.</p>

				<p>Decompose irreps and product irreps.</p>

				<figure>
					<trash>Decompose the 10 of SU(5) to SU(3)⊗SU(2)⊗U(1):</trash>


				</figure>

			</div>
			<div>
				<head>In[24]</head>

				<p>:= DecomposeIrrep[Irrep[SU5][Bar[10]],ProductAlgebra[SU3,SU2,U1]] Out[24]</p>

				<figure>
					<trash>:= (1, 1)(6) + (3, 1)(−4) + (3, 2)(1) Decompose the 10 and the 5 of SU(5) to SU(3)⊗SU(2)⊗U(1) (DecomposeIrrep is Listable): In[25]</trash>


				</figure>

				<p>:= DecomposeIrrep[{Irrep[SU5][10],Irrep[SU5][Bar[5]]},ProductAlgebra[SU3,SU2,U1]] Out[25]</p>

				<figure>
					<trash>:= {(3, 1)(4) + (3, 2)(−1) + (1, 1)(−6), (3, 1)(−2) + (1, 2)(3)} Decompose the 16 of SO(10) to SU(5)⊗U(1):</trash>


				</figure>

			</div>
			<div>
				<head>In[26]</head>

				<p>:= DecomposeIrrep[Irrep[SO10][16],ProductAlgebra[SU5,U1]] Out[26]</p>

				<figure>
					<trash>:= (1)(−5) + (5)(3) + (10)(−1) Decompose the 27 of E 6 to SU(3)⊗SU(3)⊗SU(3):</trash>


				</figure>

			</div>
			<div>
				<head>In[27]</head>

				<p>:= DecomposeIrrep[Irrep[E6][27],ProductAlgebra[SU3,SU3,SU3]] Out[27]</p>

				<figure>
					<trash>:= (3, 1, 3) + (1, 3, 3) + (3, 3, 1) Decompose the SU(3) irrep 3 in (24, 3)(−3) of SU(5)⊗SU(3)⊗U(1) to SU(2)⊗U (1), i.e., SU(5)⊗SU(3)⊗U(1) → SU(5)⊗SU(2)⊗U (1)⊗U(1):</trash>


				</figure>

			</div>
			<div>
				<head>In[28]</head>

				<p>:= DecomposeIrrep[ProductIrrep[Irrep[SU5][24],Irrep[SU3][3],Irrep[U1][-3]], ProductAlgebra[SU2,U1],2] Out[28]</p>

				<figure>
					<trash>:= (24, 1)(−2)(−3) + (24, 2)(1)(−3)</trash>


				</figure>

				<p>The same decomposition as above displayed as branching rule:</p>

			</div>
			<div>
				<head>In[29]</head>

				<p>:= IrrepRule[#,DecomposeIrrep[#,ProductAlgebra[SU2,U1],2]]&amp;@ ProductIrrep[Irrep[SU5][24],Irrep[SU3][3],Irrep[U1][-3]] Out[29]</p>

				<figure>
					<trash>:= (24, 3)(−3) → (24, 1)(−2)(−3) + (24, 2)(1)(−3)</trash>


				</figure>

				<p>Branching rules for all totally antisymmetric irreps, so-called basic irreps, of SU(6) to SU(3)⊗SU(3)⊗U(1):</p>

			</div>
			<div>
				<head>In[30]</head>

				<p>:=</p>

				<figure>
					<trash>IrrepRule[#,DecomposeIrrep[#,ProductAlgebra[SU3,SU3,U1]]]&amp;/@ BasicIrreps[SU6]//TableForm Out[30]:= 6 → (3, 1)(1) + (1, 3)(−1) 15 → (3, 1)(2) + (1, 3)(−2) + (3, 3)(0) 20 → (1, 1)(3) + (1, 1)(−3) + (3, 3)(−1) + (3, 3)(1) 15 → (3, 1)(−2) + (1, 3)(2) + (3, 3)(0) 6 → (3, 1)(−1) + (1, 3)(1)</trash>


				</figure>

			</div>
			<div>
				<head n="3.4">Young Tableaux</head>

				<p>The irreps of SU(N ) have a correspondence to Young tableaux, which can be displayed by YoungTableau.</p>

			</div>
			<div>
				<head>YoungTableau[irrep]</head>

				<p>Displays the Young tableau associated with an SU(N ) irrep.</p>

			</div>
			<div>
				<head>Young tableaux.</head>

				<p>Young tableau of the 720 of SU(5):</p>

			</div>
			<div>
				<head>In[31]</head>

				<p>:= YoungTableau[Irrep[A][1,2,0,1]] Out[31]:=</p>

				<p>Display Young tableaux of SU(4) irreps with a maximum of one column per box count:</p>

			</div>
			<div>
				<head>In[32]</head>

				<p>:= Row[</p>

				<figure>
					<trash>Row[{#,&quot;: &quot;,YoungTableau[#]}]&amp;/@ SortBy[Irrep[A]@@@Tuples[{0,1},3],Dim],Spacer[10]]</trash>


				</figure>

				<p>Out[32]</p>

				<figure>
					<trash>:= 1 : • 4 : 4 : 6 : 15 : 20 : 20 : 64 :</trash>


				</figure>

			</div>
			<div>
				<head n="4">Theoretical Background and Implementation</head>

				<p>In this section we give a self-contained overview of the Lie algebra theory used and implemented in LieART. It is subdivided into parts discussing basic properties of Lie algebras, roots, weights, Weyl orbits, representations and decompositions. Every subsection begins with a list of the relevant LieART functions followed by text that introduces the necessary theory with reference to the functions and notes on their implementation. This section is not intended as a pedagogical introduction to Lie algebras and we refer the reader to the excellent literature serving this purpose [7, 9, 11].</p>

			</div>
			<div>
				<head n="4.1">Algebras</head>

				<p>Rank</p>

				<p>[expr ] gives the rank of the algebra of expr , which can be an irrep, a weight a root or an algebra itself.</p>

				<p>Algebra</p>

				<p>[algebraClass][rank ] represents a classical algebra of the type algebra- Class, which can only be A, B, C or D, with rank rank . Algebra[expr ] gives the algebra (classical or exceptional) of expr , which may be an irrep, a weight or a root in any basis.</p>

			</div>
			<div>
				<head>OrthogonalSimpleRoots[algebra]</head>

				<p>gives the simple roots of algebra in the orthogonal basis.</p>

			</div>
			<div>
				<head>CartanMatrix[algebra]</head>

				<p>gives the Cartan matrix of algebra.</p>

			</div>
			<div>
				<head>OmegaMatrix[algebra]</head>

				<p>gives the matrix of fundamental weights of algebra as rows.</p>

			</div>
			<div>
				<head>OrthogonalFundamentalWeights[algebra]</head>

				<p>gives the fundamental weights of algebra in the orthogonal basis.</p>

			</div>
			<div>
				<head>OrthogonalBasis[expr ]</head>

				<p>transforms expr from any basis into the orthogonal basis.</p>

			</div>
			<div>
				<head>OmegaBasis[expr ]</head>

				<p>transforms expr from any basis into the ω-basis.</p>

			</div>
			<div>
				<head>AlphaBasis[expr ]</head>

				<p>transforms expr from any basis into the α-basis.</p>

			</div>
			<div>
				<head>DMatrix[algebra]</head>

				<p>gives a matrix with inverse length factors of simple roots on the main diagonal.</p>

			</div>
			<div>
				<head>ScalarProduct[weight1 ,weight2 ]</head>

				<p>gives the scalar product of expr1 and expr2 in any basis. expr1 and expr2 may be weights or roots.</p>

			</div>
			<div>
				<head>MetricTensor[algebra]</head>

				<p>gives the metric tensor or quadratic-form matrix of algebra.</p>

			</div>
			<div>
				<head>Basic Algebra Properties. 4.1.1. Definition</head>

				<p>A Lie Algebra is a vector space g over a field F with the Lie bracket [·, ·] as binary operation, which is bilinear, alternating and fulfills the Jacoby identity. The Lie bracket is often referred to as the commutator. The Lie brackets of the generators t i of the Lie algebra are [t i , t j ] = f ijk t k (1) with the so-called structure constants f ijk , that fully determine the algebra. A Lie algebra is called simple when it contains no non-trivial ideals. A semi-simple Lie algebra is a sum of simple ones. Figure 1: Dynkin Diagrams of classical and exceptional simple Lie algebras.</p>

			</div>
			<div>
				<head n="4.1.2">Roots</head>

				<p>The generators t i of a simple Lie algebra in the Cartan-Weyl basis fall into two sets: The so-called Cartan subalgebra, H, contains all simultaneously diagonalizable generators h i , i.e., the generators are Hermitian and mutually commute (the Cartan subalgebra is abelian):</p>

				<figure>
					<trash>h i = h † i , [h i , h j ] = 0, i, j = 1, . . . , n. (2)</trash>


				</figure>

				<p>The number of simultaneously diagonalizable generators n is called the rank of the algebra, and can be determined by the function Rank[expr ] in LieART. We denote all other generators as e α . They satisfy n eigenvalue equations with the generators of the Cartan subalgebra h i : [h i , e α ] = α i e α , i = 1, . . . , n, (3) which is a subset of (1) and thus the α i are structure constants, which are real numbers due to the hermiticity of the h i &apos;s. Since the α i are the solutions to the eigenvalue equation (3) the vectors α=(α 1 , . . . , α n ) are called the root vectors, which lie in an n-dimensional euclidian space, called the root space. Roots are functionals mapping the Cartan subalgebra H onto the real numbers (the eigenvalues), for all generators t i , which also includes the h i where the eigenvalues are zero. Thus, a Lie algebra has as many roots as generators. The roots are labeled by the root vectors, which we will use in its place from now on.</p>

				<p>A zero root with an n-fold degeneracy is associated with the Cartan subalgebra. In the Cartan-Weyl basis the other generators come in conjugated pairs e † α =e −α and correspond to the ladder operators of SU(2). So-called positive roots correspond to the raising operator e α and negative roots to the lowering operators e −α . If α is a root so is −α. Some of the positive roots can be written as sum of others. Those for which this is not possible are called simple roots and a Lie algebra has as many simple roots as its rank. It is clear that specifying the simple roots fully determines a Lie algebra and thus can be used to replace (1), because all structure constants can be derived therefrom.</p>

				<figure>
					<trash>Type Cartan Name Rank Description classical A n SU(n+1) n ≥ 1 Special unitary algebras of n+1 complex dimension B n SO(2n+1) n ≥ 3 Special orthogonal algebras of odd (2n+1) real dimension C n Sp(2n) n ≥ 2 Symplectic algebras of even (2n) complex dimension D n SO(2n) n ≥ 4 Special orthogonal algebras of even (2n) real dimension exceptional E 6 E 6 6 Exceptional algebra of rank 6 E 7 E 7 7 Exceptional algebra of rank 7 E 8 E 8 8 Exceptional algebra of rank 8 F 4 F 4 4 Exceptional algebra of rank 4 G 2 G 2 2 Exceptional algebra of rank 2</trash>

					<head>Table 4.1:</head>

					<figDesc>Classification of simple Lie algebras.</figDesc>

				</figure>

			</div>
			<div>
				<head n="4.1.3">Classification of Lie Algebras</head>

				<p>Using the commutation relations and the Jacobi identity to analyze the generators, constraints on the roots can be derived and eventually all possible root systems found, which is identical to identifying all allowed Lie algebras. It turns out that simple roots can only come in at most two lengths in one Lie algebra and at four different angles between any pair of them. The simple roots are in particular not orthogonal. The so-called Dynkin diagrams are an ingenious way to depict these relations: simple roots are represented by dots, which are open, , for the longer roots or for all roots if they only come in one length, and filled, , for the shorter roots. Angles between two simple roots are represented by lines connecting the dots: no line for an angle of 90°, one line for 120°, two lines for 135° and three for 150°. Figure 1 shows the Dynkin diagrams for all simple Lie algebras. Semi-simple Lie algebras have disjoint parts and can thus be reduced to two or more Dynkin diagrams of simple Lie algebras.</p>

				<p>The simple Lie algebras fall into two types: four families of infinite series algebras, A n , B n , C n and D n , also called the classical Lie algebras and five so-called exceptional algebras, E 6 , E 7 , E 8 , F 4 and G 2 , with their rank as subscript (see Table 4.1). The labels are according to the classification by Cartan. The classical Lie algebras are internally represented (i.e., in FullForm) in LieART by Algebra[algebraClass][n], with algebraClass being either A, B, C or D and n being the rank. The exceptional algebras are defined in LieART as E6, E7, E8, F4 and G2 and short forms of the classical algebras are predefined up to rank 30 for the Cartan classification, i.e., A1, . . . ,A30, B3, . . . ,B30, C2, . . . ,C30, D4, . . . ,D30, and up to dimension 30 for the conventional name, i.e., SU2, . . . ,SU30, SO7, . . . ,SO30 and Sp4, Sp6, . . . ,Sp30. In StandardForm the Cartan classification is explicitly displayed and in TraditionalForm the Lie algebra is written by its conventional name.</p>

				<p>Note the isomorphisms for low-dimension algebras:</p>

				<figure>
					<trash>SU(2) ∼ SO(3) ∼ Sp(2) (A 1 ∼ B 1 ∼ C 1 ), (4a) SO(4) ∼ SU(2) ⊗ SU(2) (D 2 ∼ A 1 ⊗ A 1 ), (4b) SO(5) ∼ Sp(4) (B 2 ∼ C 2 ), (4c) SO(6) ∼ SU(4) (D 3 ∼ A 3 ). (4d)</trash>


				</figure>

				<p>When these low-dimension Lie algebras occur in a calculation, choose the SU(2) form in (4a) and (4b), the Sp(4) form in (4c) and the SU(4) form in (4d) when using LieART.</p>

			</div>
			<div>
				<head n="4.1.4">Bases</head>

				<p>With respect to the Weyl reflection group, inherent in all compact Lie algebras, as we will explain later, it is convenient to express the root space in an orthogonal coordinate system, which is a subspace of Euclidian space. The specific subspace varies with the Lie algebra. For A n it is a subspace of R</p>

			</div>
			<div>
				<head>n+1</head>

				<p>, where the coordinates sum to one. As the simple roots define the Lie algebra, they are explicitly specified in LieART using orthogonal coordinates and can be retrieved by OrthogonalSimpleRoots[algebra]. E.g., the four simple roots of A 4 (SU(5)) in orthogonal coordinates are:</p>

			</div>
			<div>
				<head>In[33]</head>

				<p>:= OrthogonalSimpleRoots[A4]//Column</p>

			</div>
			<div>
				<head>Out[33]</head>

				<p>:=</p>

				<figure>
					<trash>(1, −1, 0, 0, 0) (0, 1, −1, 0, 0) (0, 0, 1, −1, 0) (0, 0, 0, 1, −1)</trash>

					<head>The so-called Cartan matrix exhibits the non-orthogonality of the simple roots. It is defined as</head>

					<trash>A ij = 2 (α i , α j ) (α j , α j ) i, j = 1, . . . , n (5)</trash>


				</figure>

				<p>where the scalar product (·, ·) is the ordinary scalar product of R n+1 in the case of A n . Most textbooks translate the Dynkin diagrams to the corresponding Cartan matrix as a starting point. And in fact, the rows of the Cartan matrix are the simple roots in the so-called ω-basis, which is the bases of fundamental weights, also called the Dynkin basis. (Weights will be introduced later in the context of representations.) The Cartan matrix is implemented in LieART as the function CartanMatrix[algebra] following the definition of (5). The Cartan matrix for A 4 reads:</p>

			</div>
			<div>
				<head>In[34]</head>

				<p>:= CartanMatrix[A4] Out[34]:=</p>

				<figure>
					<trash>    2 −1 0 0 −1 2 −1 0 0 −1 2 −1 0 0 −1 2    </trash>


				</figure>

				<p>Besides the orthogonal basis, and the ω-basis, the α-basis is also useful. As the name indicates it is the basis of simple roots and it explicitly shows how, e.g., a root is composed out of simple roots. Neither the ω-basis nor the α-basis is orthogonal. The Cartan matrix mediates between the ω-and α-bases:</p>

				<figure>
					<trash>α i = n j=1 A ij ω j , ω i = n j=1 (A −1 ) ij α j . (6)</trash>


				</figure>

				<p>where the ω i are the fundamental weights, which we will define later. These bases are dual to each other in the sense that 2 (α i , ω j )</p>

				<figure>
					<trash>(α i , α i ) ≡ (α ∨ i , ω j ) = δ ij , i, j = 1, . . . , n (7) where α ∨ i is the so-called coroot of α i defined as α ∨ = 2α (α, α) . (8)</trash>


				</figure>

				<p>The transformation to the orthogonal basis can be derived from (7): Expressing α i and ω j in orthogonal coordinates as α i and ω j (7) reads</p>

				<figure>
					<trash>2î · ˆ ω j ˆ α i · ˆ α i ≡ ˆ α ∨ i · ˆ ω j = δ ij , i, j = 1, . . . , n (9)</trash>


				</figure>

				<p>using the ordinary scalar product of R m , where m is the dimension of the orthogonal subspace. Using the matrices A and Ω with the simple coroots α ∨ i and the fundamental weights ω j as rows, we can write (9) as the matrix equation:</p>

				<figure>
					<trash>ˆ A ˆ Ω T = I n (10)</trash>


				</figure>

			</div>
			<div>
				<head>where both</head>

				<p>A and Ω are n×m matrices, wherê Ω is defined below in 12. Please note that the dimension of the orthogonal space m is not necessarily the same as the rank of the algebra n. These exceptions are: A n with m=n + 1, E 6 with m=8, E 7 with m=8 and G 2 with m=3. For all others m=n holds. The matrix of the simple coroots in the orthogonal basis A is easily calculated from the simple roots given in LieART, but the matrix of fundamental weights in the orthogonal basis Ω must be determined by (10). In the cases wherê A is not a square matrix its inverse does not exist. Because the rows of A, which are the simple coroots in the orthogonal basis, are linear independent, ˆ A ˆ A T is invertible and the so-called right-inversê</p>

				<figure>
					<trash>A + can be found viâ A + = ˆ A T ( ˆ A ˆ A T ) −1 (11) which satisfies: ˆ A ˆ A + =I n , i.e., by comparing with (10) the matrix Ω T can be identified with A + , in other words the fundamental weights as rows of Ω in terms of simple coroots as rows of A arê Ω = ( ˆ A + ) T = ( ˆ A ˆ A T ) −1 A (12)</trash>


				</figure>

				<p>The Mathematica built-in function PseudoInverse[matrix ] yields the right-inverse for our case of a matrix with linear independent rows, i.e., the implementation of the second equality in (12) is not needed.</p>

				<p>The matrix of the fundamental weights Ω is implemented as OmegaMatrix[algebra], e.g., for A 4 :</p>

			</div>
			<div>
				<head>In[35]</head>

				<p>:= OmegaMatrix[A4] Out[35]:=</p>

				<figure>
					<trash>     4 5 − 1 5 − 1 5 − 1 5 − 1 5 3 5 3 5 − 2 5 − 2 5 − 2 5 2 5 2 5 2 5 − 3 5 − 3 5 1 5 1 5 1 5 1 5 − 4 5      and the function OrthogonalFundamentalWeights[algebra]</trash>


				</figure>

				<p>adds the proper heads to the rows of Ω, to identify them as weights is the orthogonal basis. We will discuss (fundamental) weights in Section 4.1.6 in more detail.</p>

				<p>The matrix of the fundamental weights in the orthogonal basis Ω mediates between the ω-basis and the orthogonal basis:</p>

				<figure>
					<trash>ω i = n j=1 Ω ij e j , e i = n j=1 ( ˆ Ω −1 ) ij ω j . (13) The LieART functions AlphaBasis[weightOrRoot]</trash>


				</figure>

				<p>, OmegaBasis[weightOrRoot] and OrthogonalBasis[weightOrRoot] transform weightOrRoot from any basis into the α-basis, the ω-basis and the orthogonal basis, respectively. It is obvious how the simple roots in the α-basis look:</p>

			</div>
			<div>
				<head>In[36]</head>

				<p>:= AlphaBasis[OrthogonalSimpleRoots[A4]]//Column</p>

			</div>
			<div>
				<head>Out[36]</head>

				<p>:=</p>

				<figure>
					<trash>(1, 0, 0, 0) (0, 1, 0, 0) (0, 0, 1, 0) (0, 0, 0, 1)</trash>


				</figure>

				<p>and likewise the fundamental weights in the ω-basis:</p>

			</div>
			<div>
				<head>In[37]</head>

				<p>:= OmegaBasis[OrthogonalFundamentalWeights[A4]]//Column</p>

			</div>
			<div>
				<head>Out[37]</head>

				<p>:=</p>

				<figure>
					<trash>1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1</trash>


				</figure>

				<p>(Roots and weights in the ω-basis are displayed with framed boxes following the notation of most textbooks.) A root in LieART is represented by three different heads: RootOrthogonal[algebraClass][label ] for a root in the orthogonal basis, RootOmega[algebraClass][label ] in the ω-basis and in the α-basis by</p>

			</div>
			<div>
				<head>RootAlpha[algebraClass][label ]</head>

				<p>. The algebraClass can only be A, B, C or D to indicate a classical Lie algebra or E6, E7, E8, F4 or G2 for the exceptionals. The label stands for the comma-separated coordinates. This form of the roots is displayed in InputForm and FullForm. E.g., the first simple root of A 4 in all three bases reads:</p>

			</div>
			<div>
				<head>In[38]</head>

				<p>:= {#,OmegaBasis[#],AlphaBasis[#]}&amp;@First[OrthogonalSimpleRoots[A4]]//InputForm</p>

			</div>
			<div>
				<head>Out[38]</head>

				<p>:= {RootOrthogonal[A][1,-1,0,0,0], RootOmega[A][2,-1,0,0], RootAlpha[A][1,0,0,0]</p>

				<figure>
					<figDesc>}</figDesc>

				</figure>

			</div>
			<div>
				<head n="4.1.5">Scalar Product</head>

				<p>The standard choice for the length factors (α j , α j ) in (5) is 2 for the longer roots, if there are two root lengths. The factors 2/ (α j , α j ) can only take three different values which are: 1 for all roots of A n , D n , E 6 , E 7 , E 8 and for the long roots of B n , C n , F 4 and G 2 ; 2 for the short roots of B n , C n and F 4 and 3 for the short root of G 2 . Their implementation in LieART is in the form of diagonal matrices with the inverse factors for the simple roots corresponding to the row on the main diagonal, i.e.,</p>

				<figure>
					<trash>D = diag 1 2 (α 1 , α 1 ) , . . . , 1 2 (α n , α n ) (14) as defined in [18]</trash>


				</figure>

				<p>. E.g., for F 4 , to avoid a trivial example, we have:</p>

			</div>
			<div>
				<head>In[39]</head>

				<p>:= DMatrix[F4] Out[39]:=</p>

				<figure>
					<trash>    1 0 0 0 0 1 0 0 0 0 1 2 0 0 0 0 1 2    </trash>


				</figure>

				<p>In the ω-basis the scalar product used in (5) becomes:</p>

				<figure>
					<trash>(x, y) = n i,j x i (A −1 ) ij D j y j = n i,j x i G ij y j (15)</trash>


				</figure>

				<p>where the x i and y j are coordinates of x and y in the ω-basis.</p>

				<figure>
					<trash>The matrix G ij = (A −1 ) ij (α j , α j ) 2 = (A −1 ) ij D j (16)</trash>


				</figure>

				<p>is called quadratic-form matrix or metric tensor of the Lie algebra. The scalar product is available in LieART as ScalarProduct[weightOrRoot1 ,weightOrRoot2 ], where weightOrRoot1 and weightOrRoot2 may be roots or weights in the orthogonal basis, the α-basis or the ω-basis. The function recognizes the basis by the heads of weightOrRoot1 and weightOrRoot2 . The LieART function for the metric tensor G is</p>

			</div>
			<div>
				<head>MetricTensor[algebra]</head>

				<p>, e.g., for A 4 :</p>

			</div>
			<div>
				<head>In[40]</head>

				<p>:= MetricTensor[A4] Out[40]:</p>

				<p><formula>=      4 5 3 5 2 5 1 5 3 5 6 5 4 5 2 5 2 5 4 5 6 5 3 5 1 5 2 5 3 5 4 5      4.1.6.</formula></p>

				<p>Representation A representation is a linear map of the Lie algebra into the general linear group, i.e., the matrix group, that preserves the Lie bracket relations. It is a homomorphism that maps the generators t i onto invertible matrices T i , that satisfy the same &quot; commutation &quot; relations as the Lie algebra, namely [T i , T j ] = f ijk T k , (17) where the [·, ·] is now the commutator.</p>

				<p>Points in the vector space that the matrices act on can be labeled by the set of eigenvalues of the matrices representing the generators of the Cartan subalgebra. Such a set of eigenvalues is called a weight vector, and the associated functional weight, denoted by λ. They are defined in root space which is called weight space in this context. The weights and weight vectors of a representation correspond to roots and root vectors of the algebra. In fact, weights can be expressed as rational linear combinations of roots, and, as pointed out in this section, eventually by simple roots. In particular, the structure functions themselves form a representation of the algebra: the adjoint representation, which has the same dimension as the algebra, namely the number of roots.</p>

			</div>
			<div>
				<head n="4.2">Weyl Group Orbits</head>

				<p>Reflect</p>

				<p>[weightOrRoot,simpleroots] reflects weightOrRoot at the hyperplanes orthogonal to the specified simpleroots.</p>

			</div>
			<div>
				<head>Reflect[weightOrRoot]</head>

				<p>reflects weightOrRoot at the hyperplanes orthogonal to all simple roots of the Lie algebra of weightOrRoot.</p>

			</div>
			<div>
				<head>ReflectionMatrices[algebra]</head>

				<p>gives the reflection matrices of the Weyl group of algebra.</p>

			</div>
			<div>
				<head>Orbit[weightOrRoot,simpleroots]</head>

				<p>generates the Weyl group orbit of weightOrRoot using only the specified simpleroots.</p>

			</div>
			<div>
				<head>Orbit[weightOrRoot]</head>

				<p>generates the full Weyl group orbit of weightOrRoot using all simple roots of the Lie algebra of weightOrRoot.</p>

			</div>
			<div>
				<head>DimOrbit[weightOrRoot,simpleroots]</head>

				<p>gives the size of the orbit of weightOrRoot using only the simpleroots. DimOrbit[weightOrRoot] gives the size of the orbit of weightOrRoot using all simple roots of the Lie algebra of weightOrRoot.</p>

			</div>
			<div>
				<head>Weyl Group Orbits</head>

				<p>The finite group W (L), called the Weyl group of the Lie algebra L, is a reflection group inherent in the root systems of all simple Lie algebras. The Coxeter groups are an abstraction of reflection groups and the so-called Coxeter-Dynkin diagram describing Coxeter groups are closely related to the Dynkin diagrams presented here. In fact the Coxeter-Dynkin diagram corresponding to the Dynkin diagram describes the Weyl group of the Lie algebra.</p>

				<p>The transformations r i generating the Weyl group are reflections of a vector x in root space at the hyperplanes orthogonal to the simple roots α i of the Lie algebra defined by</p>

				<figure>
					<trash>r i x = x − 2 (x, α i ) (α i , α i ) α i , i = 1, . . . , n, x ∈ R n . (18) The LieART function Reflect[weightOrRoot,simpleroots]</trash>


				</figure>

				<p>implements the reflections r i with weightOr- Root as x and simpleroots as a list of simple roots α i . The result is a list of weights, because the reflection is preformed with several roots simultaneously.</p>

				<p>If weightOrRoots are in the orthogonal basis and ought to be reflected using all roots, the function pattern is Reflect[weightOrRoot], without the simple roots as second argument. Instead of the definition with scalar products following (18), the implementation multiplies the orthogonal coordinates with precomputed reflection matrices, which have a simple form in the orthogonal basis. The function computing the reflection matrices is ReflectionMatrices[algebra] and simply applies the built-in Mathematica command</p>

				<p>ReflectionMatrix to all simple roots and saves the result as DownValues of ReflectionMatrices[algebra]. E.g., the reflection matrices for A 4 (in the 5-dimensional orthogonal basis) are:</p>

			</div>
			<div>
				<head>In[41]</head>

				<p>:= Row[MatrixForm /@ ReflectionMatrices[A4]] Out[41]:=</p>

				<figure>
					<trash>      0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1             1 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 1             1 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1             1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0      </trash>


				</figure>

				<p>The Weyl group of A n is particularly simple in the orthogonal basis: It is the symmetric group S n+1 . The reflection matrices for A 4 above represent the generators of S 5 , i.e., the coordinate permutations (12), (23), (34) and (45), respectively.</p>

				<p>Acting on a vector x in root space by all elements of the Weyl group gives a set of points, of which some may coincide. The subset of distinct points is called the orbit of x and denoted as O(x). The LieART function</p>

			</div>
			<div>
				<head>Orbit[weightOrRoot,simpleroots]</head>

				<p>gives the orbit of weightOrRoot using the simpleroots. If the second argument is omitted, all simple roots of the algebra associated with weightOrRoot are used. The function applies Reflect in a nested fashion and removes duplicate points in every step. The orbit of an A n root or weight is constructed in a special way for performance reasons: The weightOrRoot is transformed to the orthogonal basis and the other points of its orbit are constructed by permuting its coordinates using the built-in Mathematica function Permutations. For example, the orbit of the first simple root of A 4 is</p>

				<p>In</p>

				<p>[42]:= Orbit[First[OrthogonalSimpleRoots[A4]]]</p>

				<p>Out</p>

				<p>[42]</p>

				<figure>
					<trash>:= {(−1, 0, 0, 0, 1),(−1, 0, 0, 1, 0),(−1, 0, 1, 0, 0),(−1, 1, 0, 0, 0),(0, −1, 0, 0, 1), (0, −1, 0, 1, 0),(0, −1, 1, 0, 0),(0, 0, −1, 0, 1),(0, 0, −1, 1, 0),(0, 0, 0, −1, 1), (0, 0, 0, 1, −1),(0, 0, 1, −1, 0),(0, 0, 1, 0, −1),(0, 1, −1, 0, 0),(0, 1, 0, −1, 0), (0, 1, 0, 0, −1),(1, −1, 0, 0, 0),(1, 0, −1, 0, 0),(1, 0, 0, −1, 0),(1, 0, 0, 0, −1)}</trash>


				</figure>

				<p>which is in fact the A 4 root system without the zero roots.</p>

				<p>With the same set of Weyl group generators, defined by the roots used, every vector is uniquely associated with only one orbit. In turn every element of an orbit allows us to generate the entire orbit by reflecting at the hyperplanes defined by the roots. The hyperplanes divide the space into so-called Weyl chambers. An orbit has no more than one distinct element in every chamber and the Weyl group permutes the chambers. The so-called dominant chamber has elements with only positive coordinates in the ω-basis, which serves as a definite element for the orbits associated with them. The test function DominantQ[weightOrRoot] gives True if weightOrRoot is in the dominant chamber and False otherwise. The dominant root of Out[42] in the ω-basis is</p>

			</div>
			<div>
				<head>In[43]</head>

				<p>:= OmegaBasis[Select[%, DominantQ]] Out[43]:= 1 0 0 1 If an orbit is created by LieART it is saved as a DownValue of Orbit associated with its dominant root or weight. Whenever an orbit of a non-dominant weight or root is needed, LieART first seeks the DownValues of Orbit for the weight or root, to see if the orbit has already been generated. Reusing computed orbits saves CPU time especially for Lie algebras other than A n and the described procedure avoids saving the same orbit multiple times as DownValue involving different roots or weights.</p>

				<p>The size of the orbit, i.e., its numbers of elements, denoted by |O(x)|, is implemented as the function</p>

			</div>
			<div>
				<head>DimOrbit[weightOrRoot,simpleroots]</head>

				<p>or DimOrbit[weightOrRoot] if all simple roots of the associated Lie algebras should be used. The size of the orbit in Out[42] is</p>

			</div>
			<div>
				<head>In[44]</head>

				<p>:= DimOrbit[First[OrthogonalSimpleRoots[A4]]]</p>

				<p>Out</p>

				<p>[44]:= 20 4.3. Roots</p>

			</div>
			<div>
				<head>RootSystem[algebra]</head>

				<p>root system of algebra</p>

			</div>
			<div>
				<head>ZeroRoots[algebra]</head>

				<p>zero roots associated with the Cartan subalgebra of algebra Height[root] height of a root within the root system</p>

			</div>
			<div>
				<head>HighestRoot[algebra]</head>

				<p>highest root of the root system of algebra</p>

			</div>
			<div>
				<head>PositiveRootQ[root]</head>

				<p>gives True if root is a positive root and False otherwise</p>

			</div>
			<div>
				<head>NumberOfPositiveRoots[algebra]</head>

				<p>number of positive roots of algebra PositiveRoots[algebra] gives only the positive roots of algebra</p>

			</div>
			<div>
				<head>Roots</head>

				<p>The roots of a Lie algebra can be built from the simple roots. There are two traditional approaches: (a) building the roots from linear combinations of simple roots. Since not all linear combinations of simple roots are roots, the difficulty lies in filtering out combinations that are roots. (b) Starting from a highest root the roots can be constructed by subtracting simple roots. LieART uses yet another approach: It builds the orbits of the simple roots by applying the Weyl group of the Lie algebra and adds the n-fold degenerated zero roots corresponding to the Cartan subalgebra. The simple roots of the same length belong to the same orbit, e.g., for A n there is only one orbit besides the zero orbit (see Out[42]). Nevertheless, the orbits of all simple roots are generated and then united. The fact that non-zero roots are non-degenerate allows us to remove duplicate roots obtained by the described procedure.</p>

				<p>The function RootSystem[algebra] constructs the root system by the procedure described above. As a non-trivial example we demonstrate the procedure on G 2 , which has two non-trivial orbits and the zero orbit: The two simple roots of G 2</p>

				<p>In</p>

				<p>[45]:= OmegaBasis[OrthogonalSimpleRoots[G2]] Out[45]:= 2 −1 , −3 2 have different lengths:</p>

			</div>
			<div>
				<head>In[46]</head>

				<p>:= DMatrix[G2] Out[46]</p>

				<figure>
					<trash>:= 1 3 0 0 1</trash>


				</figure>

				<p>Generating the Weyl group orbits of each of the simple roots</p>

			</div>
			<div>
				<head>In[47]</head>

				<p>:= Orbit /@ OmegaBasis[OrthogonalSimpleRoots[G2]] Out[47]:=</p>

				<figure>
					<trash>− 2 1 − 1 0 − 1 1 1 − 1 1 0 2 − 1 − 3 1 − 3 2 0 − 1 0 1 3 − 2 3 − 1</trash>


				</figure>

				<p>and adding the twofold degenerated zero roots constructed by ZeroRoots[algebra] In[48]:= ZeroRoots[G2] Out[48]:= 0 0 , 0 0 yields the full G 2 root system, displayed in spindle shape, as defined below in section 4.4.1</p>

				<p>In</p>

				<p>[49]:= RootSystem[G2, SpindleShape -&gt; True] Out[49]</p>

				<figure>
					<trash>:= 0 1 3 −1 1 0 −1 1 −3 2 2 −1 0 0 0 0 −2 1 3 −2 1 −1 −1 0 −3 1 0 −1</trash>


				</figure>

				<p>where a row stands for the same height of the roots. The height of a root is defined as the sum of coefficients in its linear combination of simple roots, i.e., the sum of coordinates in the α-basis. It is implemented by Height[root]. The highest root has the largest height, implemented in LieART as HighestRoot[algebra], which simply returns the first root of the root system, since the latter is sorted by the height of the roots decreasingly. E.g. for G 2 :</p>

			</div>
			<div>
				<head>In[50]</head>

				<p>:= HighestRoot[G2] Out[50]:= 0 1</p>

				<p>The positive roots are the roots that are only positive linear combinations of simple roots, i.e., the coordinates in the α-basis are all positive, with at least one being non-zero, to exclude the zero roots. The function</p>

			</div>
			<div>
				<head>PositiveRootQ[root]</head>

				<p>tests if root is positive. The root may be in any basis and will be transformed into the α-basis, where its coordinates are tested accordingly. The number of positive roots are explicitly stated as NumberOfPositiveRoots[algebra] in LieART. It serves as a limiter to the nested reflections for the generation of Weyl group orbits. There is a theorem stating that the maximum number of reflections building an element of the Weyl group is equal to the number of positive roots of the corresponding Lie algebra.</p>

				<p>Since the root system is sorted by height, the positive roots come first. PositiveRoots[algebra] extracts only those with the use of NumberOfPositiveRoots[algebra]. E.g., for G 2 :</p>

			</div>
			<div>
				<head>In[51]</head>

				<p>:= PositiveRoots[G2] Out[51]</p>

				<figure>
					<trash>:= 0 1 , 3 − 1 , 1 0 , − 1 1 , − 3 2 , 2 − 1 4.4. Representations WeightOrthogonal[algebraClass][label ]</trash>


				</figure>

				<p>weight in the orthogonal basis defined by its algebra algebraClass and Dynkin label WeightAlpha[algebraClass][label ] weight in the α-basis defined by its algebra algebraClass and Dynkin label</p>

			</div>
			<div>
				<head>Weight[algebraClass][label ]</head>

				<p>weight in the ω-basis defined by its algebra algebraClass and Dynkin label</p>

			</div>
			<div>
				<head>Irrep[algebraClass][label ]</head>

				<p>irrep described by its algebra algebraClass and Dynkin label WeightLevel[weight,irrep] Level of the weight within the irrep Height[irrep] height of irrep</p>

			</div>
			<div>
				<head>SingleDominantWeightSystem[irrep]</head>

				<p>dominant weights of irrep without their multiplicities</p>

			</div>
			<div>
				<head>WeightMultiplicity[weight,irrep]</head>

				<p>computes the multiplicity of weight within irrep</p>

			</div>
			<div>
				<head>DominantWeightSystem[irrep]</head>

				<p>dominant weights of irrep with their multiplicities</p>

			</div>
			<div>
				<head>WeightSystem[irrep]</head>

				<p>full weight system of irrep</p>

			</div>
			<div>
				<head>Irrep[algebra][dimname]</head>

				<p>irrep entered by its algebra and dimname</p>

			</div>
			<div>
				<head>ProductIrrep[irreps]</head>

				<p>head of product irreps</p>

			</div>
			<div>
				<head>Delta[algebra]</head>

				<p>half the sum of positive roots of algebra (δ=(1, 1, . . .))</p>

			</div>
			<div>
				<head>WeylDimensionFormula[algebra]</head>

				<p>explicit Weyl dimension formula for algebra</p>

			</div>
			<div>
				<head>Dim[irrep]</head>

				<p>dimension of irrep</p>

			</div>
			<div>
				<head>DimName[irrep]</head>

				<p>dimensional name of irrep</p>

			</div>
			<div>
				<head>Index[irrep]</head>

				<p>index of irrep</p>

			</div>
			<div>
				<head>CongruencyClass[irrep]</head>

				<p>congruency class number of irrep</p>

			</div>
			<div>
				<head>Basic Properties of Irreps</head>

				<p>As explained in Section 4.1.6 a representation is a set of matrices that satisfies the same commutation relations as the algebra. Each of the matrices can be labeled by the weight vector with the eigenvalues of the matrices corresponding to the generators of the Cartan subalgebra, and we will refer to the weight vector simply as weight. The weight vector has the dimension of the Cartan subalgebra, i.e., the rank of the algebra, and not the dimension of the space the matrices act on. The latter depends on the particular representation.</p>

				<p>The weights λ can be written as linear combination of simple roots and a crucial theorem states that the so-called Dynkin labels a i defined as</p>

				<figure>
					<trash>a i = 2 (λ, α i ) (α i , α i ) , i = 1, . . . , n (19)</trash>


				</figure>

				<p>are integers for all simple roots α i . (Please note that this is also true if λ is replaced by any simple root, since this constitutes an element of the Cartan matrix as defined in (5).) The Dynkin labels are in particular used to label weights (and roots). The smallest non-zero weights with a i ≥ 0 are called the fundamental weights ω i . They define the ω-basis or Dynkin basis already introduced. They are implemented in LieART as OrthogonalFundamentalWeights[algebra] in the orthogonal basis and we have given an example for A 4 in Out[37]. The Dynkin labels a i of a weight λ are the coefficients of its linear combination of fundamental weights, i.e., the a i are the coordinates in the ω-basis, which can be displayed as a row vector with comma separated entries or as a framed box following the convention of some textbooks:</p>

				<figure>
					<trash>λ = n i=1 a i ω i = (a 1 , a 2 , . . . , a n ) = a 1 a 2 . . . a n . (20)</trash>


				</figure>

				<p>A weight in LieART is represented by three different heads, depending on its basis, in analogy with the roots: WeightOrthogonal[algebraClass][label ] for a weight in the orthogonal basis, in the α-basis</p>

			</div>
			<div>
				<head>WeightAlpha[algebraClass][label ]</head>

				<p>and simply Weight[algebraClass][label ] in the ω-basis, where we omit the explicit &quot; Omega &quot; for brevity, because the ω-basis is the natural basis for weights. (The same can be said for the α-basis for roots, favoring the shorter head Root instead of RootAlpha in the α-basis.</p>

				<p>Unfortunately this would clash with the built-in Mathematica function Root[f ,k ] representing the k th root of a polynomial equation defined by f [x] = 0.) The algebraClass can only be A, B, C or D to indicate a classical Lie algebra or E6, E7, E8, F4 or G2 for the exceptionals. The label stands for the comma-separated coordinates. This form of the weight is displayed in InputForm and FullForm. E.g., the first fundamental weight of A 4 in all three bases reads:</p>

			</div>
			<div>
				<head>In[52]</head>

				<p>:= {#,AlphaBasis[#],OmegaBasis[#]}&amp; @First[OrthogonalFundamentalWeights[A4]]//InputForm</p>

			</div>
			<div>
				<head>Out[52]</head>

				<p>:= {WeightOrthogonal[A]</p>

				<figure>
					<trash>[4/5,-1/5,-1/5,-1/5,-1/5], WeightAlpha[A][4/5,3/5,2/5,1/5], Weight[A][1,0,0,0]</trash>


				</figure>

				<p>}</p>

				<p>Since weights are linear combinations of roots, many properties of roots translate to weights. The Weyl group also applies to weights and the weight space is also divided into Weyl chambers. A weight with only positive coordinates lies in the dominant Weyl chamber and is called a dominant weight. In analogy with the highest root, every irreducible representation (irrep) has a non-degenerate highest weight, denoted as Λ, which is also a dominant weight, but not necessarily the only dominant weight of the irrep. The weight system of the irrep can be computed from the highest weight Λ by subtracting simple roots. Thus, a highest weight Λ uniquely defines the irrep, and since a particular Lie algebra has infinitely many irreps, it serves as a label for the irrep itself using the same denotation, Λ.</p>

				<p>In LieART an irrep is represented by Irrep[algebraClass][label ], where algebraClass defines the Lie algebra class in the same manner as for weights and roots, and label is the comma-separated label of the highest weight of the irrep. E.g., the 10 dimensional irrep of A 4 has the highest weight (0, 1, 0, 0) and thus the irrep can be entered as Irrep[A][0,1,0,0].</p>

				<p>The so-called Dynkin label of an irrep is similar to the notation of a weight, but since the highest weight has only positive label entries the commas between them can be ommitted, as long as this is unambiguous. The Dynkin label in LieART is displayed in StandardForm, e.g., the 10 of A 4 :</p>

			</div>
			<div>
				<head>In[53]</head>

				<p>:= Irrep[A][0,1,0,0]//StandardForm</p>

			</div>
			<div>
				<head>Out[53]</head>

				<p>:= (0100)</p>

				<p>If at least one of the entries in the Dynkin labels has more than a single digit, all entries are separated by commas to avoid ambiguities, which is the standard textbook convention:</p>

			</div>
			<div>
				<head>In[54]</head>

				<p>:= Irrep[A][0, 10, 3, 1] // StandardForm</p>

			</div>
			<div>
				<head>Out[54]</head>

				<p>:= (0, 10, 3, 1)</p>

			</div>
			<div>
				<head n="4.4.1">Weight System</head>

				<p>The conventional approach to computing all weights of an irrep is to subtract simple roots from the highest weight Λ that defines the irrep. The Dynkin label of the highest weight Λ = (a 1 , a 2 , . . . , a n ) reveals how many times each simple root can be subtracted: the ith root can be subtracted a i times. The level of a weight is the number of simple root that need to be subtracted from the highest weight to obtain it. A weight may be obtained by different subtraction routes, but it always involves the same number of simple roots, thus its level is unique. As explained earlier, the α-basis exhibits the coefficients of the linear combination of simple roots, which are rational numbers in general. The difference between these coefficients of the weight and the highest weight show how many times each simple roots has been subtracted from the latter. The sum over these differences, for each simple root, gives the level of the weight:</p>

				<figure>
					<trash>L(λ, Λ) = n i=1 ¯ Λ i − ¯ λ i (21) where λ = ( ¯ λ 1 , . . . , ¯ λ n ) and Λ = ( ¯ Λ 1 , . . . , ¯ Λ n</trash>


				</figure>

				<p>) is the weight and highest weight in the α-basis, respectively. The LieART function WeightLevel[weight,irrep] implements this procedure. The highest level of an irrep is called its height. Please note that the highest weight has the lowest level, which is zero. The weight with the highest level has the coefficients of the highest weight in the alpha basis, with negative sign and rearranged (if the irrep is complex), i.e., the sum over them is the negative of the sum of the highest weight. Thus, the height of an irrep with highest weight Λ is</p>

				<figure>
					<trash>ht(Λ) = 2 n i=1 ¯ Λ i , (22)</trash>


				</figure>

				<p>which is available in LieART as Height[irrep].</p>

				<p>The algorithm to compute the weight system used in LieART is an implementation of the scheme developed in [19]. It deviates from the traditional procedure described above for performance reasons. Some weights of an irrep may be degenerated and the procedure with subtracting simple roots only yields an upper limit of this degeneracy, which is the number of subtraction routes that lead to a weight. To compute the multiplicity m λ of a weight λ of the irrep with highest weight Λ, the so-called Freudenthal recursion formula is usually used:</p>

				<figure>
					<trash>2 α∈∆ + k≥0 (λ+kα, α) m λ+kα = [(Λ+δ, Λ+δ) − (λ+δ, λ+δ)] m λ (23) where ∆ +</trash>


				</figure>

				<p>denotes the positive root system, δ=(1, 1, . . . , 1) is half the sum of all positive roots in the ω-basis and m λ+kα is the already computed multiplicity of a weight λ + kα that is higher than λ. The sum over k is finite because the weight λ + kα must be a member of the weight system of the irrep under consideration.</p>

				<p>The recursive nature of the Freudenthal formula makes the computation of weight multiplicities the most CPU time consuming procedure in the determination of the weight system of an irrep. The algorithm developed in [19] exploits the Weyl group in both the weight and the root system. The weight system of an irrep is a collection of Weyl group orbits, represented by their unique dominant weight. The multiplicity of the dominant weight is the same for all weights of the associated orbit. Thus, a weight system can be constructed by (a) determining the dominant weights of the irrep, (b) computing their multiplicity and (c) generating the orbits of the dominants weights with the same multiplicity by application of the Weyl group of the associated algebra.</p>

				<p>In LieART the function SingleDominantWeightSystem[irrep] determines the dominant weights of irrep by successively subtracting positive roots starting from the highest weight and keeping only the dominant weight of the result in every step. This process terminates, because there are smallest dominant weights, i.e., the fundamental weights, constituting a lower boundary. E.g., the 40 of A 4 has two distinct dominant weights:</p>

			</div>
			<div>
				<head>In[55]</head>

				<p>:= SingleDominantWeightSystem[Irrep[A][0, 0, 1, 1]] Out[55]:= { 0 0 1 1 , 0 1 0 0 } Thus, an improved version of the Freudenthal formula considers only dominant weights λ. The second exploitable property is the existence of a stabilizer of the weight, a subgroup of its Weyl group W that fixes the weight: Stab W (λ) = W T := {w ∈ W | wλ = λ} . (24)</p>

				<p>The stabilizer W T reduces the number of independent scalar products and previous computed multiplicities, because for w ∈ W T , (λ+kα, α) = (w(λ+kα i ), wα i ) = ((λ+kwα i ), wα i ) and m λ+kαi =m w(λ+kαi) =m λ+kwαi .</p>

				<p>Since the elements of the Weyl group W are reflections at simple roots, the stabilizer group is defined by the reflection at simple roots that map λ onto itself. Because of (18) this is the case, when (λ, α i ) = 0. If λ is expressed in the ω-basis as λ= n i ω i the scalar product with the ith simple root is zero, when n i = 0. Let T be a set of these indices, i.e., T = {i | n i =0}, and let ∆ T be the root system based on the simple roots labeled by T .</p>

				<p>The group W T , which is the inclusion of W T and the negative identity element w=−1 as W T = W T , −1, decomposes the root system into orbits o 1 , . . . , o r , defined by W T α i . Each orbit has a unique representative ξ i in the positive roots (ξ i ∈∆ + ). The ξ i &apos;s are those positive roots, that have non-zero coefficients in the ω-basis at the positions where λ has zeros, i.e., ξ i = m i ω i with m i ≥0 for i∈T .</p>

				<p>The computation of the multiplicity m λ of the dominant weight λ is then accomplished by the modified Freudenthal formula:</p>

				<figure>
					<trash>n i=1 |o i | ∞ k=1 (λ+kξ i , ξ i ) m λ+kξi = [(Λ+δ, Λ+δ) − (λ+δ, λ+δ)] m λ (25)</trash>


				</figure>

				<p>where |o i | are the sizes of the orbits. It is important to note that these sizes are |o i | = |W T ξ i | if ξ i ∈∆ T and |o i | =2 |W T ξ T | if ξ i / ∈∆ T , because in the former case the negative roots are included in W T ξ i , i.e., the −1, while only positive roots are in the orbit W T ξ i if ξ i / ∈∆ T , requiring a factor of 2 for the same reason as on the left-hand side of (23). It is ξ i ∈∆ T if (λ, ξ i ) =0.</p>

				<p>The higher weight λ + kξ i is not necessarily a dominant weight, but can always be reflected to the dominant chamber to obtain the corresponding multiplicity that is already computed.</p>

				<p>The computation of weight multiplicities is implemented in LieART as WeightMultiplicity[weight,irrep] following the above algorithm, using several helper functions: T[weight] gives the set T , the positions of zeros of the coefficients of weight in the ω-basis, Xis[algebra,t] determines the ξ&apos;s based on the set T which should be supplied via the argument t, Alphas[algebra,t] gives α i with i ∈ T to construct the orbit W T ξ i . XisAndMul[algebra,t] yields a list of the ξ i &apos;s together with their associated orbit size |o i |. Since the possible subsets T of zeros in the weight coefficients for a specific algebra are limited, we follow the suggestion of [19] and save this in list form as XisAndMul for reuse upon first evaluation in the course of a calculation. Saved values of XisAndMul can be retrieved by Definition[XisAndMul].</p>

				<p>Take for example the dominant weight 0 1 0 0 of the 40 of A 4 from Out[55]. The set of indices T is</p>

			</div>
			<div>
				<head>In[56]</head>

				<p>:= T[Weight[A][0,1,0,0]] Out[56]:</p>

				<p><formula>=   1 3 4  </formula></p>

				<p>or in InputForm: {{1},{3},{4}}. (The structure as &quot; list of lists &quot; is due to the use of the Mathematica built-in functions Position and Extract.) The ξ i &apos;s and the sizes of their associated orbits |o i | are</p>

			</div>
			<div>
				<head>In[57]</head>

				<p>:= XisAndMul[A4, T[Weight[A][0,1,0,0]]] Out[57]:=</p>

				<figure>
					<trash>    1 0 0 1 12 0 −1 1 1 6 2 −1 0 0 2    </trash>


				</figure>

				<p>and the weight multiplicity of the dominant weight in the 40 of A 4 is:</p>

			</div>
			<div>
				<head>In[58]</head>

				<p>:= WeightMultiplicity[Weight[A][0,1,0,0], Irrep[A][0,0,1,1]] Out[58]:= 2</p>

				<p>The LieART function DominantWeightSystem[irrep] gives a list of the dominant weights of irrep along with their multiplicities:</p>

			</div>
			<div>
				<head>In[59]</head>

				<p>:= DominantWeightSystem[Irrep[A][0,0,1,1]] Out[59]</p>

				<figure>
					<trash>:= 0 0 1 1 1 0 1 0 0 2</trash>


				</figure>

				<p>Thus, the weight system of the 40 consists of the Weyl group orbit of 0 0 1 1 and 0 1 0 0 , where every weight of the latter has a multiplicity of two. The function WeightSystem[irrep] generates these orbits based on DominantWeightSystem and explicitly duplicates weights according to the multiplicity. If no further processing is intended the option SpindleShape-&gt;True turns the output into a spindle shape display, with weights of the same level in one row. E.g., the weight system of the 40 of A 4 in spindle shape is In[60]:= WeightSystem[Irrep[A][0,0,1,1]] Out[60]:=</p>

				<figure>
					<trash>0 0 1 1 0 0 2 −1 0 1 −1 2 0 1 0 0 0 1 0 0 1 −1 0 2 −1 0 0 2 0 1 1 −2 0 2 −2 1 1 −1 1 0 1 −1 1 0 −1 0 1 0 −1 0 1 0 0 2 −1 −1 1 −1 2 −2 1 0 −1 1 1 0 −1 1 −1 0 2 −2 −1 1 −1 1 −1 1 −1 1 1 0 0 −1 1 0 0 −1 2 −2 0 1 −1 1 0 −1 −1 1 0 −1 0 −1 0 1 0 −1 0 1 1 1 −2 0 2 −2 1 −1 −2 0 0 1 −1 2 −2 0 0 −1 1 −1 0 −1 1 −1 2 −1 −1 0 −2 0 1 −1 0 0 −1 0 0 0 −1 0 −2 1 −1 0 1 −2 0 0 −1 −1 0 0 4.4.2. Properties of Irreducible Representations Dimension.</trash>


				</figure>

				<p>The dimension of an irrep, i.e., the number of its weights, can be calculated without explicitly generating the weight system. The Weyl dimension formula, which is a special case of Weyl&apos;s character formula, gives the dimension of an irrep in terms of its highest weight Λ, positive roots α∈∆</p>

				<figure>
					<trash>+ and δ=(1, 1, . . . , 1): dim(Λ) = α∈∆ + (α, Λ + δ) (α, δ) . (26)</trash>


				</figure>

				<p>It is implemented in LieART as Dim[irrep]. E.g., the dimension of the 40 of A 4 can be obtained by</p>

			</div>
			<div>
				<head>In[61]</head>

				<p>:= Dim[Irrep[A][0,0,1,1]] Out[61]:= 40</p>

				<p>The Dynkin label of irrep does not need to be numerical. By using variables the simple structure of the formula becomes explicit, e.g., for a general irrep of A 4 :</p>

			</div>
			<div>
				<head>In[62]</head>

				<p>:= Dim[Irrep[A][a,b,c,d]] Out[62]</p>

				<figure>
					<trash>:= 1 288 (a + 1)(b + 1)(c + 1)(d + 1)(a + b + 2)(b + c + 2)(c + d + 2)(a + b + c + 3)(b + c + d + 3)(a + b + c + d + 4)</trash>


				</figure>

				<p>Internally, the Weyl dimension formula is computed by WeylDimensionFormula[algebra] as a pure function with the digits of the Dynkin label as parameters. E.g. for A 4 :</p>

			</div>
			<div>
				<head>In[63]</head>

				<p>:= WeylDimensionFormula[A4]//InputForm</p>

			</div>
			<div>
				<head>Out[63]</head>

				<p>:=</p>

				<figure>
					<trash>Function[{a1,a2,a3,a4},((1+a1) * (1+a2) * (1+a3) * (1+a4) * (2+a1+a2) * (2+a2+a3) * (2+a3+a4) * (3+a1+a2+a3) * (3+a2+a3+a4) * (4+a1+a2+a3+a4))/288]</trash>


				</figure>

				<p>The function Dim[irrep] acts only as a wrapper applying the pure function to the specified Dynkin label in the argument of Dim.</p>

				<p>Index. Another important property of an irrep Λ is its index, denoted as l(Λ), which is an eigenvalue of the Casimir invariant normalized to be an integer:</p>

				<figure>
					<trash>l(Λ) = dim(Λ) ord(L) (Λ, Λ + 2δ) , (27)</trash>


				</figure>

				<p>where ord(L) is the order of the Lie algebra L, which is equivalent to the number of roots or the dimension of the adjoint irrep. The index is related to the length of the weights and has applications in renormalization group equations and elsewhere. The corresponding LieART function is Index[irrep]. E.g., the index of the 40 of A 4 is:</p>

			</div>
			<div>
				<head>In[64]</head>

				<p>:= Index[Irrep[A][0,0,1,1]] Out[64]:= 22</p>

				<p>The label of irrep does not need to be numerical, similar to Dim.</p>

				<p>Congruency Class. The congruency class expands the concept of n-ality of SU(N ), which in turn is a generalization of SU(3) triality, to all other simple Lie algebras. LieART uses congruency classes to characterize irreps, especially for the distinction of irreps of the same dimension and with the same index. We follow the definitions of [8, 20], labeling the congruency class by the congruency number, which is a single number for A n , B n , C n , E 6 , E 7 , E 8 , F 4 and G 2 and a two component vector for D n . For an irreducible representation (a 1 a 2 . . . a n ) the congruency number (vector) c is:</p>

				<figure>
					<trash>A n : c = n k=1 ka k (mod n + 1) (28a) B n : c = a n (mod 2) (28b) C n : c = n−1 2 k=0 a 2k+1 (mod 2) (28c) D n : c =    a n−1 + a n (mod 2) 2 n−3 2 k=0 a 2k+1 + (n − 2)a n−1 + na n (mod 4)    (28d) E 6 : c = a 1 − a 2 + a 4 − a 5 (mod 3) (28e) E 7 : c = a 4 + a 6 + a 7 (mod 2) (28f) E 8 , F 4 , G 2 : c = 0 (28g)</trash>


				</figure>

				<p>Please note that the congruency class definitions of [8, 20], which we use, differ from [7] for the D n &apos;s : For D 4 , i.e. SO(8), the second component of [7] is half of the definition above. The congruency class for D 5 is only a single number in [7], which is the same as the second component of the D 5 congruency class vector of our definition from [8, 20] (with no factor of 2).</p>

				<p>These congruency numbers (vectors) c are implemented as CongruencyClass[irrep] in LieART. E.g., the congruency numbers of the three eight dimensional irreps of SO(8) are all distiguished by their congruency number vector:</p>

			</div>
			<div>
				<head>In[65]</head>

				<p>:= CongruencyClass[{Irrep[D][1,0,0,0], Irrep[D][0,0,1,0], Irrep[D][0,0,0,1]}]</p>

				<p>Out</p>

				<p>[65]:= {(02),(12),(10)}</p>

				<p>The head of a congruency vector is CongruencyVector and it is displayed as (c 1 c 2 ), i.e. without commas separating the two components similar to the Dynkin label of irreps.</p>

			</div>
			<div>
				<head n="4.4.3">Representation Names</head>

				<p>The Dynkin label of an irreducible representation together with its Lie algebra uniquely specifies it, e.g., (0011) of A 4 . An irrep in LieART is also represented (FullForm) by the Dynkin label and a Mathematica head that indicates the algebra class. E.g., the irrep (0011) of A 4 is represented by Irrep[A][0,0,1,1] in LieART.</p>

				<p>However, it is common practice to name representations by their dimension, the dimensional name, which is often times shorter. The dimension of a representation is not unique, i.e., there are different irreps with the same dimensions, which might be accidental or because of a relation between them. If it is accidental, irreps with the same dimension have primes (dim ) in their dimensional name, e.g., the 175 of A 4 is unrelated to the 175. Irreps can be related by conjugation, when they are complex. One of the irreps is written with an overbar (dim). E.g., the 10 of A 4 is the conjugate of the 10. Due to the high symmetry of SO(8) irrep, more than two related irreps of the same dimension exist. In the case of SO(8) subscripts specify the irreps completely.</p>

				<p>The introduced properties of representations, the dimension, the index and the congruency class serve us well to discriminate between irreps with the same dimension. LieART has an algorithm implemented that determines the dimensional name of an irrep, following the naming conventions of [7]</p>

				<figure>
					<figDesc>:</figDesc>

				</figure>

			</div>
			<div>
				<head>1.</head>

				<p>To determine the dimensional name of a specific irrep, LieART collects other irreps of the same dimensionality by brute-force scanning through a generated set of irreps. 2. Irreps that are related by conjugation or the symmetry of SO(8) not only have the same dimension, but also the same index. Unrelated irreps of equal dimension have different indices and can be organized and labeled by their indices. They are sorted by ascending index and labeled with primes (dim ) accordingly, starting with no prime. E.g., the names of the two unrelated 70 dimensional irreps of A 4 are (the congruency class of A 4 is called &quot; Quintality &quot; ):</p>

				<figure>
					<trash>Dynkin Dimension Index Quintality Name (2001) 70 49 1 70 (0004) 70 84 1 70 3.</trash>


				</figure>

				<p>Related irreps of the same dimensionality have the same index, but mostly (see below) different congruency class numbers. For Lie algebras other than SO(8), only the conjugate of complex irreps are related. The convention here is that the irrep with higher congruency class number of the conjugated pair is labeled with an overbar (dim). Since e.g. the 70 is a complex irrep it has a related conjugated irrep, the 70 , i.e., overbars and primes may both appear in the labeling of an irrep. The above table for the determination of the primes involves only the lower congruency class number irreps of same dimensional and same index irreps. Consider the 70 and its conjugate, the 70 :</p>

				<figure>
					<trash>Dynkin Dimension Index Quintality Name (0004) 70 84 1 70 (4000) 70 84 4 70</trash>


				</figure>

				<p>If the congruency class number of a complex irrep is zero, it conjugate also has a congruency class number of zero. In this case, where all three, the dimension, the index and the congruency class number are the same, the structure of the Dynkin labels are consulted: With the Dynkin label interpreted as digits of an integer number, the smaller &quot; number &quot; is labeled with the overbar. E.g., the 126 dimensional irreps of A 4 are</p>

				<figure>
					<trash>Dynkin Dimension Index Quintality Name (2010) 126 105 0 126 (0102) 126 105 0 126 (5000) 126 210 0 126 (0005) 126 210 0 126</trash>


				</figure>

				<p>Observe that this rule only applies for zero congruency class number: The 70 has a &quot; larger &quot; number (4000) than the 70 with (0004). 4. For SO(8) irreps the convention for the labeling with primes are the same as for all other Lie algebras. Due to the three-fold symmetry most irreps come in sets of three with the same dimension and index.</p>

				<p>If only one digit of the Dynkin label is non-zero it is called the spinor, vector or conjugate irrep, depending on the dot in the Dynkin diagram it corresponds to. Usually they can be distinguished by the congruency class number, which is a two component vector for SO(8): (01) for a vector irrep, (10) for a spinor and (11) for the conjugate. The irrep is then labeled by the subscripts &quot; v &quot; , &quot; s &quot; and &quot; c &quot; , resp. E.g., the three 8 dimensional irreps of SO(8) are</p>

				<figure>
					<trash>Dynkin Dimension Index Congruency vector Name (1000) 8 1 (01) 8 v (0001) 8 1 (10) 8 s (0010) 8 1 (11) 8 c</trash>


				</figure>

				<p>Some irreps with more than one non-zero digit of the Dynkin label with the same congruency vectors as above are labeled the same way if they are unique. However, if there is more than one irrep with the same dimension, index and also congruency vector, there is more than one digit of the Dynkin label non-zero. The subscript label is then a mixture like &quot; sv &quot; , and the ordering is determined by the Dynkin digit beginning with the largest. E.g. the 224 dimensional irreps of SO(8):</p>

				<figure>
					<trash>Dynkin Dimension Index Congruency vector Name (2010) 224 100 (12) 224 vc (2001) 224 100 (10) 224 vs (1020) 224 100 (02) 224 cv (1002) 224 100 (02) 224 sv (0021) 224 100 (10) 224 cs (0012) 224 100 (12) 224 sc</trash>


				</figure>

				<p>There are also cases where the congruency vector is zero in both components for all irreps of the same dimension and index. In this case subtracting the same integer from every Dynkin digit to obtain irreps with non-zero congruency class vector has proven to be a reliable way to label the irreps. E.g., the 35 dimensional irreps can be related to the 8 dimensional ones and, e.g., the primed 840 dimensional irreps to the 56 dimensional ones:</p>

				<figure>
					<trash>Dynkin Dimension Index Congruency vector Name (1000) 8 1 (02) 8 v (0010) 8 1 (12) 8 c (0001) 8 1 (10) 8 s (2000) 35 10 (00) 35 v (0020) 35 10 (00) 35 c (0002) 35 10 (00) 35 s (1010) 56 15 (10) 56 s (1001) 56 15 (12) 56 c (0011) 56 15 (02) 56 v (2020) 840 540 (00) 840 s (2002) 840 540 (00) 840 c (0022) 840 540 (00) 840 v</trash>


				</figure>

				<p>In LieART the function DimName[irrep] determines the dimensional name according to the algorithm described above, which is automatically displayed if an irrep is displayed in TraditionalForm. Several internal helper functions are called by DimName. The function GetIrrepByDim[algebra,dim,maxDynkinDigit] provides irreps with the same dimension, which are then gathered into sublists by DimName.</p>

			</div>
			<div>
				<head>The function</head>

				<p>SortSameDimAndIndex sorts the irreps of same dimension and index by their congruency class, and automatically by the Dynkin label viewed as &quot; numbers &quot; , if the congruency class numbers are the same. The positions of the lists of same-index irreps determines the number of primes to apply and the position of the irrep within the same-index list, whether it should be labeled by an overbar. In case of an SO(8) irrep</p>

				<p>DimName branches to the function SO8Label[irrep], which uses SimpleSO8Label to give a subscript of &quot; v &quot; , &quot; s &quot; and &quot; c &quot; in the case where the congruency vector in unique. If the congruency vector is not unique, but non-zero, ConcatSO8Label concatenates the mixed subscripts like &quot; sv &quot; in the correct ordering. If the congruency vector is zero in both components the irrep is related to irreps with non-zero congruency vector by ReducedDynkinLabel.</p>

				<p>Limitations. The determination of the primes has one limitation, which requires explanation: The function GetIrrepByDim[algebra,dim,maxDynkinDigit] determines irreps of the same dimension. In a brute-force fashion it generates &quot; all &quot; irreps and extracts only those that have the dimension dim. Since there are infinite many irreps of any Lie algebra, it must be constrained. This is done by imposing a maximum Dynkin digit to use for the generation of Dynkin labels. Since the numbers of possible Dynkin labels grow rapidly with the maximum Dynkin digit allowed, the limit should be very low. To compare the irrep in question with others it should be at least its maximum Dynkin digit, e.g., for (2031) it is &quot; 3 &quot; . The related irreps only have a permutation of the Dynkin label, thus they are included in the generated list of irreps up to a Dynkin digit of &quot; 3 &quot; in the example. However, for the determination of the primes for the unrelated irreps it may not suffice to generate irreps only up to the maximum Dynkin digit of the irrep in question: The number of primes are determined by the position in a list of same-dimensional irreps sorted by the index. If there is an irrep with a higher maximal Dynkin digit, e.g., &quot; 4 &quot; in our example, but at the same time has a lower index than the irrep it question, this procedure would give the irrep in question too few primes. This situation rarely happens, especially in A n &apos;s, but e.g. for G 2 it happens as early as the 77 dimensional irrep:</p>

				<figure>
					<trash>Dynkin Dimension Index Congruency number Name (30) 77 44 0 77 (02) 77 55 0 77</trash>


				</figure>

				<p>When determining the name of (02) of G 2 the Dynkin labels would only be generated up to a maximum Dynkin digit of &quot; 2 &quot; , the (30) would not appear and thus the (02) would be labeled without any prime. The determination of the name of (30) would &quot; see &quot; the (02), but would determine no prime for (30) because of its lower index compared to (02). For these two irreps the problem can be solved by generating irreps up to the maximum Dynkin digit plus one for the irrep in question, i.e., up to &quot; 3 &quot; for (02). Because the Dynkin label of a G 2 irrep is small, this is easily manageable. In fact, we have implemented the addition of three to the maximum Dynkin digit for G 2 , because for some higher dimensions the problem will reappear. However, for Lie algebras with long Dynkin labels, the number of generated Dynkin labels becomes large and its construction slows LieART down and consumes a large amount of memory. We have found a balance between accuracy and efficiency, which pushes this problem to very high dimensional irreps, by defining the following number to add to the maximum Dynkin digit of the irrep in question: 1 for A n ,B n ,C n and D n with n ≤ 4, 0 for A n ,B n ,C n and D n with n ≥ 5, 1 for E 6 and F 4 , 0 for E 7 and E 8 and 3 for G 2 . Please note that this limitation is only connected to the labeling of irreps with primes. Computations in LieART are always performed using the Dynkin label as in the FullForm. If in doubt one can always use the Dynkin label displayed in StandardForm, InputForm and FullForm which serves as the unique identifier of an irrep.</p>

				<p>Besides its Dynkin label, the alternative definition of Irrep as Irrep[algebra][dimname] can be used to specify an irrep by its dimensional name as dimname and its algebra as algebra. The algebra must be fully specified, such as A4, SU5, E6, not only the algebra class such as A. The dimname is an integer for the dimension with a Bar[dim] wrapped around it for a conjugated irrep or an IrrepPrime[dim,n] for an irrep with n primes. If only one prime is needed the second argument n may be omitted. The Bar and IrrepPrime can be combined in any sequence. E.g., the 175 can be entered by</p>

			</div>
			<div>
				<head>In[66]</head>

				<p>:= Irrep[A4][IrrepPrime[Bar[175]]]//InputForm</p>

			</div>
			<div>
				<head>Out[66]</head>

				<p>:= Irrep[A][0, 0, 2, 1] Alternatives are Irrep[SU5][IrrepPrime[Bar[175]]], Irrep[SU5][Bar[IrrepPrime[175]]] and Irrep[A4][IrrepPrime[Bar[175],1]]. Internally the function GetIrrepByDimName[algebra, dimname] determines the corresponding Dynkin label. It uses the function GetIrrepByDim mentioned above to find all irreps with the same dimension and then extract the irrep with the identical dimensional name. If the user specifies an irrep that does not exist, e.g. an 11 of A 4 , the comparison must stop at some point. It has been chosen that GetIrrepByDim generates only irreps with a maximum Dynkin digit as set by the global variable $MaxDynkinDigit. The default is $MaxDynkinDigit=3. The consequence is that the determination of the correct Dynkin label of the entered irrep may abort, because the irrep does not exist or that it involves a Dynkin digit higher that $MaxDynkinDigit=3. The latter is the case for the 70 with a Dynkin label of (0004). LieART prints an error message indicating the two possible scenarios:</p>

			</div>
			<div>
				<head>In[67]</head>

				<p>:= Irrep[A4][IrrepPrime[70]]//InputForm</p>

			</div>
			<div>
				<head>Out[67]</head>

				<p>:= Irrep::noirrep: Either an irrep with the dimension name 70 does not exist in SU(5) or it has at least one Dynkin digit higher than 3. Try with $MaxDynkinDigit set to a higher value than 3. »</p>

				<p>Increasing $MaxDynkinDigit to 4 resolves the issue:</p>

			</div>
			<div>
				<head>In[68]</head>

				<p>:= $MaxDynkinDigit=4; Irrep[A4][IrrepPrime[70]]//InputForm</p>

			</div>
			<div>
				<head>Out[68]</head>

				<p>:= Irrep[A][0,0,0,4] 4.5. Tensor Product Decomposition</p>

			</div>
			<div>
				<head>DecomposeProduct[irreps]</head>

				<p>decomposes the tensor product of irreps</p>

			</div>
			<div>
				<head>DominantWeightsAndMul[weights]</head>

				<p>filters and tallies dominant weights of weights by multiplicities SortOutIrrep[dominantWeightsAndMul ] sorts out the irrep of largest height from the collection of dominant weights domi- nantWeightsAndMul WeightSystemWithMul[irrep] full weight system of irrep with multiplic- ities TrivialStabilizerWeights[weights] drops weights that lie on a chamber wall</p>

			</div>
			<div>
				<head>ReflectToDominantWeightWithMul[weightAndMul ]</head>

				<p>reflects weightAndMul to the dominant chamber and multiplies the parity of the reflection to the multiplicity</p>

				<p>Tensor product decomposition.</p>

				<p>Tensor products of irreps can be decomposed into a direct sum of irreps. The product of two irreps R 1 and R 2 can be decomposed as</p>

				<figure>
					<trash>R 1 ⊗ R 2 = i m i R i (29) with the following dimension and index sum rules: dim(R 1 ⊗ R 2 ) = dim(R 1 ) · dim(R 2 ) = i m i dim(R i ) (30) l(R 1 ⊗ R 2 ) = l(R 1 ) dim(R 2 ) + dim(R 1 )l(R 2 ) = i m i l(R i ). (31) 4.5.1. Generic Algorithm A straight</trash>


				</figure>

				<p>-forward method to compute the right-side of (29) is the following: Add all weights of R 2 to each weight of R 1 . The resulting dim(R 1 ) · dim(R 2 ) weights belong to the different irreps R i , which must be sorted out. Instead of all weights, one can consider just the dominant weights in the product, as each of the dominant weights represents an orbit in the irreps R i . As an irrep is a collection of orbits, some of the dominant weights in the product represent the highest weight of an irrep in the decomposition. There is a unique dominant weight that represents the irrep of largest height in the decomposition. The sorting procedure should start with this dominant weight viewed as the highest weight of an irrep and then construct the dominant weight system of the corresponding irrep. The dominant weight system of the irrep with largest height should then be subtracted from the combined dominant weights of the product to filter it out. The same procedure is applied recursively to the remaining set of dominant weights until it is empty, i.e., all irreps have been filtered out.</p>

				<p>LieART provides the function DecomposeProduct[irreps] for the decomposition of the tensor product of arbitrary many irreps of any classical or exceptional Lie algebra as argument. As a demonstration of generic algorithm we consider the decomposition of the SU(3) tensor product 8⊗8, which is</p>

			</div>
			<div>
				<head>In[69]</head>

				<p>:= DecomposeProduct[Irrep[SU3][8], Irrep[SU3][8]] Out[69]</p>

				<figure>
					<trash>:= 1 + 2(8) + 10 + 10 + 27</trash>


				</figure>

				<p>In the straight forward approach one adds all weights of the second 8 to each weight of the first 8, using the built-in Mathematica function Outer. One filters out only the dominant weights and tallies multiple occurrences thereof using the LieART function DominantWeightsAndMul[weights], which also sorts the weights according to their height, when viewed as a highest weight of an irrep. For the SU(3) tensor product 8⊗8 the dominant weights along with their multiplicities are</p>

			</div>
			<div>
				<head>In[70]</head>

				<p>:= DominantWeightsAndMul[Flatten[Outer[Plus, WeightSystem[Irrep[SU3][8]], WeightSystem[Irrep[SU3][8]]]]]</p>

				<p>Out</p>

				<p>[70]:=</p>

				<figure>
					<trash>         2 2 1 0 3 2 3 0 2 1 1 6 0 0 10         </trash>


				</figure>

				<p>The dominant weight with the largest height 2 2 must be the highest weight of an irrep. The dominant weight system of the (22) (the 27) of SU(3) is</p>

			</div>
			<div>
				<head>In[71]</head>

				<p>:= DominantWeightSystem[Irrep[A][2, 2]] Out[71]:=</p>

				<figure>
					<trash>         2 2 1 0 3 1 3 0 1 1 1 2 0 0 3         </trash>


				</figure>

				<p>It contains all dominant weights appearing in the tensor product, but with mostly smaller multiplicities. The irrep (22) can be filtered out by subtracting the multiplicities in Out[71] from Out[70]. The LieART function SortOutIrrep[dominantWeightsAndMul ] performs the task of computing the dominant weight system of the irrep corresponding to the largest height weight and subtracting it from the tensor product. It returns the dominant weights of the tensor product with the ones of the irrep removed and passes the latter using the Sow and Reap mechanism of Mathematica:</p>

			</div>
			<div>
				<head>In[72]</head>

				<p>:= Reap[SortOutIrrep[%%]] Out[72]</p>

				<figure>
					<figDesc>:= {</figDesc>
					<trash>      0 3 1 3 0 1 1 1 4 0 0 7       , (27)}</trash>


				</figure>

				<p>The function SortOutIrrep is applied recursively until the list of dominant weights with multiplicities of the tensor product is empty. E.g., applying SortOutIrrep to the dominants weights of Out[72] filters out the (03) (the 10) of SU(3):</p>

			</div>
			<div>
				<head>In[73]</head>

				<p>:= Reap[SortOutIrrep[First[%]]]</p>

				<p>Out</p>

				<p>[73]</p>

				<figure>
					<figDesc>:= {</figDesc>
					<trash>    3 0 1 1 1 3 0 0 6     , (10)}</trash>


				</figure>

				<p>The irreps filtered out by SortOutIrrep are collected by the LieART function GetIrreps and can be displayed as the result of the decomposition. However, LieART computes the tensor product decomposition by an implementation of Klimyk&apos;s formula, which is far more efficient than the straight-forward procedure described above, but the sorting-out algorithm is still used for subalgebra decomposition in Section 4.6.</p>

				<figure>
					<trash>4.5.2. Algorithm Based on Klimyk&apos;s Formula</trash>


				</figure>

				<p>Adding all weights of R 2 to each weight of R 1 is costly for large irreps. LieART&apos;s algorithm to decompose tensor-product implements Klimyk&apos;s formula [21, 22], which improves the runtime of tensor product decompositions considerably: Let λ 1 and λ 2 be weights and Λ 1 and Λ 2 the highest weights of R 1 and R 2 , respectively. Instead of adding all weights λ 1 to each weight λ 2 , the weights λ 1 are added only to the highest weight Λ 2 of R 2 together with half the sum of positive simple roots, δ=(</p>

				<figure>
					<trash>1, . . . , 1), building the set of weights µ = λ 1 + Λ 2 + δ. (32)</trash>


				</figure>

				<p>Each µ is reflected to the dominant chamber, yielding a highest weight denoted as {µ}, with sgn(µ) as the parity of the reflection. Of these dominant weights all that lie on a chamber wall are dropped. The irreps in the decomposition are R({µ} − δ).</p>

				<figure>
					<trash>Klimyk&apos;s formula reads R 1 (Λ 1 ) ⊗ R 2 (Λ 2 ) = λ1 m 1λ1 t(λ 1 + Λ 2 + δ)R({λ 1 + Λ 2 + δ} − δ), (33)</trash>


				</figure>

				<p>where m 1λ1 denotes the multiplicity of λ 1 in R 1 . We define t(µ) to be sgn(µ) if µ has a trivial-stabilizer subgroup Stab(µ) = {1} (see (24)), and zero if the stabilizer subgroup is non-trivial, i.e. the weight lies on a chamber wall:</p>

				<figure>
					<trash>t(µ) = sgn(µ) : Stab(µ) = {1} 0 : else . (34)</trash>


				</figure>

				<p>We will demonstrate this algorithm with LieART in the following paragraphs.</p>

				<p>As a demonstration of the algorithm implemented we consider the decomposition of the SU(3) tensor product 6⊗3, which is</p>

			</div>
			<div>
				<head>In[74]</head>

				<p>:= DecomposeProduct[Irrep[SU3][6], Irrep[SU3][3]] Out[74]:= 8 + 10</p>

				<p>LieART normally reorders the arguments of DecomposeProduct by their dimension, which usually simplifies the application of Klimyk&apos;s formula. But for didactical reasons we assume in the following that the irreps are not reordered. LieART generates the weight system with weight multiplicities of the 6:</p>

			</div>
			<div>
				<head>In[75]</head>

				<p>:= WeightSystemWithMul[Irrep[SU3][6]] Out[75]:=</p>

				<figure>
					<trash>           2 0 1 − 2 2 1 0 − 2 1 0 1 1 1 − 1 1 − 1 0 1           </trash>


				</figure>

				<p>We add all weights of the 6 to the highest weight of the 3, i.e. HighestWeight[Irrep[SU3][3]] = 1 0 , and Delta[SU3]= 1 1 , according to (32). The highest weight Λ 2 and δ can be added directly, but to add the sum to all weights in the weight system with multiplicities LieART provides the command Add:</p>

				<p><formula>In[76]</formula></p>

				<p>:= mu = Add[WeightSystemWithMul[Irrep[SU3][6]], HighestWeight[Irrep[SU3][3]] + Delta[SU3]] Out[76]:=</p>

				<figure>
					<trash>           4 1 1 0 3 1 2 − 1 1 2 2 1 3 0 1 1 1 1            the parity of the reflection, i.e. sgn(µ) = (−1) l</trash>


				</figure>

				<p>, where l is the number of reflections needed to reach the dominant chamber:</p>

			</div>
			<div>
				<head>In[77]</head>

				<p>:= ReflectToDominantWeightWithMul /@ mu</p>

			</div>
			<div>
				<head>Out[77]</head>

				<p>:=</p>

				<figure>
					<trash>           4 1 1 0 3 1 1 1 − 1 2 2 1 3 0 1 1 1 1            The weights 4 1 , 0 3 , 2 2 , 3 0</trash>


				</figure>

				<p>and 1 1 were already in the dominant chamber, while 2 − 1 needed one reflection to become the dominant weight 1 1 with a parity of −1.</p>

				<p>Weights on walls of the dominant chamber do not contribute in Klimyk&apos;s formula and must be dropped. Weights not lying on a chamber wall have a trivial-stabilizer subgroup. To keep only these weights LieART applies the command TrivialStabilizerWeights, which drops all weights containing at least one zero anywhere in their Dynkin label, which corresponds to lying on a chamber wall:</p>

			</div>
			<div>
				<head>In[78]</head>

				<p>:= TrivialStabilizerWeights[ReflectToDominantWeightWithMul /@ mu] Out[78]:</p>

				<p><formula>=       4 1 1 1 1 − 1 2 2 1 1 1 1      </formula></p>

				<p>LieART subtracts δ yielding highest weights and constructs the irreps in the decomposition R({λ 1 +Λ 2 +δ}−δ):</p>

			</div>
			<div>
				<head>In[79]</head>

				<p>:= ToIrrep/@Add[TrivialStabilizerWeights[ReflectToDominantWeightWithMul/@mu], -delta] Out[79]:=</p>

				<figure>
					<trash>    10 1 1 − 1 8 1 1 1    </trash>


				</figure>

				<p>While the irreps in the left column correspond to R({λ 1 + Λ 2 + δ} − δ) in Klimyks formula, the multiplicities in the right column correspond to m 1λ1 sgn(λ 1 + Λ 2 + δ). Summing up the decomposition accordingly we see that the 1 drops out and we obtain the result 8 + 10 as already stated in Out[74]</p>

				<figure>
					<figDesc>.</figDesc>
					<trash>4.5.3. SU(N ) Decomposition via Young Tableaux A correspondence of SU(N ) irreps and Young</trash>


				</figure>

				<p>tableaux is very useful for the calculation of tensor products and subalgebra decomposition by hand. We have found that the algorithm for the SU(N ) tensor product decomposition via Young tableaux also performs better on the computer, with respect to CPU time and memory consumption, than the procedure described in the previous section. Thus, LieART uses the Young tableaux algorithm for the tensor-product decomposition of SU(N ) irreps and the procedure of adding weights and filtering out irreps for all other classical and exceptional Lie algebras.</p>

				<p>A Young tableau is a left-aligned set of boxes, with successive rows having an equal or smaller number of boxes. Young tableaux correspond to the symmetry of the tensors of SU(N ) irreps, by first writing each index of the tensor into one box of a Young tableau and the prescription that they ought to be first symmetrized in the rows and then antisymmetrized in the columns. Please see Out[31] in Section 3 for a non-trivial example for a Young tableau displayed by LieART.</p>

				<p>To demonstrate the algorithm for the tensor product decomposition via Young tableaux we use the same SU(3) tensor product as in Section 4.5.1, 8⊗8.</p>

				<p>The construction principle (by hand) is to put the Young tableau with the most boxes to the left and bump all boxes of the right Young tableau row by row to the left one following certain rules. To understand these rules label the boxes of each row of the right Young tableau alphabetically:</p>

				<figure>
					<trash>8 ⊗ 8 = ⊗ a a b (35)</trash>


				</figure>

				<p>Bump the boxes of the first row of the right tableau (labeled with a&apos;s) to the ends of the left tableau to form valid Young tableaux and the additional condition that no a&apos;s are in the same column, as this would change symmetric indices to antisymmetric ones. (see crossed out tableau, which is also not a valid SU(3) tableau, because it has four (or N +1 in general for SU(N )) boxes in a column):</p>

				<figure>
					<trash>⊗ a a b =     a a ⊕ a a ⊕ a a ⊕ a a ⊕ ¡ ¡ ¡ ¡ ¡ ¡ a a     ⊗ b (36)</trash>


				</figure>

				<p>As the next step bump the boxes of the next row to all tableaux obtained by the first step obeying the same rules, but keep only tableaux with an admissible sequence of letters, when reading the letters from right to left, row by row. A sequence of letters is admissible if at any point at least as many a&apos;s have occurred as b&apos;s and likewise for b&apos;s and c&apos;s, etc. The sequences abcd, aaabc, abab are admissible, but abba, acb are not. In our example only the sequence baa is not admissible, which appears in the four crossed-out tableaux:</p>

				<figure>
					<trash>⊗ a a b = $ $ $ $ $ $ $ a a b ⊕ a a b ⊕ a a b ⊕ ¨ ¨ ¨ ¨ ¨ ¨ a b a ⊕ a a b ⊕ a a b ⊕ &amp; &amp; &amp; &amp; &amp; &amp; a b a ⊕ a b a ⊕ b a a ⊕ a a b (37)</trash>


				</figure>

				<p>Removing the labeling with a&apos;s and b&apos;s, we obtain the SU(3) tensor product decomposition of 8⊗8 in terms of Young tableaux:</p>

				<figure>
					<trash>⊗ = ⊕ ⊕ ⊕ ⊕ ⊕ (38)</trash>


				</figure>

				<p>Finally we knock out triples (full columns with three boxes) to find:</p>

				<figure>
					<trash>⊗ = ⊕ ⊕ ⊕ ⊕ ⊕ • 8 ⊗ 8 = 27 ⊕ 10 ⊕ 10 ⊕ 8 ⊕ 8 ⊕ 1 (39)</trash>


				</figure>

				<p>In LieART the Young tableau algorithm is automatically applied to tensor products of SU(N ) irreps using</p>

			</div>
			<div>
				<head>DecomposeProduct[irreps]</head>

				<p>. After sorting the irrep with fewer boxes to the right (which we will call irrep2 opposed to the first one named irrep1 ), the function processes through irrep2 &apos;s rows to bump boxes to irrep1 .</p>

				<p>The function BoxesToBump[irrep2 , row ] gives the number of boxes in the current row to bump to the tableau of irrep1 . The function AllowedRows[irrep1 , nboxes] determines the rows of irrep1 that are allowed to bump boxes to yielding a valid young tableau with an admissible sequence.</p>

				<p>The latter is checked by the helper function AllowedCombination. The function AddToTableau[irrep1 , rowcombinations] performs the bumping of the boxes of one row of irrep2 in all allowed combinations (rowcombinations) to irrep1 . The result of the bumping is directly expressed in terms of a changed Dynkin label.</p>

			</div>
			<div>
				<head n="4.6">Subalgebra Decomposition DecomposeIrrep[irrep, subalgebra]</head>

				<p>decomposes irrep to the specified subal- gebra. DecomposeIrrep[productIrrep, subalgebra, pos] decomposes productIrrep at position pos. ProjectionMatrix[origin,target] defines the projection matrix for the algebra-subalgebra pair specified by origin and target Project[projectionMatrix ,weights] applies the projectionMatrix to the weights GroupProjectedWeights[projectedWeights,target] groups the projected weights according to the subalgebra specified in target</p>

			</div>
			<div>
				<head>NonSemiSimpleSubalgebra[origin,simpleRootToDrop]</head>

				<p>computes the projection matrix of a maximal non-semi-simple subalgebra by dropping one dot of the Dynkin diagram simpleRootToDrop and turning it into a U(1) charge</p>

			</div>
			<div>
				<head>SemiSimpleSubalgebra[origin,simpleRootToDrop]</head>

				<p>computes the projection matrix of a maximal semi-simple subalgebra by dropping one dot from the extended Dynkin diagram.</p>

			</div>
			<div>
				<head>ExtendedWeightScheme[algebra,simpleRootToDrop]</head>

				<p>adds the Dynkin label associated with the extended simple root −γ to each weight of the lowest orbit of algebra and drops the simple root simpleRoot- ToDrop SpecialSubalgebra[origin,targetirreps] computes the projection matrix of a maximal special subalgebra by specifying the branching rule of the generating irrep.</p>

				<p>Subalgebra decomposition of irreps and product algebra irreps.</p>

				<p>The LieART function DecomposeIrrep[irrep, subalgebra] decomposes an irrep of a simple Lie algebra into a maximal subalgebra specified by subalgebra, which can be simple, semi-simple or non-semi-simple. To decompose an irrep of a semi-simple or non-semi-simple irrep, a third argument pos allows one to specify which part of productIrrep should be decomposed into the subalgebra.</p>

				<p>The implementation of DecomposeIrrep in LieART uses so-called projection matrices. These matrices project the weights of an irrep into the specified subalgebra. The resulting weights are further processed in the same manner as in Section 4.6: Only the dominant weights of the decomposed weights are kept, because they uniquely define the orbits of the subalgebra and thus its irreps. In the next step the irreps comprised in the collection of dominant weights are sorted out using the same LieART functions as for the generic tensor product decomposition, discussed in section 4.5.1. It is clear that the major task is the determination of the projection matrices. They are different for each algebra-maximal-subalgebra pair and are not unique. I.e., a projection is not unique and thus the matrices are not unique in general. Our matrices are correct and consistent, but one may find different projection matrices in the literature, which are also correct. (An extensive collection of projection matrices can be found in [23] for the Lie algebra A n and in [24] for the Lie algebras B n , C n and D n .) Once a projection matrix is known it can be used for the decomposition of all irreps of the algebra-maximal-subalgebra pair. E.g., the projection matrix for the</p>

				<figure>
					<trash>branching SU(5) → SU(3)⊗SU(2)⊗U(1) is Out[80]:=     1 0 0 0 0 1 0 0 0 0 0 1 2 4 6 3    </trash>


				</figure>

				<p>The determination of the projection matrices is closely connected to the problem of finding maximal subalgebras and we defer the description of its implementation in LieART to the next section. Taking the projection matrix Out[80] as given we demonstrate the algorithm of DecomposeIrrep to find the branching rule for the 10 of SU(5) to SU(3)⊗SU(2)⊗U(1), which is</p>

			</div>
			<div>
				<head>In[81]</head>

				<p>:= DecomposeIrrep[Irrep[SU5][10],ProductAlgebra[SU3,SU2,U1]] Out[81]</p>

				<figure>
					<trash>:= (1, 1)(−6) + (3, 1)(4) + (3, 2)(−1)</trash>


				</figure>

				<p>The LieART function Project[projectionMatrix ,weights] applies the projectionMatrix to each of the weights and a subsequent GroupProjectedWeights[projectedWeights,target] groups the Dynkin label of each of the projectedWeights according to the subalgebra specified by target. In the case of our example each weight of the 10 of SU(5) decomposes to SU(3)⊗SU(2)⊗U(1) as:</p>

			</div>
			<div>
				<head>In[82]</head>

				<p>:= IrrepRule @@@ Transpose[{WeightSystem[Irrep[SU5][10]</p>

				<figure>
					<trash>], Row/@GroupProjectedWeights[Project[ProjectionMatrix[SU5, ProductAlgebra[SU3,SU2,U1]],WeightSystem[Irrep[SU5][10]]], ProductAlgebra[SU3,SU2,U1]]}] Out[82]:= 0 1 0 0 → 0 1 0 4 1 −1 1 0 → 1 −1 0 4 −1 0 1 0 → −1 0 0 4 1 0 −1 1 → 1 0 1 −1 −1 1 −1 1 → −1 1 1 −1 1 0 0 −1 → 1 0 −1 −1 −1 1 0 −1 → −1 1 −1 −1 0 −1 0 1 → 0 −1 1 −1 0 −1 1 −1 → 0 −1 −1 −1 0 0 −1 0 → 0 0 0 −6</trash>


				</figure>

				<p>The algorithm of DecomposeIrrep differs slightly and keeps only the dominant weights after projection and groups only them yielding</p>

				<figure>
					<trash>   0 1 0 4 1 0 1 −1 0 0 0 −6    (40) for our example. A combination of the functions GetAllProductIrrep and GetProductIrrep filter out the product irreps, (3, 1)(4), (1, 1)(−6) and (3, 2)(−1) in our case, by applying the function GetIrrep known from section 4.5.1 to the weights. 4.6.1. Branching Rules and Maximal Subalgebras</trash>


				</figure>

				<p>To determine the projection matrices we start with the algorithm to find maximal subalgebras. Subalgebras fall into two classes: regular and special subalgebras, with the first one being further categorized into nonsemisimple and semisimple subalgebras. In the following we describe the derivation of the three types of maximal subalgebras: regular non-semisimple, regular semisimple and special subalgebras, originally developed by Dynkin [1, 2] and demonstrate how it is utilized by LieART to determine the projection matrices.</p>

				<p>Non-Semisimple Subalgebras. A non-semisimple subalgebra is a semisimple subalgebra times a U(1) factor , e.g. SU(3)⊗SU(2)⊗U(1). A subalgebra of this type is obtained by removing a dot from the Dynkin diagram. The resulting two or more disconnected Dynkin diagrams symbolize the semisimple subalgebra and the removed dot, i.e., simple root, becomes the U(1) generator. E.g., the non-semisimple subalgebra SU(3)⊗SU(2)⊗U(1) can be obtained from SU(5) by removing the third dot from its Dynkin diagram:</p>

				<figure>
					<trash>SU(5) 1 2 3 4 SU(3) U(1) SU(2) 1 2 1</trash>


				</figure>

				<p>Since the Dynkin label of a weight represents it composition of simple roots (explicitly in the α-basis), dropping a simple root (dot) from the Dynkin diagram corresponds to dropping the associated digit from the Dynkin label. The U(1) charge is the coefficient of the dropped simple root in the weight&apos;s linear combination of simple roots, i.e., the associated digit of the Dynkin label in the α-basis, which is often normalized to give integer values. Accordingly, in Out[82] the third Dynkin digit of the weight of the 10 has been removed after the projection and by expressing the weight system in the α-basis</p>

			</div>
			<div>
				<head>In[83]</head>

				<p>:= AlphaBasis[WeightSystem[Irrep[SU5][10]</p>

				<figure>
					<trash>]]//Column Out[83]:= (3/5, 6/5, 4/5, 2/5) (3/5, 1/5, 4/5, 2/5) (-2/5, 1/5, 4/5, 2/5) (3/5, 1/5, -1/5, 2/5) (-2/5, 1/5, -1/5, 2/5) (3/5, 1/5, -1/5, -3/5) (-2/5, 1/5, -1/5, -3/5) (-2/5, -4/5, -1/5, 2/5) (-2/5, -4/5, -1/5, -3/5) (-2/5, -4/5, -6/5, -3/5)</trash>


				</figure>

				<p>we see that the U(1) charge at the end are the third coordinate of the weight in the α-basis multiplied by 5 to give integer values. To summarize, the third Dynkin digit has been moved to the end (i.e., third and forth digits have been interchanged) and only it has been projected into the α basis and rescaled.</p>

				<p>Writing the weights of the 10 as columns of a matrix W and the weights with the third digit expressed in non-normalized α-basis coordinates moved to the end as rows of a matrix W</p>

				<figure>
					<trash>, the projection matrix P can be determined from P ˆ W = ˆ W (41) with the right-inversê W + of W (see section 4.1.4), sincê W is in general not a rectangular matrix: ˆ P = ˆ W ˆ W + . (42)</trash>


				</figure>

				<p>As mentioned above the projection matrix found by this procedure can now be used to decompose any SU(5) irrep into SU(3)⊗SU(2)⊗U(1). The 10 is actually not the smallest irrep needed for the determination of the projection matrix. The 10 as well as all other irreps can be built from tensor products of the 5, which we call the generating irrep of SU(5). In the orthogonal algebras only tensor products of the so-called spinor representations can construct all other irreps of the algebra. Thus, they must be used for the determination of the projection matrices. The generating irreps of representative Lie algebras are listed in Table 4.2.</p>

				<p>In fact LieART excludes the zero-weights from the generating irreps, if any, i.e., only the lowest non-trivial orbit is needed for the determination of the projection matrices.</p>

				<p>The calculation of a projection requires the knowledge of the simple root to drop from the Dynkin diagram for a specified algebra-subalgebra pair. LieART provides an extra package file called BranchingRules.m, listing this information for the implemented branching rules along with special embeddings to be discussed later. The file will be extended to encompass more branching rules in future versions of LieART, but may also be extended by the user. The definition for the more general branching rule SU(n) →</p>

				<figure>
					<trash>SU(N −k)⊗SU(k)⊗U(1), including the demonstrated case SU(5) → SU(3)⊗SU(2)⊗U(1), reads:</trash>

					<figDesc>ProjectionMatrix[origin:Algebra[A][n_]</figDesc>

				</figure>

				<p>, ProductAlgebra[Algebra[A][m_],Algebra[A][k_],Algebra[U][1]]] := NonSemiSimpleSubalgebra[origin,-k-1] /; m==(n-k-1)</p>

				<figure>
					<trash>Algebra Irrep Irrep (Dynkin) (Name) A 4 (SU(5)) (1000) 5 B 4 (SO(9)) (0001) 16 C 4 (Sp(8)) (1000) 8 D 4 (SO(8)) (0001) 8 s E 6 (100000) 27 E 7 (0000010) 56 E 8 (00000010) 248 F 4 (0001) 26 G 2 (10) 7</trash>

					<head>Table 4.2: Generating Irreps of representative Lie algebras Semisimple Subalgebras.</head>


				</figure>

				<p>To obtain a semisimple subalgebra without a U(1) generator, a root from the socalled extended Dynkin diagram is removed. The extended Dynkin diagram is constructed by adding the most negative root to the set of simple roots. (The negative of the highest root γ gives the most negative root −γ to form the extended Dynkin diagram.) The resulting set of roots is linearly dependent, but removing one root restores the linear independence yielding a valid system of simple root of a subalgebra, which in general is semisimple. The highest roots γ and the according extended root −γ for representative Lie algebras are listed in Table 4.3. The non-zero entries in the Dynkin label of −γ prescribe to which existing dot in</p>

				<figure>
					<trash>Algebra Highest Root Extended Root (γ) (−γ) A 4 (SU(5)) 1 0 0 1 −1 0 0 −1 B 4 (SO(9)) 0 1 0 0 0 −1 0 0 C 4 (Sp(8)) 2 0 0 0 −2 0 0 0 D 4 (SO(8)) 0 1 0 0 0 −1 0 0 E 6 0 0 0 0 0 1 0 0 0 0 0 −1 E 7 1 0 0 0 0 0 0 −1 0 0 0 0 0 0 E 8 0 0 0 0 0 0 1 0 0 0 0 0 0 0 −1 0 F 4 1 0 0 0 −1 0 0 0 G 2 0 1 0 −1</trash>

					<head>Table 4.3:</head>

					<figDesc>Highest roots γ and most negative roots −γ of representative Lie algebras.</figDesc>

				</figure>

			</div>
			<div>
				<head>the</head>

				<p>Dynkin diagram it should connect, since the Dynkin label in the ω-basis encode the angle between two simple roots. A &quot; 1 &quot; is an angle of 120°, symbolized by a single connected line in the Dynkin diagram. A &quot; 2 &quot; is an angle of 135°, expressed by a double line in the Dynkin diagram. The minus sign gives negative angles or reverses the order of roots. The extended Dynkin diagrams for all classical and exceptional Lie Algebras are shown in Figure 2. Please note that the double line connecting the extended root −γ for C n is according to the &quot; −2 &quot; in its Dynkin label.</p>

				<p>To demonstrate the determination of the projection matrix from using the generating irrep, we cannot use an irrep of SU(N ), because dropping a root from the extended Dynkin diagram of SU(N ) returns SU(N ). Thus, SU(N ) has no regular maximal semisimple subalgebra. (Please note that some SU(N )&apos;s have special maximal semisimple subalgebras, e.</p>

				<figure>
					<trash>g., SU(4) → SU(2)⊗SU(2).) Instead we consider the subalgebra branching of SO(7)→SU(2)⊗SU(2)⊗SU(2) (B 3 →A 1 ⊗A 1 ⊗A 1 ). The maximal subalgebra SU(2)⊗SU(2)⊗SU(2) is obtained from the extended Dynkin diagram of SO(7) (B 3 ) by removing the second dot: 1 2 3 −γ n−1 n B n 1 −γ 2 3 4 n−1 n C n −γ 1 2 3 n−1 n D n 1 −γ 2 3 4 n−2 n−1 n E 6 1 2 3 6 −γ 4 5 E 7 −γ 1 2 3 7 4 5 6 E 8 1 2 3 8 4 5 6 7 −γ F 4 −γ 1 2 3 4 G 2 −γ 2 3</trash>

					<head>Figure 2: Extended Dynkin Diagrams of classical and exceptional simple Lie algebras.</head>

					<trash>SO(7) 1 −γ 2 3 SU(2) SU(2) SU(2) 1 1 1</trash>


				</figure>

				<p>To derive the projection matrix, we investigate the decomposition of the SO(7) generating irrep (the 8) into three SU(2)s. Extending the Dynkin diagram with −γ has the effect that each weight w gets extended by one entry with the coefficient of the weight relative to −γ, obtained by their scalar product: (w, −γ).</p>

				<p>The so-called extended weight scheme of the lowest non-trivial orbit of a generating irrep is determined by the LieART function ExtendedWeightScheme[algebra,simpleRootToDrop], which directly removes the Dynkin digits associated to the simple root to drop, specified by simpleRootToDrop. For the lowest non-trivial orbit of the generating irrep of SO(7) these two steps are:</p>

				<figure>
					<trash>0 0 1 0 1 −1 1 −1 1 −1 0 1 1 0 −1 −1 1 −1 0 −1 1 0 0 −1 insert −γ − −−−−− → 0 −1 0 1 0 −1 1 −1 1 0 −1 1 −1 0 0 1 1 0 0 −1 −1 0 1 −1 0 1 −1 1 0 1 0 −1 drop 2 − −−− → 0 −1 1 0 −1 −1 1 0 1 −1 0 1 1 0 −1 −1 0 −1 0 1 1 0 1 −1 (43)</trash>


				</figure>

				<p>With the weight of the SO(7) generating irrep as columns of the matrix W and the weights in the 3 SU(2) decomposition (right-hand side of (43)) as columns of W the projection matrix P is computed as described for non-semisimple regular subalgebras as</p>

				<figure>
					<trash>P = ˆ W ˆ W + with the right-inversê W + of W . The definition for the branching rule SO(7)→SU(2)⊗SU(2)⊗SU(2) in the file BranchingRules.m reads:</trash>

					<figDesc>ProjectionMatrix[origin:Algebra[B][3]</figDesc>

				</figure>

				<p>, ProductAlgebra[Algebra[A][1],Algebra[A][1],Algebra[A][1]]]:= SemiSimpleSubalgebra[origin,2] Special Subalgebras. Special maximal subalgebras cannot be derived from the root system. The embedding of a special subalgebra does not follow a general pattern and must be derived for every algebra-subalgebra pair individually. Generating irreps are also used to derive the subalgebra embedding, which may be simple or semisimple and can involve more than one irrep of the subalgebra. LieART is not equipped with an algorithm to determine the maximal special subalgebras, but provides an interface to declare the embeddings (BranchingRules.m), which can be taken from the literature [7, 8].</p>

				<p>As an example we consider SO(7) (B 3 ) again, which has G 2 as special maximal subalgebra. The generating spinor irrep of SO(7), the 8, decomposes to the G 2 singlet plus the 7. The weights of the 8 of SO(7) and the weights of both the 1 and 7 of G 2 are brought into lexicographical order to define the projection matrix:</p>

				<figure>
					<trash>1 0 −1 → 2 −1 1 −1 1 → 1 0 0 1 −1 → 1 −1 0 0 1 → 0 0 0 0 −1 → 0 0 0 −1 1 → −1 1 −1 1 −1 → −1 0 −1 0 1 → −2 1 (44)</trash>


				</figure>

				<p>Arranging the weights on the left-hand side of (44) as columns of W and the weights of the right-hand side as columns of W , the projection matrix P is again computed viâ</p>

				<figure>
					<trash>P = ˆ W ˆ W + with the right-inversê W + of W . These procedures are performed by the LieART function SpecialSubalgebra[origin,targetirreps]</trash>


				</figure>

				<p>. The definition for the branching rule SO(7)→G 2 in the file BranchingRules.m reads: ProjectionMatrix[origin:Algebra[B][3],ProductAlgebra[G2]]:= SpecialSubalgebra[origin, {ProductIrrep[Irrep[G2][0,0]],ProductIrrep[Irrep[G2][1,0]]}]</p>

				<p>Please note that irreps of the subalgebra must be gathered in a list ({. . . }), even if it is a single irrep. The projection matrix for SO(7)→G 2 is</p>

			</div>
			<div>
				<head>In[84]</head>

				<p>:= ProjectionMatrix[B3,ProductAlgebra[G2]] Out[84]</p>

				<figure>
					<trash>:= 2 1 0 −1 −1 0</trash>


				</figure>

			</div>
			<div>
				<head n="5">Benchmarks</head>

				<p>In this section we give runtime benchmarks for the tensor decomposition and subalgebra decomposition. Because exceptional algebras have complicated Weyl reflection groups of high orders, computations involving them are much more CPU and memory demanding than with classical algebras of equal rank. In the following we give runtime benchmarks for the tensor-product decomposition and subalgebra decomposition of irreps of exceptional algebras.</p>

				<p>We use the Mathematica command Timing[], which gives the CPU time spent in the Mathematica kernel in seconds. It does not include the time needed for the display of results in the front end. As pointed out in Section 4.4.3, in TraditionalForm irreps are displayed by their dimensional names, while computations are performed by their Dynkin labels. The determination of the dimensional name can be very time consuming depending on the algebra and the irrep. This time is allotted to the display of computation results and thus not measured with Timing[]. For most of the examples below you will find significant differences between the displayed time and the wall-clock time due to this effect, but this is intended as we want to give an estimate of the actual time needed for decompositions and not the display of results. Please note that each of the following timings are taken with a newly launched Kernel to avoid speedup due to caching of intermediate results from previous computations.</p>

				<figure>
					<trash>The following timings were taken with Mathematica 8.0.1. on an Apple ® iMac ® with an Intel ® Core ™ i5 750 (2.66 GHz) processor and 4 GB RAM. We compute 27 n for n = 2, . . . , 8 in E 6 : In[85]</trash>


				</figure>

				<p>:= Timing[Irrep[E6][27]^2] Out[85]</p>

				<figure>
					<trash>:= {0.136494, 27 + 351 + 351 } In[86]</trash>


				</figure>

				<p>:= Timing[Irrep[E6][27]^3] Out[86]</p>

				<figure>
					<trash>:= {0.143171, 1 + 2(78) + 3(650) + 2925 + 3003 + 2(5824)}</trash>


				</figure>

			</div>
			<div>
				<head>In[87]</head>

				<p>:= Timing[Irrep[E6][27]^4] Out[87]:=</p>

				<figure>
					<trash>{0.43606, 6(27) + 6(351) + 3(351 ) + 8(1728) + 6(7371) + 6(7722) + 17550 + 19305 + 2(34398) + 3(51975) + 3(54054)}</trash>


				</figure>

			</div>
			<div>
				<head>In[88]</head>

				<p>:= Timing[Irrep[E6][27]^5] Out[88]:=</p>

				<figure>
					<trash>{0.715819, 15(27) + 26(351) + 20(351 ) + 24(1728) + 30(7371) + 15(7722) + 20(17550) + 20(19305) + 34398 + 46332 + 10(51975) + 10(61425) + 100386 + 20(112320) + 4(314496) + 4(359424 ) + 5(386100) + 5(412776) + 6(494208)}</trash>


				</figure>

			</div>
			<div>
				<head>In[89]</head>

				<p>:= Timing[Irrep[E6][27]^6] Out[89]:= and 248 n for n = 2, . . . , 7 in E 8 :</p>

			</div>
			<div>
				<head>In[98]</head>

				<p>:= Timing[Irrep[E8][248]^2] Out[98]</p>

				<figure>
					<trash>:= {0.850115, 1 + 248 + 3875 + 27000 + 30380} In[99]</trash>


				</figure>

				<p>:= Timing[Irrep[E8][248]^3] Out[99]:=</p>

				<figure>
					<trash>{0.883473, 1+5(248)+3(3875)+3(27000)+4(30380)+2(147250)+3(779247)+1763125+2450240+ 2(4096000)}</trash>


				</figure>

			</div>
			<div>
				<head>In[100]</head>

				<p>:= Timing[Irrep[E8][248]^4] Out[100]:=</p>

				<figure>
					<trash>{31.9855, 5(1) + 16(248) + 17(3875) + 18(27000) + 23(30380) + 13(147250) + 21(779247) + 6(1763125) + 12(2450240) + 16(4096000) + 3(4881384) + 6(6696000) + 8(26411008) + 6(70680000) + 6(76271625) + 79143000 + 146325270 + 2(203205000) + 3(281545875) + 3(344452500)}</trash>


				</figure>

			</div>
			<div>
				<head>In[101]</head>

				<p>:= Timing[Irrep[E8][248]^5] Out[101]:=</p>

				<figure>
					<trash>{49.9295, 16(1) + 79(248) + 90(3875) + 100(27000) + 136(30380) + 100(147250) + 170(779247) + 50(1763125) + 109(2450240) + 140(4096000) + 36(4881384) + 70(6696000) + 100(26411008) + 75(70680000) + 90(76271625) + 10(79143000) + 36(146325270) + 30(203205000) + 40(281545875) + 24(301694976) + 60(344452500) + 15(820260000) + 30(1094951000) + 20(2172667860) + 20(2275896000) + 2642777280 + 10(3929713760) + 10(4825673125) + 6899079264 + 20(8634368000) + 4(12692520960) + 5(17535336000) + 4(20288765952) + 5(21039669000) + 6(23592339045)} As an example for subalgebra decomposition of a large irrep we decompose the 600600 of E 6 to SU(3) × SU(3) × SU(3) : In[104]</trash>


				</figure>

				<p>:= Timing[DecomposeIrrep[Irrep[E6][600600]</p>

				<figure>
					<trash>, ProductAlgebra[SU3, SU3, SU3]]] Out[104]:= {124.17, (1, 1, 1) + 10(3, 3, 3) + 10(3, 3, 3) + 5(8, 1, 1) + 5(1, 8, 1) + 5(1, 1, 8) + 10(6, 3, 3) + 10(3, 3, 6) + 10(3, 6, 3) + 10(3, 6, 3) + 10(3, 3, 6) + 10(6, 3, 3) + (10, 1, 1) + (10, 1, 1) + (1, 10, 1) + (1, 10, 1) + (1, 1, 10) + (1, 1, 10) + 8(6, 3, 6) + 8(6, 6, 3) + 8(3, 6, 6) + 8(3, 6, 6) + 8(6, 6, 3) + 8(6, 3, 6) + 11(8, 8, 1) + 11(8, 1, 8) + 11(1, 8, 8) + 7(6, 6, 6) + 7(6, 6, 6) + 5(10, 8, 1) + 4(10, 1, 8) + 5(8, 10, 1) + 4(8, 10, 1)+4(8, 1, 10)+5(8, 1, 10)+4(10, 8, 1)+5(10, 1, 8)+4(1, 10, 8)+5(1, 8, 10)+4(1, 8, 10)+ 5(1, 10, 8) + 10(15, 3, 3) + 10(3, 15, 3) + 10(3, 3, 15) + 10(15, 3, 3) + 10(3, 15, 3) + 10(3, 3, 15) + (10, 10, 1) + 2(10, 10, 1) + 2(10, 1, 10) + 2(10, 1, 10) + 2(10, 10, 1) + 2(10, 10, 1) + 2(10, 1, 10) + (10, 1, 10) + 2(1, 10, 10) + 2(1, 10, 10) + (1, 10, 10) + 2(1, 10, 10) + 2(15 , 3, 3) + 2(3, 15 , 3) + 2(3, 3, 15 )+2(15 , 3, 3)+2(3, 15 , 3)+2(3, 3, 15 )+25(8, 8, 8)+9(6, 15, 3)+9(6, 3, 15)+9(15, 3, 6)+ 9(15, 6, 3)+9(3, 15, 6)+9(3, 6, 15)+9(15, 6, 3)+9(15, 3, 6)+9(3, 6, 15)+9(3, 15, 6)+9(6, 15, 3)+ 9(6, 3, 15) + (6, 15 , 3) + (6, 3, 15 ) + (15 , 3, 6) + (15 , 6, 3) + (3, 15 , 6) + (3, 6, 15 ) + (15 , 6, 3) + (15 , 3, 6) + (3, 6, 15 ) + (3, 15 , 6) + (6, 15 , 3) + (6, 3, 15 ) + 8(10, 8, 8) + 8(8, 10, 8) + 8(8, 8, 10) + 8(8, 8, 10)+8(8, 10, 8)+8(10, 8, 8)+6(6, 15, 6)+6(6, 6, 15)+6(15, 6, 6)+6(15, 6, 6)+6(6, 6, 15)+ 6(6, 15, 6) + (6, 15 , 6) + (6, 6, 15 ) + (15 , 6, 6) + (15 , 6, 6) + (6, 6, 15 ) + (6, 15 , 6) + 2(10, 10, 8) + 2(10, 8, 10) + 2(10, 8, 10) + 2(10, 10, 8) + 2(8, 10, 10) + 2(8, 10, 10) + 2(8, 10, 10) + 2(8, 10, 10) + 2(10, 10, 8) + 2(10, 8, 10) + 2(10, 8, 10) + 2(10, 10, 8) + 2(27, 1, 1) + 2(1, 27, 1) + 2(1, 1, 27) + 4(24, 3, 3) + 4(3, 24, 3) + 4(3, 3, 24) + 4(24, 3, 3) + 4(3, 24, 3) + 4(3, 3, 24) + (21, 6, 3) + (6, 3, 21) + (3, 21, 6)+(3, 6, 21)+(21, 3, 6)+(6, 21, 3)+8(15, 15, 3)+8(15, 3, 15)+8(3, 15, 15)+8(15, 15, 3)+ 8(15, 3, 15) + 8(3, 15, 15) + 3(24, 3, 6) + 4(24, 6, 3) + 3(6, 24, 3) + 4(6, 3, 24) + 2(15, 15 , 3) + (15, 3, 15 ) + (15 , 15, 3) + 2(15 , 3, 15) + (3, 15 , 15) + 2(3, 15, 15 ) + 4(3, 24, 6) + 3(3, 6, 24) + 2(15 , 15, 3) + (15 , 3, 15) + (15, 15 , 3) + 2(15, 3, 15 ) + 3(24, 6, 3) + 4(24, 3, 6) + 3(3, 24, 6) + 4(3, 6, 24) + (3, 15, 15 ) + 2(3, 15 , 15) + 4(6, 24, 3) + 3(6, 3, 24) + 6(6, 15, 15) + 6(15, 15, 6) + 6(15, 6, 15) + 6(15, 6, 15) + 6(15, 15, 6) + 6(6, 15, 15) + 4(27, 8, 1) + 4(27, 1, 8) + 4(8, 27, 1) + 4(8, 1, 27)+4(1, 27, 8)+4(1, 8, 27)+2(24, 6, 6)+(6, 15, 15 )+2(6, 24, 6)+2(6, 6, 24)+(15, 15 , 6)+ (15 , 6, 15) + (15 , 15, 6) + (15, 6, 15 ) + 2(24, 6, 6) + 2(6, 24, 6) + 2(6, 6, 24) + (6, 15 , 15) + (10, 27, 1)+(10, 1, 27)+(27, 10, 1)+(27, 10, 1)+(27, 1, 10)+(27, 1, 10)+(10, 27, 1)+(10, 1, 27)+ (1, 10, 27) + (1, 27, 10) + (1, 27, 10) + (1, 10, 27) + 3(24, 15, 3) + 2(24, 3, 15) + 2(15, 24, 3) + 3(15, 3, 24) + 2(3, 15, 24) + 3(3, 24, 15) + 3(15, 24, 3) + 2(15, 3, 24) + 2(24, 15, 3) + 3(24, 3, 15) + 2(3, 24, 15) + 3(3, 15, 24) + 7(27, 8, 8) + 7(8, 27, 8) + 7(8, 8, 27) + (35, 8, 1) + (35, 1, 8) + (8, 35, 1) + (8, 1, 35) + (1, 35, 8) + (1, 8, 35) + 4(15, 15, 15) + 4(15, 15, 15) + 2(10, 27, 8) + (10, 8, 27) + 2(27, 10, 8) + (27, 8, 10) + 2(27, 8, 10) + (27, 10, 8) + (8, 10, 27) + 2(8, 27, 10) + (8, 27, 10) + 2(8, 10, 27) + (10, 27, 8) + 2(10, 8, 27) + 2(24, 15, 6) + (24, 6, 15) + (6, 15, 24) + 2(6, 24, 15) + (15, 24, 6) + 2(15, 6, 24) + 2(15, 24, 6) + (15, 6, 24) + 2(24, 6, 15) + (24, 15, 6) + (6, 24, 15) + 2(6, 15, 24) + (35, 10, 1) + (10, 1, 35) + (35, 1, 10) + (10, 35, 1) + (1, 10, 35) + (1, 35, 10) + (10, 27, 10) + (27, 10, 10) + (10, 10, 27) + (42, 3, 3) + (3, 42, 3) + (3, 3, 42) + (42, 3, 3) + (3, 42, 3) + (3, 3, 42) + (24, 24, 3) + (24, 3, 24) + (3, 24, 24) + (24, 24, 3) + (24, 3, 24) + (3, 24, 24) + (35, 8, 8) + (35, 8, 8) + (8, 35, 8) + (8, 35, 8) + (8, 8, 35) + (8, 8, 35) + (42, 3, 6) + (42, 6, 3) + (6, 42, 3) + (6, 3, 42)+(3, 42, 6)+(3, 6, 42)+(42, 6, 3)+(42, 3, 6)+(3, 42, 6)+(3, 6, 42)+(6, 42, 3)+(6, 3, 42)+ (24, 15, 15) + (15, 15, 24) + (15, 24, 15) + (15, 24, 15) + (15, 15, 24) + (24, 15, 15) + (27, 27, 1) + (27, 1, 27)+(1, 27, 27)+(42, 3, 15)+(15, 42, 3)+(3, 15, 42)+(42, 15, 3)+(15, 3, 42)+(3, 42, 15)+ (27, 27, 8)+(27, 8, 27)+(8, 27, 27)+(42, 15, 6)+(6, 42, 15)+(15, 6, 42)+(42, 6, 15)+(15, 42, 6)+ (6, 15, 42)} 6. L A T E X Package</trash>


				</figure>

				<p>LieART comes with a L A T E X package (lieart.sty in the subdirectory latex/) that defines commands to display irreps, roots and weights properly (see Table 6</p>

				<figure>
					<figDesc>.1), which are displayed by LieART using the</figDesc>

				</figure>

				<p>LaTeXForm on an appropriate expression, e.g.:</p>

			</div>
			<div>
				<head>In[105]</head>

				<p>:= DecomposeProduct[Irrep[SU3][8],Irrep[SU3][8]]//LaTeXForm</p>

			</div>
			<div>
				<head>Out[105]</head>

				<p>:= $\irrep{1}+2(\irrep{8})+\irrep{10}+\irrepbar{10}+\irrep{27}$</p>

				<figure>
					<trash>Command Example Output Description \irrep{10} 10 dimensional name of irrep \irrepbar{10} 10 dimensional name of conjugated irrep \irrep[2]{175} 175 number of primes as optional parameter \irrepsub{8}{s} 8 s irrep with subscript, e.g., irreps of SO(8) \irrepbarsub{10}{a} 10 a conjugated irrep with subscript, e.g., for labeling antisymmetric product \dynkin{0,1,0,0} (0100) Dynkin label of irrep \dynkincomma{0,10,0,0} (0, 10, 0, 0) for Dynkin labels with at least one digit larger then 9 (also available as \root, \rootorthogonal, \weightalpha and \weightorthogonal for negative integers) \weight{0,1,0,-1} 0 1 0 −1 weight in ω-basis \rootomega{-1,2,-1,0} −1 2 −1 0 root in ω-basis</trash>

					<head>Table 6.1:</head>

					<figDesc>L A T E X commands defined in supplemental style file lieart.sty</figDesc>

				</figure>

			</div>
			<div>
				<head n="7">Conclusions and Outlook</head>

				<p>We have programmed the Mathematica application LieART, which brings Lie-algebra and representationtheory related computations to Mathematica. It provides functions for the decomposition of tensor products and branching rules of irreducible representations, which are of high interest in particle physics, especially unified model building. LieART exploits the Weyl reflection group in most of its applications, making it fast and memory efficient. The user interface focuses on usability, allowing one to enter irreducible representations by their dimensional name and giving results in textbook style. We have reproduced and extended existing tabulated data on irreducible representations, their tensor products and branching rules.</p>

				<p>In future versions we plan to add more branching rules to LieART. Currently, only a selection of common branching rules used in the tables are implemented. We consider the tables given in the appendix as dynamical: They are included in LieART as Mathematica notebooks and can easily modified and extended by the user. Tables for algebras of high rank and/or higher dimensional irreducible representations have large CPU time and high memory consumption. Nevertheless, we plan to extend the tables even further and make them available online in a standard format (pdf and/or html).</p>

			</div>
			<div>
				<head n="8">Acknowledgments</head>

				<p>We thank Carl Albright for many useful discussions that led to the development of LieART. We also thank Tanja Feger for checking the tables against those found in [7]. We thank Savdeep Sethi and Bruce Westbury for runtime comparisons with LiE [12], which led to the implementation of Klymik&apos;s formula for tensor products. We thank Florian Hartmann, Constantin Sluka and Giulia Ferlito for reporting bugs in the initial version.</p>

				<p>Most of the work was performed while RPF was affiliated with the Department of Physics and Astronomy, Vanderbilt University, Nashville, and his work was supported by a fellowship within the Postdoc-Programme of the German Academic Exchange Service (DAAD). The work of RPF and TWK was supported by US DOE grant # E-FG05-85ER40226. The work of TWK was also supported by DoE grant # DE-SC0011981.</p>

			</div>
			<div>
				<head>A. Tables</head>

				<p>We present here tables of properties of irreps, such as Dynkin labels, dimensional names, indices, congruency classes and the number of singlets in various subalgebra branchings in Section A.1, as well as tables of tensor products in Section A.2 and subalgebra branching rules in Section A.3 for many classical and all exceptional Lie algebras. In presentation style, selection of irreps and subalgebra branching we closely follow [7], which has been the definitive reference for unified model building since its publication. The tables were created by the supplemental package Tables.m, which uses LieART for the computation. The tables can also be found as Mathematica notebooks in the LieART documentation integrated into the Mathematica documentation center as &quot; Representation Properties &quot; , &quot; Tensor Products &quot; and &quot; Branching Rules &quot; under the section &quot; Tables &quot; on the LieART documentation home. Since LieART comes with the functions that generate the tables, the user may extend them to the limit of his or her computer power.</p>

				<figure>
					<trash>Irrep Properties Tensor Products Branching Rules Algebra Number Page Number Page Number Page SU(2) A.2 46 A.35 84 A.68 118 SU(3) A.3 47 A.36 85 A.69 118 SU(4) A.4 49 A.37 87 A.70 119 SU(5) A.5 51 A.38 89 A.71 120 SU(6) A.6 53 A.39 91 A.72 121 SU(7) A.7 55 A.40 93 A.73 123 SU(8) A.8 56 A.41 94 A.74 125 SU(9) A.9 57 A.42 95 A.75 127 SU(10) A.10 57 A.43 95 A.76 129 SU(11) A.11 58 A.44 96 A.77 131 SU(12) A.12 58 A.45 96 A.78 133 SO(7) A.13 59 A.46 97 A.79 135 SO(8) A.14 61 A.47 99 A.80 136 SO(9) A.15 63 A.48 101 A.81 138 SO(10) A.16 65 A.49 103 A.82 140 SO(11) A.17 67 A.50 105 – – SO(12) A.18 68 A.51 106 – – SO(13) A.19 69 A.52 107 – – SO(14) A.20 69 A.53 107 A.83 143 SO(18) A.21 70 A.54 108 A.84 144 SO(22) A.22 70 A.55 108 A.85 144 SO(26) A.23 70 A.56 108 A.86 144 Sp(4) A.24 71 A.57 109 – – Sp(6) A.25 73 A.58 110 – – Sp(8) A.26 75 A.59 111 – – Sp(10) A.27 76 A.60 112 – – Sp(12) A.28 77 A.61 113 – – E 6 A.30 78 A.63 114 A.87 145 E 7 A.31 79 A.64 115 A.88 147 E 8 A.32 79 A.65 115 A.89 148 F 4 A.33 80 A.66 115 – – G 2 A.34 82 A.67 117 – – Table A.1: Table of tables A.1. Properties of Irreducible Representations A.1.1. SU(N ) Table A.2: SU(2) Irreps Dynkin Dimension l label (name) (index) Duality (1) 2 1 1 (2) 3 4 0 (3) 4 10 1 (4) 5 20 0 (5) 6 35 1 (6) 7 56 0 (7) 8 84 1 (8) 9 120 0 (9) 10 165 1 (10) 11 220 0 (11) 12 286 1 (12) 13 364 0 (13) 14 455 1 (14) 15 560 0 (15) 16 680 1 (16) 17 816 0 (17) 18 969 1 (18) 19 1140 0 (19) 20 1330 1 (20) 21 1540 0 (21) 22 1771 1 (22) 23 2024 0 (23) 24 2300 1 (24) 25 2600 0 (25) 26 2925 1 (26) 27 3276 0 (27) 28 3654 1 (28) 29 4060 0 (29) 30 4495 1 (30) 31 4960 0 (31) 32 5456 1 (32) 33 5984 0 (33) 34 6545 1 (34) 35 7140 0 (35) 36 7770 1 (36) 37 8436 0 (37) 38 9139 1 (38) 39 9880 0 (39) 40 10660 1 (40) 41 11480 0 (41) 42 12341 1 (42) 43 13244 0 (43) 44 14190 1 (44) 45 15180 0 (45) 46 16215 1 (46) 47 17296 0 Table A.3: SU(3) Irreps Dynkin Dimension l SU(2) label (name) (index) Triality singlets (10) 3 1 1 1 (20) 6 5 2 1 (11) 8 6 0 1 * (30) 10 15 0 1 (21) 15 20 1 1 (40) 15 35 1 1 (05) 21 70 1 1 (13) 24 50 1 1 (22) 27 54 0 1 * (60) 28 126 0 1 (41) 35 105 0 1 (70) 36 210 1 1 (32) 42 119 1 1 (08) 45 330 1 1 (51) 48 196 1 1 (90) 55 495 0 1 (24) 60 230 1 1 (16) 63 336 1 1 (33) 64 240 0 1 * (10, 0) 66 715 1 1 (0, 11) 78 1001 1 1 (71) 80 540 0 1 (52) 81 405 0 1 (43) 90 435 1 1 (12, 0) 91 1365 0 1 (81) 99 825 1 1 (62) 105 665 1 1 (13, 0) 105 1820 1 1 (35) 120 730 1 1 (19) 120 1210 1 1 (0, 14) 120 2380 1 1 (44) 125 750 0 1 * (27) 132 1034 1 1 (15, 0) 136 3060 0 1 (10, 1) 143 1716 0 1 (16, 0) 153 3876 1 1 (63) 154 1155 0 1 (82) 162 1539 0 1 (54) 165 1210 1 1 (11, 1) 168 2366 1 1 (0, 17) 171 4845 1 1 (18, 0) 190 5985 0 1 (73) 192 1744 1 1 (92) 195 2210 1 1 (1, 12) 195 3185 1 1 (46) 210 1855 1 1 (19, 0) 210 7315 1 1 (55) 216 1890 0 1 * * SU(2)×U(1) singlet. Table A.3: SU(3) Irreps (continued) Dynkin Dimension l SU(2) label (name) (index) Triality singlets (13, 1) 224 4200 0 1 (2, 10) 231 3080 1 1 (0, 20) 231 8855 1 1 (38) 234 2535 1 1 (21, 0) 253 10626 0 1 (14, 1) 255 5440 1 1 (74) 260 2730 0 1 (11, 2) 270 4185 0 1 (65) 273 2821 1 1 (22, 0) 276 12650 1 1 (93) 280 3570 0 1 (1, 15) 288 6936 1 1 (0, 23) 300 14950 1 1 (12, 2) 312 5564 1 1 (84) 315 3885 1 1 (16, 1) 323 8721 0 1 (24, 0) 325 17550 0 1 (10, 3) 330 4895 1 1 (57) 336 4060 1 1 (66) 343 4116 0 1 * (25, 0) 351 20475 1 1 (2, 13) 357 7259 1 1 (17, 1) 360 10830 1 1 (49) 375 5375 1 1 (0, 26) 378 23751 1 1 (3, 11) 384 6560 1 1 (1, 18) 399 13300 1 1 (85) 405 5670 0 1 (14, 2) 405 9315 0 1 (27, 0) 406 27405 0 1 (76) 420 5810 1 1 (28, 0) 435 31465 1 1 (10, 4) 440 7260 0 1 (19, 1) 440 16170 0 1 (12, 3) 442 8619 0 1 (15, 2) 456 11780 1 1 (0, 29) 465 35960 1 1 (95) 480 7720 1 1 (20, 1) 483 19481 1 1 (30, 0) 496 40920 0 1 (68) 504 7980 1 1 (13, 3) 504 11130 1 1 (11, 4) 510 9605 1 1 (2, 16) 510 14705 1 1 (77) 512 8064 0 1 * * SU(2)×U(1) singlet. Table A.4: SU(4) Irreps Dynkin Dimension l SU(3) label (name) (index) Quadrality singlets (100) 4 1 1 1 (010) 6 2 2 0 (200) 10 6 2 1 (101) 15 8 0 1 * (011) 20 13 1 0 (020) 20 16 0 0 (003) 20 21 1 1 (400) 35 56 0 1 (201) 36 33 1 1 (210) 45 48 0 0 (030) 50 70 2 0 (500) 56 126 1 1 (120) 60 71 1 0 (111) 64 64 2 0 (301) 70 98 2 1 (202) 84 112 0 1 * (310) 84 133 1 0 (600) 84 252 2 1 (040) 105 224 0 0 (104) 120 238 1 1 (007) 120 462 1 1 (220) 126 210 2 0 (112) 140 203 1 0 (031) 140 259 1 0 (410) 140 308 2 0 (302) 160 296 1 1 (800) 165 792 0 1 (121) 175 280 0 0 (501) 189 504 0 1 (050) 196 588 2 0 (015) 216 630 1 0 (900) 220 1287 1 1 (023) 224 504 1 0 (311) 256 512 0 0 (402) 270 666 2 1 (230) 280 672 0 0 (140) 280 742 1 0 (601) 280 966 1 1 (10, 0, 0) 286 2002 2 1 (212) 300 580 2 0 (303) 300 720 0 1 * (610) 315 1176 0 0 (060) 336 1344 0 0 (221) 360 762 1 0 (420) 360 1056 0 0 (0, 0, 11) 364 3003 1 1 (131) 384 896 2 0 (701) 396 1716 2 1 Table A.4: SU(4) Irreps (continued) Dynkin Dimension l SU(3) label (name) (index) Quadrality singlets (411) 420 1113 1 0 (205) 420 1337 1 1 (710) 440 2046 1 0 (12, 0, 0) 455 4368 0 1 (330) 480 1464 1 0 (403) 500 1525 1 1 (051) 504 1806 1 0 (213) 540 1359 1 0 (240) 540 1764 2 0 (520) 540 2007 1 0 (070) 540 2772 2 0 (108) 540 2871 1 1 (13, 0, 0) 560 6188 1 1 (810) 594 3366 2 0 (602) 616 2464 0 1 (321) 630 1722 2 0 (511) 640 2176 2 0 (14, 0, 0) 680 8568 2 1 (901) 715 4576 0 1 (222) 729 1944 0 0 (141) 735 2352 0 0 (430) 750 2850 2 0 (132) 756 2205 1 0 (503) 770 2926 2 1 (620) 770 3542 2 0 (019) 780 5291 1 0 (0, 0, 15) 816 11628 1 1 (404) 825 3080 0 1 * (080) 825 5280 0 0 (160) 840 3906 1 0 (702) 864 4248 1 1 (412) 875 2800 0 0 (043) 900 3585 1 0 (116) 924 3927 1 0 (10, 0, 1) 924 7007 1 1 (250) 945 4032 0 0 (313) 960 3008 2 0 (16, 0, 0) 969 15504 0 1 (124) 1000 3450 1 0 (10, 1, 0) 1001 8008 0 0 (027) 1056 5896 1 0 (035) 1100 5115 1 0 (306) 1120 5208 1 1 (17, 0, 0) 1140 20349 1 1 (802) 1170 6942 2 1 (11, 0, 1) 1170 10374 2 1 Table A.5: SU(5) Irreps Dynkin Dimension l SU(4) SU(3)×SU(2) label (name) (index) Quintality singlets singlets (1000) 5 1 1 1 0 (0100) 10 3 2 0 1 (2000) 15 7 2 1 0 (1001) 24 10 0 1 * 1 * (0003) 35 28 2 1 0 (0011) 40 22 2 0 0 (0101) 45 24 1 0 0 (0020) 50 35 1 0 1 (2001) 70 49 1 1 0 (0004) 70 84 1 1 0 (0110) 75 50 0 0 1 * (0012) 105 91 1 0 0 (2010) 126 105 0 0 0 (5000) 126 210 0 1 0 (3001) 160 168 2 1 0 (1101) 175 140 2 0 1 (1200) 175 175 0 0 0 (0300) 175 210 1 0 1 (2002) 200 200 0 1 * 1 * (1020) 210 203 2 0 0 (6000) 210 462 1 1 0 (3100) 224 280 0 0 0 (1110) 280 266 1 0 0 (3010) 280 336 1 0 0 (0210) 315 357 2 0 1 (1004) 315 462 2 1 0 (7000) 330 924 2 1 0 (2200) 420 574 1 0 0 (4100) 420 714 1 0 0 (1012) 450 510 2 0 0 (3002) 450 615 1 1 0 (1102) 480 536 1 0 0 (0040) 490 882 2 0 1 (0008) 495 1716 2 1 0 (4010) 540 882 2 0 0 (0202) 560 728 2 0 0 (1300) 560 868 2 0 0 (1005) 560 1092 1 1 0 (2110) 700 910 2 0 0 (1030) 700 1050 0 0 0 (0009) 715 3003 1 1 0 (1021) 720 924 1 0 1 (5100) 720 1596 2 0 0 (3200) 840 1512 2 0 0 (4002) 875 1575 2 1 0 (6001) 924 2310 0 1 0 (1013) 945 1449 1 0 0 (0105) 945 2016 2 0 0 * SU(4)×U(1) and SU(3)×SU(2)×U(1) singlets resp. Table A.5: SU(5) Irreps (continued) Dynkin Dimension l SU(4) SU(3)×SU(2) label (name) (index) Quintality singlets singlets (0130) 980 1666 1 0 1 (3003) 1000 1750 0 1 * 1 * (10, 0, 0, 0) 1001 5005 0 1 0 (1111) 1024 1280 0 0 1 * (0121) 1050 1540 2 0 0 (3011) 1050 1575 0 0 0 (0211) 1120 1624 1 0 0 (0016) 1155 3234 2 0 0 (0220) 1176 1960 0 0 1 * (0500) 1176 2940 0 0 1 (0203) 1200 2040 1 0 0 (2102) 1215 1782 2 0 1 (0032) 1260 2478 2 0 0 (11, 0, 0, 0) 1365 8008 1 1 0 (0113) 1440 2472 2 0 0 (7001) 1440 4488 1 1 0 (0041) 1470 3234 1 0 0 (0024) 1500 3450 2 0 0 (2005) 1540 3542 2 1 0 (0106) 1540 4158 1 0 0 (2201) 1701 2835 0 0 0 (4101) 1750 3500 0 0 0 (0017) 1760 6072 1 0 0 (2030) 1800 3360 1 0 0 (12, 0, 0, 0) 1820 12376 2 1 0 (2021) 1890 3087 2 0 0 (0401) 1890 4032 2 0 0 (4003) 1925 4235 1 1 0 (4011) 2000 3900 1 0 0 (8001) 2145 8151 2 1 0 (1301) 2205 4116 1 0 1 (4020) 2250 4875 0 0 0 (7010) 2376 7920 0 0 0 (0, 0, 0, 13) 2380 18564 2 1 0 (0033) 2400 5880 1 0 0 (0122) 2430 4536 1 0 0 (0025) 2475 7095 1 0 0 (2111) 2520 4074 1 0 0 (2013) 2520 4746 2 0 0 (0410) 2520 5964 1 0 1 (2006) 2520 7224 1 1 0 (0600) 2520 8316 2 0 1 (8100) 2574 10725 0 0 0 (2103) 2625 4900 1 0 0 (0114) 2625 5775 1 0 0 (2120) 2700 4950 0 0 0 (5101) 2970 7524 1 0 0 * SU(4)×U(1) and SU(3)×SU(2)×U(1) singlets resp. Table A.6: SU(6) Irreps Dynkin Dimension l SU(5) SU(4)×SU(2) SU(3)×SU(3) label (name) (index) Sextality singlets singlets singlets (10000) 6 1 1 1 0 0 (01000) 15 4 2 0 1 0 (00100) 20 6 3 0 0 2 (20000) 21 8 2 1 0 0 (10001) 35 12 0 1 * 1 * 1 * (30000) 56 36 3 1 0 0 (11000) 70 33 3 0 0 0 (01001) 84 38 1 0 0 0 (00101) 105 52 2 0 0 0 (00020) 105 64 2 0 1 0 (20001) 120 68 1 1 0 0 (00004) 126 120 2 1 0 0 (00200) 175 120 0 0 0 2+1 * (01010) 189 108 0 0 1 * 1 * (00110) 210 131 1 0 0 0 (00012) 210 152 2 0 0 0 (00005) 252 330 1 1 0 0 (20010) 280 192 0 0 0 0 (30001) 315 264 2 1 0 0 (00102) 336 248 1 0 0 0 (11001) 384 256 2 0 1 0 (20002) 405 324 0 1 * 1 * 1 * (00021) 420 358 1 0 0 0 (60000) 462 792 0 1 0 0 (03000) 490 504 0 0 1 0 (00013) 504 516 1 0 0 0 (10101) 540 378 3 0 0 2 (10020) 560 456 3 0 0 0 (40001) 700 810 3 1 0 0 (30010) 720 696 1 0 0 0 (70000) 792 1716 1 1 0 0 (11010) 840 668 1 0 0 0 (10200) 840 764 1 0 0 0 (30100) 840 864 0 0 0 0 (11100) 896 768 0 0 0 0 (00300) 980 1134 3 0 0 4 (10110) 1050 880 2 0 0 0 (30002) 1050 1135 1 1 0 0 (41000) 1050 1440 0 0 0 0 (21001) 1134 1053 3 0 0 0 (22000) 1134 1296 0 0 0 0 (02010) 1176 1120 2 0 1 0 (02100) 1176 1204 1 0 0 0 (11002) 1260 1146 1 0 0 0 (80000) 1287 3432 2 1 0 0 (10005) 1386 2112 2 1 0 0 (01200) 1470 1568 2 0 0 0 (40010) 1575 2040 2 0 0 0 * SU(5)×U(1) and SU(4)×SU(2)×U(1) and SU(3)×SU(3)×U(1) singlets resp. Table A.6: SU(6) Irreps (continued) Dynkin Dimension l SU(5) SU(4)×SU(2) SU(3)×SU(3) label (name) (index) Sextality singlets singlets singlets (10102) 1701 1620 2 0 0 0 (13000) 1764 2310 1 0 0 0 (04000) 1764 2688 2 0 1 0 (02002) 1800 1920 2 0 0 0 (40100) 1800 2460 1 0 0 0 (01110) 1960 1932 3 0 0 2 (51000) 1980 3498 1 0 0 0 (90000) 2002 6435 3 1 0 0 (10021) 2205 2352 2 0 1 0 (40002) 2310 3256 2 1 0 0 (21010) 2430 2592 2 0 0 0 (21100) 2520 2868 1 0 0 0 (20200) 2520 2976 2 0 0 0 (10030) 2520 3156 1 0 0 0 (32000) 2520 3732 1 0 0 0 (10006) 2520 4884 1 1 0 0 (10013) 2688 3328 2 0 0 0 (30003) 2695 3696 0 1 * 1 * 1 * (0, 0, 0, 0, 10) 3003 11440 2 1 0 0 (50010) 3080 5148 3 0 0 0 (30011) 3200 3840 0 0 0 0 (20110) 3240 3564 3 0 0 0 (50100) 3465 6072 2 0 0 0 (61000) 3465 7656 2 0 0 0 (11011) 3675 3780 0 0 1 * 1 * (21002) 3675 4340 2 0 1 0 (10201) 3969 4536 0 0 0 2+1 * (00400) 4116 7056 0 0 0 4+1 * (10103) 4200 5260 1 0 0 0 (70001) 4290 10296 0 1 0 0 (0, 0, 0, 0, 11) 4368 19448 1 1 0 0 (10111) 4410 4767 1 0 0 0 (12100) 4410 5712 2 0 0 0 (00301) 4410 6216 2 0 0 0 (23000) 4410 7224 2 0 0 0 (02003) 4500 6150 1 0 0 0 (12010) 4536 5508 3 0 0 0 (50002) 4536 8100 3 1 0 0 (03100) 4704 7056 3 0 0 0 (42000) 4950 9240 2 0 0 0 (02011) 5040 6024 1 0 0 0 (01030) 5040 7104 2 0 1 0 (20102) 5292 6426 3 0 0 2 (00050) 5292 11088 2 0 1 0 (10014) 5544 8844 1 0 0 0 (01006) 5544 11616 2 0 0 0 (10120) 5670 7128 0 0 0 0 (31010) 5670 7857 3 0 0 0 * SU(5)×U(1) and SU(4)×SU(2)×U(1) and SU(3)×SU(3)×U(1) singlets resp. Table A.7: SU(7) Irreps Dynkin Dimension l SU(6) SU(5)×SU(2) SU(4)×SU(3) label (name) (index) Septality singlets singlets singlets (100000) 7 1 1 1 0 0 (010000) 21 5 2 0 1 0 (200000) 28 9 2 1 0 0 (001000) 35 10 3 0 0 1 (100001) 48 14 0 1 * 1 * 1 * (300000) 84 45 3 1 0 0 (110000) 112 46 3 0 0 0 (010001) 140 55 1 0 0 0 (200001) 189 90 1 1 0 0 (000020) 196 105 3 0 1 0 (000101) 210 95 3 0 0 0 (000004) 210 165 3 1 0 0 (001001) 224 100 2 0 0 0 (000012) 378 234 3 0 0 0 (010010) 392 196 0 0 1 * 1 * (000005) 462 495 2 1 0 0 (000110) 490 280 2 0 0 0 (000200) 490 315 1 0 0 1 (200010) 540 315 0 0 0 0 (300001) 560 390 2 1 0 0 (001010) 588 329 1 0 0 0 (110001) 735 420 2 0 1 0 (200002) 735 490 0 1 * 1 * 1 * (000102) 756 495 2 0 0 0 (001100) 784 490 0 0 0 1 * (001002) 840 540 1 0 0 0 (000021) 882 651 2 0 0 0 (000006) 924 1287 1 1 0 0 (000013) 1008 870 2 0 0 0 (000030) 1176 1050 1 0 1 0 (020001) 1260 885 3 0 0 0 (101001) 1323 819 3 0 0 1 (400001) 1386 1320 3 1 0 0 (300010) 1575 1275 1 0 0 0 (700000) 1716 3003 0 1 0 0 (110010) 2016 1380 1 0 0 0 (000103) 2100 1875 1 0 0 0 (300002) 2156 1925 1 1 0 0 (000014) 2310 2640 1 0 0 0 (000111) 2352 1806 1 0 0 0 (300100) 2400 2100 0 0 0 0 (210001) 2450 1925 3 0 0 0 (102000) 2646 2205 0 0 0 0 (000022) 2646 2583 1 0 0 0 (110002) 2800 2150 1 0 0 0 (110100) 2940 2205 0 0 0 0 (100200) 2940 2415 2 0 0 0 * SU(6)×U(1) and SU(5)×SU(2)×U(1) and SU(4)×SU(3)×U(1) singlets resp. Table A.8: SU(8) Irreps Dynkin Dimension l SU(7) SU(6)×SU(2) SU(5)×SU(3) SU(4)×SU(4) label (name) (index) Octality singlets singlets singlets singlets (1000000) 8 1 1 1 0 0 0 (0100000) 28 6 2 0 1 0 0 (2000000) 36 10 2 1 0 0 0 (0010000) 56 15 3 0 0 1 0 (1000001) 63 16 0 1 * 1 * 1 * 1 * (0001000) 70 20 4 0 0 0 2 (3000000) 120 55 3 1 0 0 0 (1100000) 168 61 3 0 0 0 0 (0100001) 216 75 1 0 0 0 0 (2000001) 280 115 1 1 0 0 0 (4000000) 330 220 4 1 0 0 0 (0200000) 336 160 4 0 1 0 0 (1010000) 378 156 4 0 0 0 0 (0010001) 420 170 2 0 0 0 0 (0001001) 504 215 3 0 0 0 0 (2100000) 630 340 4 0 0 0 0 (0100010) 720 320 0 0 1 * 1 * 1 * (0000005) 792 715 3 1 0 0 0 (3000001) 924 550 2 1 0 0 0 (2000010) 945 480 0 0 0 0 0 (0000110) 1008 526 3 0 0 0 0 (0000200) 1176 700 2 0 0 1 0 (2000002) 1232 704 0 1 * 1 * 1 * 1 * (1100001) 1280 640 2 0 1 0 0 (0010010) 1344 680 1 0 0 0 0 (0001010) 1512 804 2 0 0 0 0 (0000102) 1512 885 3 0 0 0 0 (0000021) 1680 1090 3 0 0 0 0 (0000006) 1716 2002 2 1 0 0 0 (0002000) 1764 1120 0 0 0 0 2+1 * (0010002) 1800 1025 1 0 0 0 0 (0000013) 1848 1375 3 0 0 0 0 (0001002) 2100 1250 2 0 0 0 0 (0010100) 2352 1344 0 0 0 1 * 1 * (0001100) 2352 1414 1 0 0 0 0 (0200001) 2520 1555 3 0 0 0 0 (0000030) 2520 1980 2 0 1 0 0 (4000001) 2520 2035 3 1 0 0 0 (1010001) 2800 1550 3 0 0 1 0 (3000010) 3080 2145 1 0 0 0 0 (0000007) 3432 5005 1 1 0 0 0 (1001001) 3584 2048 4 0 0 0 2 (3000002) 4032 3064 1 1 0 0 0 (1100010) 4200 2525 1 0 0 0 0 (0000103) 4620 3630 2 0 0 0 0 (0000014) 4620 4510 2 0 0 0 0 (2100001) 4752 3234 3 0 0 0 0 (0000111) 5376 3712 2 0 0 0 0 * SU(7)×U(1) and SU(6)×SU(2)×U(1) and SU(5)×SU(3)×U(1) and SU(4)×SU(4)×U(1) singlets resp. Table A.9: SU(9) Irreps Dynkin Dimension l SU(8) SU(7)×SU(2) SU(6)×SU(3) SU(5)×SU(4) label (name) (index) Nonality singlets singlets singlets singlets (10000000) 9 1 1 1 0 0 0 (01000000) 36 7 2 0 1 0 0 (20000000) 45 11 2 1 0 0 0 (10000001) 80 18 0 1 * 1 * 1 * 1 * (00100000) 84 21 3 0 0 1 0 (00010000) 126 35 4 0 0 0 1 (30000000) 165 66 3 1 0 0 0 (11000000) 240 78 3 0 0 0 0 (01000001) 315 98 1 0 0 0 0 (20000001) 396 143 1 1 0 0 0 (40000000) 495 286 4 1 0 0 0 (02000000) 540 231 4 0 1 0 0 (10100000) 630 238 4 0 0 0 0 (00100001) 720 266 2 0 0 0 0 (21000000) 990 473 4 0 0 0 0 (00001001) 1008 406 4 0 0 0 0 (00010001) 1050 420 3 0 0 0 0 (01000010) 1215 486 0 0 1 * 1 * 1 * (00000005) 1287 1001 4 1 0 0 0 (30000001) 1440 748 2 1 0 0 0 (20000010) 1540 693 0 0 0 0 0 (00000110) 1890 903 4 0 0 0 0 (20000002) 1944 972 0 1 * 1 * 1 * 1 * * SU(8)×U(1) and SU(7)×SU(2)×U(1) and SU(6)×SU(3)×U(1) and SU(5)×SU(4)×U(1) singlets resp. Table A.10: SU(10) Irreps Dynkin Dimension l SU(9) SU(8)×SU(2) SU(7)×SU(3) SU(6)×SU(4) SU(5)×SU(5) label (name) (index) Decality singlets singlets singlets singlets singlets (100000000) 10 1 1 1 0 0 0 0 (010000000) 45 8 2 0 1 0 0 0 (200000000) 55 12 2 1 0 0 0 0 (100000001) 99 20 0 1 * 1 * 1 * 1 * 1 * (001000000) 120 28 3 0 0 1 0 0 (000100000) 210 56 4 0 0 0 1 0 (300000000) 220 78 3 1 0 0 0 0 (000010000) 252 70 5 0 0 0 0 2 (110000000) 330 97 3 0 0 0 0 0 (010000001) 440 124 1 0 0 0 0 0 (200000001) 540 174 1 1 0 0 0 0 (400000000) 715 364 4 1 0 0 0 0 (020000000) 825 320 4 0 1 0 0 0 (101000000) 990 344 4 0 0 0 0 0 (001000001) 1155 392 2 0 0 0 0 0 (210000000) 1485 636 4 0 0 0 0 0 (100100000) 1848 700 5 0 0 0 0 0 (010000010) 1925 700 0 0 1 * 1 * 1 * 1 * (000100001) 1980 742 3 0 0 0 0 0 * SU(9)×U(1) and SU(8)×SU(2)×U(1) and SU(7)×SU(3)×U(1) and SU(6)×SU(4)×U(1) and SU(5)×SU(5)×U(1) singlets resp. Table A.11: SU(11) Irreps Dynkin Dimension l SU(10) SU(9)×SU(2) SU(8)×SU(3) SU(7)×SU(4) SU(6)×SU(5) label (name) (index) Decality singlets singlets singlets singlets singlets (1000000000) 11 1 1 1 0 0 0 0 (0100000000) 55 9 2 0 1 0 0 0 (2000000000) 66 13 2 1 0 0 0 0 (1000000001) 120 22 0 1 * 1 * 1 * 1 * 1 * (0010000000) 165 36 3 0 0 1 0 0 (3000000000) 286 91 3 1 0 0 0 0 (0001000000) 330 84 4 0 0 0 1 0 (1100000000) 440 118 3 0 0 0 0 0 (0000100000) 462 126 5 0 0 0 0 1 (0100000001) 594 153 1 0 0 0 0 0 * SU(10)×U(1) and SU(9)×SU(2)×U(1) and SU(8)×SU(3)×U(1) and SU(7)×SU(4)×U(1) and SU(6)×SU(5)×U(1) singlets resp. Table A.12: SU(12) Irreps Dynkin Dimension l SU(11) SU(10)×SU(2) SU(9)×SU(3) SU(7)×SU(5) SU(6)×SU(6) label (name) (index) Decality singlets singlets singlets singlets singlets (10000000000) 12 1 1 1 0 0 0 0 (01000000000) 66 10 2 0 1 0 0 0 (20000000000) 78 14 2 1 0 0 0 0 (10000000001) 143 24 0 1 * 1 * 1 * 1 * 1 * (00100000000) 220 45 3 0 0 1 0 0 (30000000000) 364 105 3 1 0 0 0 0 (00010000000) 495 120 4 0 0 0 0 0 (11000000000) 572 141 3 0 0 0 0 0 (01000000001) 780 185 1 0 0 0 0 0 (00001000000) 792 210 5 0 0 0 1 0 * SU(11)×U(1) and SU(10)×SU(2)×U(1) and SU(9)×SU(3)×U(1) and SU(7)×SU(5)×U(1) and SU(6)×SU(6)×U(1) singlets resp. A.1.2. SO(N ) Table A.13: SO(7) Irreps Dynkin Dimension l/2 Congruency SU(4) label (name) (index) class singlets (100) 7 1 0 1 (001) 8 1 1 0 (010) 21 5 0 0 (200) 27 9 0 1 (002) 35 10 0 0 (101) 48 14 1 0 (300) 77 44 0 1 (110) 105 45 0 0 (011) 112 46 1 0 (003) 112 54 1 0 (201) 168 85 1 0 (020) 168 96 0 0 (400) 182 156 0 1 (102) 189 90 0 0 (004) 294 210 0 0 (210) 330 220 0 0 (012) 378 234 0 0 (500) 378 450 0 1 (301) 448 344 1 0 (111) 512 320 1 0 (103) 560 390 1 0 (202) 616 440 0 0 (005) 672 660 1 0 (120) 693 561 0 0 (600) 714 1122 0 1 (021) 720 570 1 0 (310) 819 780 0 0 (030) 825 825 0 0 (013) 1008 870 1 0 (401) 1008 1086 1 0 (700) 1254 2508 0 1 (104) 1386 1320 0 0 (006) 1386 1782 0 0 (211) 1512 1341 1 0 (302) 1560 1560 0 0 (112) 1617 1386 0 0 (203) 1728 1656 1 0 (410) 1750 2250 0 0 (220) 1911 2093 0 0 (501) 2016 2892 1 0 (022) 2079 2178 0 0 (800) 2079 5148 0 1 (014) 2310 2640 0 0 (007) 2640 4290 1 0 (121) 2800 2950 1 0 (130) 3003 3861 0 0 (040) 3003 4576 0 0 (105) 3024 3762 1 0 Table A.13: SO(7) Irreps (continued) Dynkin Dimension l/2 Congruency SU(4) label (name) (index) class singlets (031) 3080 3905 1 0 (900) 3289 9867 0 1 (510) 3366 5610 0 0 (402) 3375 4500 0 0 (311) 3584 4288 1 0 (601) 3696 6798 1 0 (204) 4095 5070 0 0 (113) 4096 4608 1 0 (303) 4200 5325 1 0 (320) 4312 6160 0 0 (212) 4550 5200 0 0 (008) 4719 9438 0 0 (015) 4752 6930 1 0 (023) 4928 6600 1 0 (10, 0, 0) 5005 17875 0 1 (610) 5985 12540 0 0 (106) 6006 9438 0 0 (701) 6336 14520 1 0 (502) 6545 11220 0 0 (11, 0, 0) 7371 30888 0 1 (221) 7392 10076 1 0 (411) 7392 11484 1 0 (230) 7560 12240 0 0 (122) 7722 10296 0 0 (032) 8008 12584 0 0 (009) 8008 19305 1 0 (420) 8568 15504 0 0 (205) 8624 13398 1 0 (403) 8800 14300 1 0 (050) 8918 19110 0 0 (114) 9009 12870 0 0 (016) 9009 16302 0 0 (304) 9625 15125 0 0 (140) 10010 18590 0 0 (710) 10010 25740 0 0 (041) 10192 18746 1 0 (024) 10296 17160 0 0 (801) 10296 28743 1 0 (312) 10395 15345 0 0 (12, 0, 0) 10556 51272 0 1 (131) 10752 16960 1 0 (213) 11088 15906 1 0 (107) 11088 21450 1 0 (602) 11704 25080 0 0 (0, 0, 10) 13013 37180 0 0 (511) 13824 27072 1 0 (13, 0, 0) 14756 82212 0 1 (520) 15561 34827 0 0 (330) 15912 31824 0 0 Table A.14: SO(8) Irreps Dynkin Dimension l/2 Congruency SO(7) label (name) (index) class singlets (0001) 8 s 1 (10) 1 (1000) 8 v 1 (02) 0 (0010) 8 c 1 (12) 0 (0100) 28 6 (00) 0 (2000) 35 v 10 (00) 0 (0020) 35 c 10 (00) 0 (0002) 35 s 10 (00) 1 (1010) 56 s 15 (10) 0 (0011) 56 v 15 (02) 0 (1001) 56 c 15 (12) 0 (0003) 112 s 54 (10) 1 (3000) 112 v 54 (02) 0 (0030) 112 c 54 (12) 0 (0101) 160 s 60 (10) 0 (1100) 160 v 60 (02) 0 (0110) 160 c 60 (12) 0 (2001) 224 vs 100 (10) 0 (0021) 224 cs 100 (10) 0 (1020) 224 cv 100 (02) 0 (1002) 224 sv 100 (02) 0 (2010) 224 vc 100 (12) 0 (0012) 224 sc 100 (12) 0 (4000) 294 v 210 (00) 0 (0040) 294 c 210 (00) 0 (0004) 294 s 210 (00) 1 (0200) 300 150 (00) 0 (1011) 350 150 (00) 0 (2100) 567 v 324 (00) 0 (0120) 567 c 324 (00) 0 (0102) 567 s 324 (00) 0 (3010) 672 vc 444 (10) 0 (1030) 672 cv 444 (10) 0 (0031) 672 cs 444 (02) 0 (0013) 672 sc 444 (02) 0 (3001) 672 vs 444 (12) 0 (1003) 672 sv 444 (12) 0 (0005) 672 s 660 (10) 1 (5000) 672 v 660 (02) 0 (0050) 672 c 660 (12) 0 (1110) 840 s 465 (10) 0 (0111) 840 v 465 (02) 0 (1101) 840 c 465 (12) 0 (2020) 840 s 540 (00) 0 (2002) 840 c 540 (00) 0 (0022) 840 v 540 (00) 0 (1012) 1296 s 810 (10) 0 (2011) 1296 v 810 (02) 0 (1021) 1296 c 810 (12) 0 (6000) 1386 v 1782 (00) 0 Table A.14: SO(8) Irreps (continued) Dynkin Dimension l/2 Congruency SO(7) label (name) (index) class singlets (0060) 1386 c 1782 (00) 0 (0006) 1386 s 1782 (00) 1 (0201) 1400 s 975 (10) 0 (1200) 1400 v 975 (02) 0 (0210) 1400 c 975 (12) 0 (0103) 1568 s 1260 (10) 0 (3100) 1568 v 1260 (02) 0 (0130) 1568 c 1260 (12) 0 (4001) 1680 vs 1530 (10) 0 (0041) 1680 cs 1530 (10) 0 (1040) 1680 cv 1530 (02) 0 (1004) 1680 sv 1530 (02) 0 (4010) 1680 vc 1530 (12) 0 (0014) 1680 sc 1530 (12) 0 (0300) 1925 1650 (00) 0 (2003) 2400 sv 2100 (10) 0 (0023) 2400 sc 2100 (10) 0 (3020) 2400 vc 2100 (02) 0 (3002) 2400 vs 2100 (02) 0 (2030) 2400 cv 2100 (12) 0 (0032) 2400 cs 2100 (12) 0 (0007) 2640 s 4290 (10) 1 (7000) 2640 v 4290 (02) 0 (0070) 2640 c 4290 (12) 0 (2101) 2800 vs 2150 (10) 0 (0121) 2800 cs 2150 (10) 0 (1120) 2800 cv 2150 (02) 0 (1102) 2800 sv 2150 (02) 0 (2110) 2800 vc 2150 (12) 0 (0112) 2800 sc 2150 (12) 0 (3011) 3675 v 3150 (00) 0 (1031) 3675 c 3150 (00) 0 (1013) 3675 s 3150 (00) 0 (4100) 3696 v 3960 (00) 0 (0140) 3696 c 3960 (00) 0 (0104) 3696 s 3960 (00) 0 (5010) 3696 vc 4422 (10) 0 (1050) 3696 cv 4422 (10) 0 (0051) 3696 cs 4422 (02) 0 (0015) 3696 sc 4422 (02) 0 (5001) 3696 vs 4422 (12) 0 (1005) 3696 sv 4422 (12) 0 (1111) 4096 3072 (00) 0 (2200) 4312 v 4004 (00) 0 (0220) 4312 c 4004 (00) 0 (0202) 4312 s 4004 (00) 0 (2021) 4536 s 3807 (10) 0 (1022) 4536 v 3807 (02) 0 (2012) 4536 c 3807 (12) 0 Table A.15: SO(9) Irreps Dynkin Dimension l/2 Congruency SO(8) SU(4)×SU(2) label (name) (index) class singlets singlets (1000) 9 1 0 1 0 (0001) 16 2 1 0 0 (0100) 36 7 0 0 0 (2000) 44 11 0 1 1 (0010) 84 21 0 0 1 (0002) 126 35 0 0 0 (1001) 128 32 1 0 0 (3000) 156 65 0 1 0 (1100) 231 77 0 0 0 (0101) 432 150 1 0 0 (4000) 450 275 0 1 1 (0200) 495 220 0 0 1 (2001) 576 232 1 0 0 (1010) 594 231 0 0 0 (0003) 672 308 1 0 0 (0011) 768 320 1 0 0 (2100) 910 455 0 0 0 (1002) 924 385 0 0 0 (5000) 1122 935 0 1 0 (0110) 1650 825 0 0 0 (3001) 1920 1120 1 0 0 (0020) 1980 1155 0 0 1 (2010) 2457 1365 0 0 1 (6000) 2508 2717 0 1 1 (1101) 2560 1280 1 0 0 (1200) 2574 1573 0 0 0 (0102) 2772 1463 0 0 0 (0004) 2772 1848 0 0 0 (3100) 2772 1925 0 0 0 (2002) 3900 2275 0 0 0 (0300) 4004 3003 0 0 0 (0012) 4158 2541 0 0 0 (1003) 4608 2816 1 0 0 (0201) 4928 3080 1 0 0 (1011) 5040 2870 1 0 0 (7000) 5148 7007 0 1 0 (4001) 5280 4180 1 0 0 (4100) 7140 6545 0 0 0 (3010) 7700 5775 0 0 0 (2200) 8748 7047 0 0 1 (1110) 9009 6006 0 0 0 (2101) 9504 6468 1 0 0 (0005) 9504 8580 1 0 0 (8000) 9867 16445 0 1 1 (1020) 12012 9009 0 0 0 (3002) 12375 9625 0 0 0 (0111) 12672 8800 1 0 0 (0103) 12672 9328 1 0 0 (5001) 12672 13024 1 0 0 Table A.15: SO(9) Irreps (continued) Dynkin Dimension l/2 Congruency SO(8) SU(4)×SU(2) label (name) (index) class singlets singlets (0021) 13200 10450 1 0 0 (1102) 15444 10725 0 0 0 (0210) 15444 12441 0 0 1 (5100) 16302 19019 0 0 0 (0013) 16896 14080 1 0 0 (9000) 17875 35750 0 1 0 (1004) 18018 15015 0 0 0 (1300) 18018 17017 0 0 0 (2003) 18480 14630 1 0 0 (2011) 19712 14784 1 0 0 (4010) 20196 19635 0 0 1 (0400) 22932 25480 0 0 1 (0030) 23595 23595 0 0 1 (3200) 23868 24531 0 0 0 (1201) 24192 19488 1 0 0 (1012) 25740 20020 0 0 0 (0120) 27027 24024 0 0 0 (0202) 27456 22880 0 0 0 (6001) 27456 35464 1 0 0 (3101) 27648 24576 1 0 0 (0006) 28314 33033 0 0 0 (2110) 31500 27125 0 0 0 (4002) 32725 32725 0 0 0 (6100) 33957 49049 0 0 0 (0301) 34944 33488 1 0 0 (2020) 44352 41888 0 0 1 (0104) 46332 45045 0 0 0 (5010) 46683 57057 0 0 0 (2102) 54675 48600 0 0 0 (7001) 54912 86944 1 0 0 (2300) 54978 64141 0 0 0 (3003) 56320 56320 1 0 0 (4200) 56430 72105 0 0 1 (0022) 56628 58201 0 0 0 (0014) 56628 61347 0 0 0 (3011) 59136 56672 1 0 0 (1005) 59136 64064 1 0 0 (0112) 60060 55055 0 0 0 (1111) 65536 57344 1 0 0 (7100) 65780 115115 0 0 0 (1103) 67200 61600 1 0 0 (4101) 68640 77220 1 0 0 (2004) 69300 71225 0 0 0 (1210) 71500 71500 0 0 0 (0007) 75504 110110 1 0 0 (1021) 76032 73920 1 0 0 (5002) 76076 95095 0 0 0 (2201) 78624 79716 1 0 0 (3110) 87516 94809 0 0 0 Table A.16: SO(10) Irreps Dynkin Dimension l/2 Congruency SU(5) SU(2)×SU(2)×SU(4) SO(9) SU(2)×SO(7) label (name) (index) class singlets singlets singlets singlets (10000) 10 1 (02) 0 0 1 0 (00001) 16 2 (11) 1 0 0 0 (01000) 45 8 (00) 1 * 0 0 0 (20000) 54 12 (00) 0 1 1 1 (00100) 120 28 (02) 0 0 0 1 (00020) 126 35 (02) 1 0 0 0 (10010) 144 34 (11) 0 0 0 0 (00011) 210 56 (00) 1 * 1 0 0 (30000) 210 77 (02) 0 0 1 0 (11000) 320 96 (02) 0 0 0 0 (01001) 560 182 (11) 1 0 0 0 (40000) 660 352 (00) 0 1 1 1 (00030) 672 308 (11) 1 0 0 0 (20001) 720 266 (11) 0 0 0 0 (02000) 770 308 (00) 1 * 1 0 1 (10100) 945 336 (00) 0 0 0 0 (10020) 1050 420 (00) 0 0 0 0 (00110) 1200 470 (11) 0 0 0 0 (21000) 1386 616 (00) 0 0 0 0 (00012) 1440 628 (11) 1 0 0 0 (10011) 1728 672 (02) 0 0 0 0 (50000) 1782 1287 (02) 0 0 1 0 (30010) 2640 1386 (11) 0 0 0 0 (00040) 2772 1848 (00) 1 0 0 0 (01100) 2970 1353 (02) 0 0 0 0 (11010) 3696 1694 (11) 0 0 0 0 (01020) 3696 1848 (02) 1 0 0 0 (00200) 4125 2200 (00) 0 1 0 1 (60000) 4290 4004 (00) 0 1 1 1 (20100) 4312 2156 (02) 0 0 0 1 (12000) 4410 2401 (02) 0 0 0 0 (31000) 4608 2816 (02) 0 0 0 0 (20020) 4950 2695 (02) 0 0 0 0 (10003) 5280 3124 (11) 0 0 0 0 (01011) 5940 2904 (00) 1 * 0 0 0 (00120) 6930 4004 (00) 0 0 0 0 (00031) 6930 4389 (02) 1 0 0 0 (03000) 7644 5096 (00) 1 * 0 0 0 (40001) 7920 5566 (11) 0 0 0 0 (02001) 8064 4592 (11) 1 0 0 0 (20011) 8085 4312 (00) 0 1 0 0 (10101) 8800 4620 (11) 0 0 0 0 (00022) 8910 5544 (00) 1 * 1 0 0 (70000) 9438 11011 (02) 0 0 1 0 (00005) 9504 8580 (11) 1 0 0 0 (00111) 10560 5984 (02) 0 0 0 0 (10021) 11088 6314 (11) 0 0 0 0 (41000) 12870 10296 (00) 0 0 0 0 * SU(5)×U(1) singlets resp. Table A.16: SO(10) Irreps (continued) Dynkin Dimension l/2 Congruency SU(5) SU(2)×SU(2)×SU(4) SO(9) SU(2)×SO(7) label (name) (index) class singlets singlets singlets singlets (30100) 14784 9856 (00) 0 0 0 0 (21001) 15120 9282 (11) 0 0 0 0 (22000) 16380 11648 (00) 0 1 0 1 (01030) 17280 12144 (11) 1 0 0 0 (30020) 17325 12320 (00) 0 0 0 0 (11100) 17920 10752 (00) 0 0 0 0 (80000) 19305 27456 (00) 0 1 1 1 (50010) 20592 18590 (11) 0 0 0 0 (10040) 20790 16863 (02) 0 0 0 0 (11020) 23040 14848 (00) 0 0 0 0 (20030) 23760 17754 (11) 0 0 0 0 (01110) 25200 16030 (11) 0 0 0 0 (00041) 26400 22660 (11) 1 0 0 0 (10200) 27720 18788 (02) 0 0 0 0 (30011) 28160 19712 (02) 0 0 0 0 (00060) 28314 33033 (02) 1 0 0 0 (00103) 29568 23408 (11) 0 0 0 0 (00201) 30800 22330 (11) 0 0 0 0 (51000) 31680 32032 (02) 0 0 0 0 (02100) 34398 24843 (02) 0 0 0 1 (01012) 34992 23814 (11) 1 0 0 0 (11011) 36750 23275 (02) 0 0 0 0 (90000) 37180 63206 (02) 0 0 1 0 (13000) 37632 31360 (02) 0 0 0 0 (20110) 38016 25872 (11) 0 0 0 0 (00023) 39600 33110 (11) 1 0 0 0 (40100) 42120 36036 (02) 0 0 0 1 (12010) 43680 31668 (11) 0 0 0 0 (02020) 46800 35880 (02) 1 0 0 0 (31010) 48048 38038 (11) 0 0 0 0 (60001) 48048 54054 (11) 0 0 0 0 (10120) 48114 34749 (02) 0 0 0 0 (32000) 48510 43659 (02) 0 0 0 0 (20012) 49280 35728 (11) 0 0 0 0 (40020) 50050 45045 (02) 0 0 0 0 (10031) 50688 39424 (00) 0 0 0 0 (04000) 52920 51744 (00) 1 * 1 0 1 (00121) 55440 42658 (11) 0 0 0 0 (01040) 64350 60060 (00) 1 0 0 0 (10022) 64680 49588 (02) 0 0 0 0 (10, 0, 0, 0, 0) 68068 136136 (00) 0 1 1 1 (21100) 68640 52624 (02) 0 0 0 0 (10050) 68640 72644 (11) 0 0 0 0 (01200) 70070 56056 (00) 0 0 0 0 (00300) 70070 63063 (02) 0 0 0 1 (03001) 70560 60564 (11) 1 0 0 0 (61000) 70785 88088 (00) 0 0 0 0 (10111) 72765 51744 (00) 0 0 0 0 * SU(5)×U(1) singlets resp. Table A.17: SO(11) Irreps Dynkin Dimension l/2 Congruency label (name) (index) class (10000) 11 1 0 (00001) 32 4 1 (01000) 55 9 0 (20000) 65 13 0 (00100) 165 36 0 (30000) 275 90 0 (10001) 320 72 1 (00010) 330 84 0 (11000) 429 117 0 (00002) 462 126 0 (40000) 935 442 0 (02000) 1144 416 0 (01001) 1408 432 1 (10100) 1430 468 0 (20001) 1760 604 1 (21000) 2025 810 0 (50000) 2717 1729 0 (10010) 3003 1092 0 (00101) 3520 1304 1 (00003) 4224 1872 1 (10002) 4290 1638 0 (01100) 5005 2093 0 (00011) 5280 2196 1 (60000) 7007 5733 0 (30001) 7040 3376 1 (20100) 7128 3240 0 (12000) 7150 3510 0 (31000) 7293 3978 0 (00200) 7865 3861 0 (11001) 10240 4352 1 (01010) 11583 5265 0 (03000) 13650 8190 0 (20010) 15400 7560 0 (70000) 16445 16744 0 (01002) 17160 8112 0 (41000) 21945 15561 0 (20002) 22275 11340 0 (40001) 22880 14508 1 (00110) 23595 12441 0 (00020) 23595 13728 0 (02001) 24960 13104 1 (30100) 26520 15912 0 (00004) 28314 18018 0 (10101) 28512 13932 1 (22000) 28798 18326 0 (11100) 33033 18018 0 (80000) 35750 44200 0 (10003) 36960 20748 1 (00102) 37752 20592 0 Table A.18: SO(12) Irreps Dynkin Dimension l/2 Congruency label (name) (index) class (100000) 12 1 (02) (000010) 32 4 (10) (010000) 66 10 (00) (200000) 77 14 (00) (001000) 220 45 (02) (100001) 352 76 (10) (300000) 352 104 (02) (000020) 462 126 (00) (000100) 495 120 (00) (110000) 560 140 (02) (000011) 792 210 (02) (400000) 1287 546 (00) (020000) 1638 546 (00) (010010) 1728 504 (10) (101000) 2079 630 (00) (200010) 2112 680 (10) (210000) 2860 1040 (00) (500000) 4004 2275 (02) (000030) 4224 1872 (10) (100020) 4752 1764 (02) (100100) 4928 1680 (02) (001001) 4928 1736 (10) (011000) 8008 3094 (02) (100011) 8085 2940 (00) (000110) 8800 3500 (10) (300001) 9152 4056 (10) (000012) 9504 4068 (10) (600000) 11011 8008 (00) (120000) 11088 4956 (02) (310000) 11088 5460 (02) (201000) 11232 4680 (02) (110001) 13728 5460 (10) (002000) 14014 6370 (00) (010100) 21021 8918 (00) (010020) 21450 9750 (00) (030000) 23100 12600 (00) (200020) 27027 13104 (00) (200100) 27456 12480 (00) (700000) 27456 24752 (02) (000040) 28314 18018 (00) (400010) 32032 18564 (10) (410000) 35750 22750 (00) (010011) 36036 16107 (02) (020010) 36960 18060 (10) (100003) 41184 22620 (10) (101010) 43680 20020 (10) (301000) 45045 24570 (00) (200011) 45760 21840 (02) (001100) 48048 23660 (02) Table A.19: SO(13) Irreps Dynkin Dimension l/2 Congruency label (name) (index) class (100000) 13 1 0 (000001) 64 8 1 (010000) 78 11 0 (200000) 90 15 0 (001000) 286 55 0 (300000) 442 119 0 (110000) 715 165 0 (100001) 768 160 1 (000010) 1287 330 0 (000002) 1716 462 0 (400000) 1729 665 0 (020000) 2275 700 0 (101000) 2925 825 0 (210000) 3927 1309 0 (010001) 4160 1160 1 (200001) 4992 1520 1 (500000) 5733 2940 0 (100100) 7722 2475 0 (011000) 12285 4410 0 (001001) 13312 4480 1 (100010) 14300 4950 0 (310000) 16302 7315 0 (120000) 16575 6800 0 (600000) 16744 10948 0 (201000) 17017 6545 0 Table A.20: SO(14) Irreps Dynkin Dimension l/2 Congruency SU(2)×SU(2)×SO(10) label (name) (index) class singlets (1000000) 14 1 (02) 0 (0000010) 64 8 (11) 0 (0100000) 91 12 (00) 0 (2000000) 104 16 (00) 1 (0010000) 364 66 (02) 0 (3000000) 546 135 (02) 0 (1000001) 832 168 (11) 0 (1100000) 896 192 (02) 0 (0001000) 1001 220 (00) 1 (0000020) 1716 462 (02) 0 (0000100) 2002 495 (02) 0 (4000000) 2275 800 (00) 1 (0000011) 3003 792 (00) 0 (0200000) 3080 880 (00) 1 (1010000) 4004 1056 (00) 0 (0100010) 4928 1320 (11) 0 (2100000) 5265 1620 (00) 0 (2000010) 5824 1688 (11) 0 Table A.21: SO(18) Irreps Dynkin Dimension l/2 Congruency SO(8)×SO(10) label (name) (index) class singlets (100000000) 18 1 (02) 0 (010000000) 153 16 (00) 0 (200000000) 170 20 (00) 1 (000000001) 256 32 (11) 0 (001000000) 816 120 (02) 0 (300000000) 1122 209 (02) 0 (110000000) 1920 320 (02) 0 (000100000) 3060 560 (00) 0 (100000010) 4352 800 (11) 0 Table A.22: SO(22) Irreps Dynkin Dimension l/2 Congruency SO(12)×SO(10) label (name) (index) class singlets (10000000000) 22 1 (02) 0 (01000000000) 231 20 (00) 0 (20000000000) 252 24 (00) 1 (00000000010) 1024 128 (11) 0 (00100000000) 1540 190 (02) 0 (11000000000) 3520 480 (02) 0 (00010000000) 7315 1140 (00) 0 Table A.23: SO(26) Irreps Dynkin Dimension l/2 Congruency SO(16)×SO(10) label (name) (index) class singlets (1000000000000) 26 1 (02) 0 (0100000000000) 325 24 (00) 0 (0010000000000) 2600 276 (02) 0 (0000000000001) 4096 512 (11) 0 (1100000000000) 5824 672 (02) 0 (0001000000000) 14950 2024 (00) 0 (1010000000000) 52325 7728 (00) 0 (0000100000000) 65780 10626 (02) 0 (1000000000010) 102400 16896 (11) 0 (0000010000000) 230230 42504 (00) 0 (1001000000000) 320320 56672 (02) 0 (0110000000000) 450450 83853 (02) 0 (0000001000000) 657800 134596 (02) 0</trash>


				</figure>

				<p>A.1.3. Sp(N )</p>

				<figure>
					<trash>Table A.24: Sp(4) Irreps Dynkin Dimension l Congruency label (name) (index) class (10) 4 1 1 (01) 5 2 0 (20) 10 6 0 (02) 14 14 0 (11) 16 12 1 (30) 20 21 1 (03) 30 54 0 (21) 35 42 0 (40) 35 56 0 (12) 40 58 1 (04) 55 154 0 (50) 56 126 1 (31) 64 112 1 (13) 80 188 1 (22) 81 162 0 (60) 84 252 0 (05) 91 364 0 (41) 105 252 0 (70) 120 462 1 (32) 140 371 1 (14) 140 483 1 (06) 140 756 0 (23) 154 462 0 (51) 160 504 1 (80) 165 792 0 (07) 204 1428 0 (42) 220 748 0 (90) 220 1287 1 (15) 224 1064 1 (61) 231 924 0 (33) 256 960 1 (24) 260 1092 0 (08) 285 2508 0 (10, 0) 286 2002 0 (71) 320 1584 1 (52) 324 1377 1 (16) 336 2100 1 (11, 0) 364 3003 1 (09) 385 4158 0 (43) 390 1794 0 (25) 405 2268 0 (34) 420 2121 1 (81) 429 2574 0 (62) 455 2366 0 (12, 0) 455 4368 0 (17) 480 3816 1 (0, 10) 506 6578 0 (53) 560 3108 1 Table A.24: Sp(4) Irreps (continued) Dynkin Dimension l Congruency label (name) (index) class (91) 560 4004 1 (13, 0) 560 6188 1 (26) 595 4284 0 (72) 616 3850 1 (44) 625 3750 0 (35) 640 4192 1 (0, 11) 650 10010 0 (18) 660 6501 1 (14, 0) 680 8568 0 (10, 1) 715 6006 0 (63) 770 5082 0 (82) 810 5994 0 (15, 0) 816 11628 1 (0, 12) 819 14742 0 (27) 836 7524 0 (54) 880 6204 1 (19) 880 10516 1 (11, 1) 896 8736 1 (36) 924 7623 1 (45) 935 7106 0 (16, 0) 969 15504 0 (0, 13) 1015 21112 0 (73) 1024 7936 1 (92) 1040 8996 1 (12, 1) 1105 12376 0 (28) 1134 12474 0 (17, 0) 1140 20349 1 (1, 10) 1144 16302 1 (64) 1190 9758 0 (0, 14) 1240 29512 0 (37) 1280 12992 1 (55) 1296 11340 1 (10, 2) 1309 13090 0 (83) 1326 11934 0 (46) 1330 12502 0 (18, 0) 1330 26334 0 (13, 1) 1344 17136 1 (1, 11) 1456 24388 1 (29) 1495 19734 0 (0, 15) 1496 40392 0 (19, 0) 1540 33649 1 (74) 1560 14742 1 (14, 1) 1615 23256 0 (11, 2) 1620 18549 1 (93) 1680 17388 1 (38) 1716 21021 1 (65) 1729 17290 0 (20, 0) 1771 42504 0 (0, 16) 1785 54264 0 Table A.25: Sp(6) Irreps Dynkin Dimension l Congruency label (name) (index) class (100) 6 1 1 (010) 14 4 0 (001) 14 5 1 (200) 21 8 0 (300) 56 36 1 (110) 64 32 1 (101) 70 40 0 (002) 84 72 0 (020) 90 60 0 (011) 126 93 1 (400) 126 120 0 (210) 189 144 0 (201) 216 180 1 (500) 252 330 1 (003) 330 495 1 (120) 350 325 1 (102) 378 423 1 (030) 385 440 0 (310) 448 480 1 (600) 462 792 0 (111) 512 512 0 (301) 525 600 0 (012) 594 792 0 (021) 616 748 1 (700) 792 1716 1 (220) 924 1144 0 (410) 924 1320 0 (004) 1001 2288 0 (202) 1078 1540 0 (401) 1100 1650 1 (040) 1274 2184 0 (800) 1287 3432 0 (130) 1344 1952 1 (211) 1386 1815 1 (103) 1386 2508 0 (510) 1728 3168 1 (013) 2002 4147 1 (900) 2002 6435 1 (320) 2016 3216 1 (501) 2079 3960 0 (031) 2184 3900 1 (121) 2205 3360 0 (112) 2240 3680 1 (022) 2457 4680 0 (302) 2464 4400 1 (005) 2548 8190 1 (610) 3003 6864 0 (10, 0, 0) 3003 11440 0 (311) 3072 5120 0 Table A.25: Sp(6) Irreps (continued) Dynkin Dimension l Congruency label (name) (index) class (230) 3276 5928 0 (050) 3528 8400 0 (601) 3640 8580 1 (203) 3744 8112 1 (420) 3900 7800 0 (104) 4004 10582 1 (140) 4116 8526 1 (11, 0, 0) 4368 19448 1 (402) 4914 10764 0 (710) 4928 13728 1 (221) 5460 10270 1 (014) 5460 16120 0 (006) 5712 24480 0 (212) 5720 11440 0 (411) 6006 12441 1 (701) 6006 17160 0 (12, 0, 0) 6188 31824 0 (041) 6300 15450 1 (330) 6720 14880 1 (520) 6930 16995 1 (131) 7168 15360 0 (113) 7168 17408 0 (023) 7392 20240 1 (032) 7700 19800 0 (810) 7722 25740 0 (303) 8190 21060 0 (122) 8316 18810 1 (060) 8568 26928 0 (13, 0, 0) 8568 50388 1 (502) 8918 23569 1 (240) 9450 23400 0 (801) 9450 32175 1 (105) 9828 35568 0 (204) 10395 31680 0 (511) 10752 27136 0 (150) 10752 29952 1 (321) 11319 25872 0 (620) 11550 34100 0 (007) 11628 63954 1 (14, 0, 0) 11628 77520 0 (910) 11648 45760 1 (312) 12096 29088 1 (430) 12375 33000 0 (015) 12852 51102 1 (901) 14300 57200 0 (602) 15092 47432 0 (15, 0, 0) 15504 116280 1 (051) 15708 50490 1 (403) 15750 47625 1 Table A.26: Sp(8) Irreps Dynkin Dimension l Congruency label (name) (index) class (1000) 8 1 1 (0100) 27 6 0 (2000) 36 10 0 (0001) 42 14 0 (0010) 48 14 1 (3000) 120 55 1 (1100) 160 60 1 (1001) 288 140 1 (0200) 308 154 0 (1010) 315 140 0 (4000) 330 220 0 (2100) 594 330 0 (0002) 594 462 0 (0110) 792 451 1 (0101) 792 484 0 (5000) 792 715 1 (0020) 825 550 0 (0011) 1056 748 1 (2001) 1155 770 0 (2010) 1232 770 1 (1200) 1512 1029 1 (6000) 1716 2002 0 (3100) 1728 1320 1 (0300) 2184 1820 0 (7000) 3432 5005 1 (3001) 3520 3080 1 (3010) 3696 3080 0 (1002) 3696 3542 1 (1110) 4096 3072 0 (1101) 4200 3325 1 (4100) 4290 4290 0 (0003) 4719 6292 0 (1020) 4752 4026 1 (2200) 4914 4368 0 (1011) 6237 5544 0 (8000) 6435 11440 0 (0210) 6552 5915 1 (0201) 7020 6630 0 (0030) 8008 9009 1 (4001) 9009 10010 0 (0102) 9009 10010 0 (4010) 9360 10010 1 (1300) 9408 9800 1 (5100) 9504 12012 1 (0120) 10010 10010 0 (0012) 10296 12727 1 (0400) 11340 13860 0 (9000) 11440 24310 1 (0021) 12012 14014 0 Table A.27: Sp(10) Irreps Dynkin Dimension l Congruency label (name) (index) class (10000) 10 1 1 (01000) 44 8 0 (20000) 55 12 0 (00100) 110 27 1 (00001) 132 42 1 (00010) 165 48 0 (30000) 220 78 1 (11000) 320 96 1 (40000) 715 364 0 (02000) 780 312 0 (10100) 891 324 0 (10001) 1155 504 0 (10010) 1408 576 1 (21000) 1430 624 0 (50000) 2002 1365 1 (01100) 2860 1326 1 (00200) 4004 2184 0 (20100) 4212 2106 1 (01001) 4290 2301 1 (12000) 4620 2478 1 (00002) 4719 3432 0 (31000) 4928 2912 1 (01010) 5005 2548 0 (60000) 5005 4368 0 (20001) 5720 3276 1 (20010) 6864 3744 0 (00020) 7865 5148 0 (03000) 8250 5400 0 (00101) 8580 5304 0 (00110) 9152 5408 1 (00011) 9438 6435 1 (70000) 11440 12376 1 (41000) 14300 10920 0 (30100) 15015 9828 0 (22000) 17820 12312 0 (11100) 17920 10752 0 (30001) 21021 15288 0 (80000) 24310 31824 0 (30010) 24960 17472 1 (10200) 28028 19110 1 (11001) 28160 18944 0 (11010) 32340 20874 1 (02100) 35640 25596 1 (51000) 36608 34944 1 (10002) 37752 32604 1 (13000) 42240 34176 1 (40100) 44550 36855 1 (90000) 48620 75582 1 Table A.28: Sp(12) Irreps Dynkin Dimension l Congruency label (name) (index) class (100000) 12 1 1 (010000) 65 10 0 (200000) 78 14 0 (001000) 208 44 1 (300000) 364 105 1 (000100) 429 110 0 (000001) 429 132 0 (110000) 560 140 1 (000010) 572 165 1 (400000) 1365 560 0 (020000) 1650 550 0 (101000) 2002 616 0 (210000) 2925 1050 0 (100100) 4368 1540 1 (500000) 4368 2380 1 (100001) 4576 1848 1 (100010) 6006 2310 0 (011000) 7800 3050 1 (201000) 11088 4620 1 (120000) 11440 5060 1 (310000) 11648 5600 1 (600000) 12376 8568 0 (002000) 13650 6300 0 (010100) 18954 8262 0 (010001) 21450 10450 0 (030000) 24310 13090 0 Table A.29: Sp(14) Irreps Dynkin Dimension l Congruency label (name) (index) class (1000000) 14 1 1 (0100000) 90 12 0 (2000000) 105 16 0 (0010000) 350 65 1 (3000000) 560 136 1 (1100000) 896 192 1 (0001000) 910 208 0 (0000001) 1430 429 1 (0000100) 1638 429 1 (0000010) 2002 572 0 (4000000) 2380 816 0 (0200000) 3094 884 0 (1010000) 3900 1040 0 (2100000) 5355 1632 0 (5000000) 8568 3876 1 A.1.4. Exceptional Algebras Table A.30: E 6 Irreps Dynkin Dimension l/6 SO(10) SU(6)×SU(2) SU(3)×SU(3)×SU(3) label (name) (index) Triality singlets singlets singlets (100000) 27 1 1 1 0 0 (000001) 78 4 0 1 * 0 0 (000100) 351 25 1 0 0 0 (000020) 351 28 1 1 0 0 (100010) 650 50 0 1 * 1 2 (100001) 1728 160 1 1 0 0 (000002) 2430 270 0 1 * 1 1 (001000) 2925 300 0 0 0 1 (300000) 3003 385 0 1 0 1 (110000) 5824 672 0 0 0 0 (010010) 7371 840 1 0 0 0 (200010) 7722 946 1 1 0 0 (000101) 17550 2300 1 0 0 0 (000021) 19305 2695 1 1 0 0 (400000) 19305 3520 1 1 0 0 (020000) 34398 5390 1 0 0 0 (100011) 34749 4752 0 1 * 0 2 (000003) 43758 7854 0 1 * 0 1 (100002) 46332 7260 1 1 0 0 (101000) 51975 7700 1 0 0 0 (210000) 54054 8932 1 0 0 0 (100030) 61425 10675 1 1 0 0 (010100) 70070 10780 0 0 1 3 (200100) 78975 12825 0 0 0 1 (200020) 85293 14580 0 1 * 1 3 (000050) 100386 24310 1 1 0 0 (001001) 105600 17600 0 0 0 0 (100110) 112320 18080 1 0 0 0 (300001) 146432 28160 0 1 0 0 (110001) 252252 45276 0 0 0 2 (010011) 314496 56000 1 0 0 0 (200011) 359424 67072 1 1 0 0 (000130) 359424 79360 1 0 0 0 (400010) 371800 85800 0 1 0 2 (001100) 386100 73700 1 0 0 0 (000102) 393822 78540 1 0 0 0 (000210) 412776 85848 1 0 0 0 (600000) 442442 136136 0 1 0 1 (000022) 459459 95557 1 1 0 0 (001020) 494208 98560 1 0 0 0 (000004) 537966 137940 0 1 * 1 1 (300100) 579150 125400 1 0 0 0 (100200) 600600 123200 0 0 0 1 (300020) 638820 143780 1 1 0 0 (100003) 741312 170016 1 1 0 0 (100012) 812175 166600 0 1 * 1 3 (101010) 852930 167670 0 0 0 3 Table A.31: E 7 Irreps Dynkin Dimension l/12 Congruency label (name) (index) class (0000010) 56 1 1 (1000000) 133 3 0 (0000001) 912 30 1 (0000020) 1463 55 0 (0000100) 1539 54 0 (1000010) 6480 270 1 (2000000) 7371 351 0 (0100000) 8645 390 0 (0000030) 24320 1440 1 (0001000) 27664 1430 1 (0000011) 40755 2145 0 (0000110) 51072 2832 1 (1000001) 86184 4995 1 (1000020) 150822 9450 0 (1000100) 152152 9152 0 (3000000) 238602 17940 0 (0000002) 253935 17820 0 (0000040) 293930 24310 0 (2000010) 320112 21762 1 (0100010) 362880 23760 1 (0010000) 365750 24750 0 (1100000) 573440 40960 0 (0000200) 617253 46410 0 (0000101) 861840 61830 1 (0000021) 885248 65728 1 (0000120) 915705 71145 0 (0001010) 980343 71253 0 (1000030) 2273920 194480 1 (1001000) 2282280 178035 1 Table A.32: E 8 Irreps Dynkin Dimension l/60 Congruency label (name) (index) class (00000010) 248 1 0 (10000000) 3875 25 0 (00000020) 27000 225 0 (00000100) 30380 245 0 (00000001) 147250 1425 0 (10000010) 779247 8379 0 (00000030) 1763125 22750 0 (00001000) 2450240 29640 0 (00000110) 4096000 51200 0 (20000000) 4881384 65610 0 (01000000) 6696000 88200 0 (00000011) 26411008 372736 0 (10000020) 70680000 1083000 0 (10000100) 76271625 1148175 0 Table A.33: F 4 Irreps Dynkin Dimension l/6 Congruency label (name) (index) class (0001) 26 1 0 (1000) 52 3 0 (0010) 273 21 0 (0002) 324 27 0 (1001) 1053 108 0 (2000) 1053 135 0 (0100) 1274 147 0 (0003) 2652 357 0 (0011) 4096 512 0 (1010) 8424 1242 0 (1002) 10829 1666 0 (3000) 12376 2618 0 (0004) 16302 3135 0 (2001) 17901 3213 0 (0101) 19278 3213 0 (0020) 19448 3366 0 (1100) 29172 5610 0 (0012) 34749 6237 0 (1003) 76076 16093 0 (0005) 81081 20790 0 (4000) 100776 31008 0 (1011) 106496 21504 0 (0110) 107406 23409 0 (2010) 119119 27489 0 (0102) 160056 35910 0 (2002) 160056 37962 0 (3001) 184756 49742 0 (0021) 205751 47481 0 (0013) 212992 51200 0 (0200) 226746 61047 0 (2100) 340119 95931 0 (0006) 342056 111826 0 (1101) 379848 94962 0 (1004) 412776 113778 0 (1020) 420147 107730 0 (5000) 627912 261630 0 (0030) 629356 181545 0 (1012) 787644 207009 0 (0103) 952952 274890 0 (2003) 1002456 302022 0 (0014) 1042899 320892 0 (3010) 1074944 351424 0 (0111) 1118208 311808 0 (0007) 1264120 510510 0 (2011) 1327104 387072 0 (0022) 1341522 395577 0 (4001) 1360476 505818 0 (3002) 1484406 494802 0 (1110) 1801371 554268 0 Table A.33: F 4 Irreps (continued) Dynkin Dimension l/6 Congruency label (name) (index) class (1005) 1850212 640458 0 (0201) 2488563 829521 0 (3100) 2674763 1028755 0 (1102) 2792556 877149 0 (6000) 3187041 1716099 0 (1200) 3195192 1167474 0 (0120) 3508596 1192023 0 (1021) 3921372 1256850 0 (2101) 3955952 1369368 0 (0008) 4188834 2040714 0 (1013) 4313088 1423872 0 (0015) 4313088 1645056 0 (0104) 4528953 1625778 0 (2020) 4582656 1615680 0 (2004) 4940676 1836918 0 (0031) 5218304 1856512 0 (0023) 6680856 2441082 0 (0112) 7113106 2462229 0 (4010) 7142499 3113397 0 (1006) 7147140 3023790 0 (5001) 7822737 3811077 0 (3003) 8498776 3432198 0 (2012) 8843094 3174444 0 (0210) 9683388 3848526 0 (4002) 10044008 4442542 0 (1030) 10482472 4031720 0 (3011) 10862592 4282368 0 (0040) 11955216 5057976 0 (0009) 12664184 7306260 0 (0300) 13530946 6245052 0 (7000) 13748020 9253475 0 (1103) 15031926 5781510 0 (0016) 15611882 7205484 0 (0202) 15997696 6460608 0 (4100) 16016924 8008462 0 (2110) 16665831 6837264 0 (1111) 16777216 6291456 0 (0105) 18206370 7936110 0 (1014) 19214624 7759752 0 (2005) 20407140 9157050 0 (1022) 23056488 9015678 0 (1007) 24488568 12401262 0 (2200) 26108082 12384603 0 (2102) 26476956 11032065 0 (0024) 27625000 12218750 0 (0032) 28068768 12055176 0 (0121) 28481544 11684736 0 (3101) 28481544 12962754 0 (1201) 31702671 13819113 0 Table A.34: G 2 Irreps Dynkin Dimension l/2 Congruency label (name) (index) class (10) 7 1 0 (01) 14 4 0 (20) 27 9 0 (11) 64 32 0 (30) 77 44 0 (02) 77 55 0 (40) 182 156 0 (21) 189 144 0 (03) 273 351 0 (12) 286 286 0 (50) 378 450 0 (31) 448 480 0 (60) 714 1122 0 (22) 729 972 0 (04) 748 1496 0 (13) 896 1472 0 (41) 924 1320 0 (70) 1254 2508 0 (32) 1547 2652 0 (51) 1728 3168 0 (05) 1729 4940 0 (23) 2079 4257 0 (80) 2079 5148 0 (14) 2261 5491 0 (42) 2926 6270 0 (61) 3003 6864 0 (90) 3289 9867 0 (06) 3542 13662 0 (33) 4096 10240 0 (24) 4914 14274 0 (71) 4928 13728 0 (15) 4928 16544 0 (10, 0) 5005 17875 0 (52) 5103 13365 0 (07) 6630 33150 0 (43) 7293 21879 0 (11, 0) 7371 30888 0 (81) 7722 25740 0 (62) 8372 26312 0 (34) 9177 31464 0 (16) 9660 42780 0 (25) 10206 39852 0 (12, 0) 10556 51272 0 (08) 11571 72732 0 (91) 11648 45760 0 (53) 12096 42912 0 (72) 13090 48620 0 (13, 0) 14756 82212 0 (44) 15625 62500 0 Table A.34: G 2 Irreps (continued) Dynkin Dimension l/2 Congruency label (name) (index) class (10, 1) 17017 77792 0 (17) 17472 98592 0 (35) 18304 82368 0 (63) 19019 78793 0 (09) 19096 147312 0 (26) 19278 97308 0 (82) 19683 85293 0 (14, 0) 20196 127908 0 (11, 1) 24192 127296 0 (54) 24948 115236 0 (15, 0) 27132 193800 0 (92) 28652 143260 0 (73) 28672 137216 0 (18) 29667 207669 0 (45) 30107 154836 0 (0, 10) 30107 279565 0 (36) 33495 191400 0 (12, 1) 33592 201552 0 (27) 33858 214434 0 (16, 0) 35853 286824 0 (64) 37961 200651 0 (10, 2) 40579 231880 0 (83) 41769 228735 0 (0, 11) 45695 502645 0 (13, 1) 45696 310080 0 (55) 46656 272160 0 (17, 0) 46683 415701 0 (19) 47872 406912 0 (46) 53599 344565 0 (74) 55614 333684 0 (11, 2) 56133 363528 0 (28) 56133 435699 0 (37) 57344 405504 0 (93) 59136 367488 0 (18, 0) 59983 591261 0 (14, 1) 61047 465120 0 (0, 12) 67158 863460 0 (65) 69160 454480 0 (1, 10) 74074 751322 0 (12, 2) 76076 554268 0 (19, 0) 76153 826804 0 (84) 79002 534204 0 (15, 1) 80256 682176 0 (56) 81081 583011 0 (10, 3) 81719 572033 0 (29) 88803 828828 0 (47) 89726 704990 0 (38) 93093 797940 0 (20, 0) 95634 1138500 0 A.2. Tensor Products A.2.1. SU(N ) Table A.35: SU(2) Tensor Products 2 × 2 = 1 + 3 3 × 2 = 2 + 4 3 × 3 = 1 + 3 + 5 4 × 2 = 3 + 5 4 × 3 = 2 + 4 + 6 4 × 4 = 1 + 3 + 5 + 7 5 × 2 = 4 + 6 5 × 3 = 3 + 5 + 7 5 × 4 = 2 + 4 + 6 + 8 5 × 5 = 1 + 3 + 5 + 7 + 9 6 × 2 = 5 + 7 6 × 3 = 4 + 6 + 8 6 × 4 = 3 + 5 + 7 + 9 6 × 5 = 2 + 4 + 6 + 8 + 10 6 × 6 = 1 + 3 + 5 + 7 + 9 + 11 7 × 2 = 6 + 8 7 × 3 = 5 + 7 + 9 7 × 4 = 4 + 6 + 8 + 10 7 × 5 = 3 + 5 + 7 + 9 + 11 7 × 6 = 2 + 4 + 6 + 8 + 10 + 12 7 × 7 = 1 + 3 + 5 + 7 + 9 + 11 + 13 8 × 2 = 7 + 9 8 × 3 = 6 + 8 + 10 8 × 4 = 5 + 7 + 9 + 11 8 × 5 = 4 + 6 + 8 + 10 + 12 8 × 6 = 3 + 5 + 7 + 9 + 11 + 13 8 × 7 = 2 + 4 + 6 + 8 + 10 + 12 + 14 8 × 8 = 1 + 3 + 5 + 7 + 9 + 11 + 13 + 15 9 × 2 = 8 + 10 9 × 3 = 7 + 9 + 11 9 × 4 = 6 + 8 + 10 + 12 9 × 5 = 5 + 7 + 9 + 11 + 13 9 × 6 = 4 + 6 + 8 + 10 + 12 + 14 9 × 7 = 3 + 5 + 7 + 9 + 11 + 13 + 15 9 × 8 = 2 + 4 + 6 + 8 + 10 + 12 + 14 + 16 9 × 9 = 1 + 3 + 5 + 7 + 9 + 11 + 13 + 15 + 17 10 × 2 = 9 + 11 10 × 3 = 8 + 10 + 12 10 × 4 = 7 + 9 + 11 + 13 10 × 5 = 6 + 8 + 10 + 12 + 14 10 × 6 = 5 + 7 + 9 + 11 + 13 + 15 10 × 7 = 4 + 6 + 8 + 10 + 12 + 14 + 16 10 × 8 = 3 + 5 + 7 + 9 + 11 + 13 + 15 + 17 10 × 9 = 2 + 4 + 6 + 8 + 10 + 12 + 14 + 16 + 18 10 × 10 = 1 + 3 + 5 + 7 + 9 + 11 + 13 + 15 + 17 + 19 Table A.36: SU(3) Tensor Products 3 × 3 = 1 + 8 3 × 3 = 3 + 6 6 × 3 = 3 + 15 6 × 3 = 8 + 10 6 × 6 = 6 + 15 + 15 6 × 6 = 1 + 8 + 27 8 × 3 = 3 + 6 + 15 8 × 6 = 3 + 6 + 15 + 24 8 × 8 = 1 + 2(8) + 10 + 10 + 27 10 × 3 = 6 + 24 10 × 3 = 15 + 15 10 × 6 = 15 + 21 + 24 10 × 6 = 3 + 15 + 42 10 × 8 = 8 + 10 + 27 + 35 10 × 10 = 1 + 8 + 27 + 64 10 × 10 = 10 + 27 + 28 + 35 15 × 3 = 10 + 35 15 × 3 = 8 + 10 + 27 15 × 3 = 6 + 15 + 24 15 × 3 = 21 + 24 15 × 6 = 27 + 28 + 35 15 × 6 = 8 + 10 + 10 + 27 + 35 15 × 6 = 3 + 6 + 15 + 24 + 42 15 × 6 = 6 + 24 + 60 15 × 8 = 3 + 6 + 2(15) + 15 + 24 + 42 15 × 8 = 15 + 15 + 42 + 48 15 × 10 = 3 + 15 + 42 + 90 15 × 10 = 3 + 6 + 15 + 24 + 42 + 60 15 × 10 = 6 + 15 + 15 + 24 + 42 + 48 15 × 10 = 24 + 36 + 42 + 48 15 × 15 = 8 + 10 + 27 + 35 + 64 + 81 15 × 15 = 1 + 8 + 27 + 64 + 125 15 × 15 = 1 + 2(8) + 10 + 10 + 2(27) + 35 + 35 + 64 15 × 15 = 3 + 6 + 2(15) + 15 + 21 + 2(24) + 42 + 60 15 × 15 = 15 + 21 + 24 + 42 + 60 + 63 15 × 15 = 15 + 42 + 45 + 60 + 63 21 × 3 = 15 + 48 21 × 3 = 28 + 35 21 × 6 = 36 + 42 + 48 21 × 6 = 10 + 35 + 81 21 × 8 = 21 + 24 + 60 + 63 21 × 10 = 6 + 24 + 60 + 120 21 × 10 = 42 + 45 + 60 + 63 21 × 15 = 15 + 15 + 42 + 48 + 90 + 105 21 × 15 = 3 + 15 + 42 + 90 + 165 21 × 15 = 27 + 28 + 35 + 64 + 80 + 81 Table A.36: SU(3) Tensor Products (continued) 21 × 15 = 35 + 55 + 64 + 80 + 81 21 × 21 = 21 + 60 + 66 + 90 + 99 + 105 21 × 21 = 1 + 8 + 27 + 64 + 125 + 216 24 × 3 = 15 + 15 + 42 24 × 3 = 10 + 27 + 35 24 × 6 = 15 + 15 + 24 + 42 + 48 24 × 6 = 8 + 10 + 27 + 35 + 64 24 × 8 = 6 + 15 + 21 + 2(24) + 42 + 60 24 × 10 = 3 + 6 + 15 + 24 + 42 + 60 + 90 24 × 10 = 15 + 15 + 21 + 24 + 42 + 60 + 63 24 × 15 = 3 + 6 + 2(15) + 15 + 24 + 2(42) + 48 + 60 + 90 24 × 15 = 3 + 6 + 15 + 24 + 42 + 60 + 90 + 120 24 × 15 = 8 + 10 + 10 + 2(27) + 28 + 2(35) + 35 + 64 + 81 24 × 15 = 10 + 27 + 28 + 35 + 35 + 64 + 80 + 81 24 × 21 = 24 + 36 + 42 + 48 + 60 + 90 + 99 + 105 24 × 21 = 8 + 10 + 27 + 35 + 64 + 81 + 125 + 154 24 × 24 = 6 + 15 + 15 + 21 + 2(24) + 36 + 2(42) + 2(48) + 60 + 90 + 105 24 × 24 = 1 + 2(8) + 10 + 10 + 2(27) + 35 + 35 + 2(64) + 81 + 81 + 125 27 × 3 = 15 + 24 + 42 27 × 6 = 6 + 15 + 15 + 24 + 42 + 60 27 × 8 = 8 + 10 + 10 + 2(27) + 35 + 35 + 64 27 × 10 = 8 + 10 + 10 + 27 + 35 + 35 + 64 + 81 27 × 15 = 3 + 6 + 2(15) + 15 + 21 + 2(24) + 2(42) + 48 + 60 + 90 27 × 15 = 6 + 15 + 15 + 24 + 42 + 48 + 60 + 90 + 105 27 × 21 = 15 + 21 + 24 + 42 + 60 + 63 + 90 + 120 + 132 27 × 24 = 3 + 6 + 2(15) + 15 + 21 + 2(24) + 2(42) + 48 + 2(60) + 63 + 90 + 120 27 × 27 = 1 + 2(8) + 10 + 10 + 3(27) + 28 + 28 + 2(35) + 2(35) + 2(64) + 81 + 81 + 125 28 × 3 = 21 + 63 28 × 3 = 36 + 48 28 × 6 = 45 + 60 + 63 28 × 6 = 15 + 48 + 105 28 × 8 = 28 + 35 + 80 + 81 28 × 10 = 10 + 35 + 81 + 154 28 × 10 = 55 + 64 + 80 + 81 28 × 15 = 21 + 24 + 60 + 63 + 120 + 132 28 × 15 = 6 + 24 + 60 + 120 + 210 28 × 15 = 36 + 42 + 48 + 90 + 99 + 105 28 × 15 = 60 + 66 + 90 + 99 + 105 28 × 21 = 48 + 78 + 90 + 120 + 120 + 132 28 × 21 = 3 + 15 + 42 + 90 + 165 + 273 28 × 24 = 42 + 45 + 60 + 63 + 90 + 120 + 120 + 132 28 × 24 = 15 + 15 + 42 + 48 + 90 + 105 + 165 + 192 28 × 27 = 27 + 28 + 35 + 64 + 80 + 81 + 125 + 154 + 162 28 × 28 = 1 + 8 + 27 + 64 + 125 + 216 + 343 28 × 28 = 28 + 81 + 91 + 125 + 143 + 154 + 162 Table A.37: SU(4) Tensor Products 4 × 4 = 1 + 15 4 × 4 = 6 + 10 6 × 4 = 4 + 20 6 × 6 = 1 + 15 + 20 10 × 4 = 4 + 36 10 × 4 = 20 + 20 10 × 6 = 15 + 45 10 × 10 = 1 + 15 + 84 10 × 10 = 20 + 35 + 45 15 × 4 = 4 + 20 + 36 15 × 6 = 6 + 10 + 10 + 64 15 × 10 = 6 + 10 + 64 + 70 15 × 15 = 1 + 2(15) + 20 + 45 + 45 + 84 20 × 4 = 10 + 70 20 × 4 = 6 + 10 + 64 20 × 4 = 20 + 60 20 × 4 = 15 + 20 + 45 20 × 4 = 35 + 45 20 × 6 = 36 + 84 20 × 6 = 4 + 20 + 36 + 60 20 × 6 = 6 + 50 + 64 20 × 10 = 4 + 36 + 160 20 × 10 = 4 + 20 + 36 + 140 20 × 10 = 10 + 64 + 126 20 × 10 = 20 + 36 + 60 + 84 20 × 10 = 56 + 60 + 84 20 × 15 = 20 + 20 + 120 + 140 20 × 15 = 4 + 2(20) + 20 + 36 + 60 + 140 20 × 15 = 15 + 20 + 45 + 45 + 175 20 × 20 = 50 + 84 + 126 + 140 20 × 20 = 64 + 70 + 126 + 140 20 × 20 = 36 + 140 + 224 20 × 20 = 6 + 10 + 10 + 50 + 2(64) + 70 + 126 20 × 20 = 4 + 20 + 36 + 60 + 140 + 140 20 × 20 = 1 + 15 + 20 + 84 + 105 + 175 20 × 20 = 1 + 2(15) + 20 + 45 + 45 + 84 + 175 20 × 20 = 1 + 15 + 84 + 300 20 × 20 = 15 + 45 + 84 + 256 35 × 4 = 20 + 120 35 × 4 = 56 + 84 35 × 6 = 70 + 140 35 × 10 = 10 + 70 + 270 35 × 10 = 84 + 126 + 140 35 × 15 = 35 + 45 + 189 + 256 35 × 20 = 120 + 140 + 216 + 224 35 × 20 = 120 + 140 + 216 + 224 35 × 20 = 4 + 36 + 160 + 500 Table A.37: SU(4) Tensor Products (continued) 35 × 20 = 36 + 84 + 160 + 420 35 × 20 = 84 + 256 + 360 35 × 35 = 1 + 15 + 84 + 300 + 825 35 × 35 = 105 + 165 + 280 + 315 + 360 36 × 4 = 15 + 45 + 84 36 × 4 = 10 + 64 + 70 36 × 6 = 20 + 20 + 36 + 140 36 × 10 = 4 + 20 + 36 + 140 + 160 36 × 10 = 20 + 20 + 60 + 120 + 140 36 × 15 = 4 + 20 + 2(36) + 60 + 84 + 140 + 160 36 × 20 = 20 + 35 + 45 + 175 + 189 + 256 36 × 20 = 15 + 20 + 35 + 45 + 2(45) + 84 + 175 + 256 36 × 20 = 6 + 10 + 64 + 70 + 270 + 300 36 × 20 = 6 + 10 + 10 + 2(64) + 70 + 70 + 126 + 300 36 × 20 = 20 + 20 + 36 + 60 + 84 + 140 + 360 36 × 35 = 20 + 20 + 120 + 140 + 420 + 540 36 × 35 = 56 + 60 + 84 + 280 + 360 + 420 36 × 36 = 1 + 2(15) + 20 + 45 + 45 + 2(84) + 175 + 256 + 256 + 300 36 × 36 = 6 + 10 + 50 + 2(64) + 2(70) + 126 + 126 + 140 + 270 + 300 45 × 4 = 20 + 20 + 140 45 × 4 = 36 + 60 + 84 45 × 6 = 10 + 64 + 70 + 126 45 × 10 = 6 + 10 + 64 + 70 + 300 45 × 10 = 50 + 64 + 70 + 126 + 140 45 × 15 = 15 + 20 + 35 + 2(45) + 84 + 175 + 256 45 × 20 = 60 + 120 + 140 + 140 + 216 + 224 45 × 20 = 20 + 20 + 36 + 60 + 120 + 2(140) + 140 + 224 45 × 20 = 4 + 20 + 36 + 140 + 160 + 540 45 × 20 = 4 + 20 + 2(36) + 60 + 84 + 140 + 160 + 360 45 × 20 = 15 + 45 + 45 + 84 + 175 + 256 + 280 45 × 35 = 15 + 45 + 84 + 256 + 300 + 875 45 × 35 = 175 + 189 + 256 + 280 + 315 + 360 45 × 36 = 4 + 2(20) + 20 + 36 + 60 + 120 + 2(140) + 160 + 360 + 540 45 × 36 = 20 + 36 + 56 + 2(60) + 2(84 ) + 140 + 140 + 160 + 360 + 420 45 × 45 = 1 + 2(15) + 20 + 45 + 45 + 2(84) + 175 + 256 + 256 + 300 + 729 45 × 45 = 20 + 35 + 45 + 45 + 84 + 105 + 2(175) + 189 + 2(256) + 280 + 360 50 × 4 = 60 + 140 50 × 6 = 20 + 105 + 175 50 × 10 = 45 + 175 + 280 50 × 15 = 50 + 64 + 126 + 126 + 384 50 × 20 = 20 + 140 + 360 + 480 50 × 20 = 20 + 60 + 140 + 140 + 280 + 360 50 × 20 = 6 + 50 + 64 + 196 + 300 + 384 50 × 35 = 70 + 300 + 630 + 750 50 × 36 = 36 + 60 + 84 + 140 + 140 + 224 + 360 + 756 50 × 45 = 10 + 64 + 70 + 126 + 126 + 300 + 384 + 540 + 630 50 × 50 = 1 + 15 + 20 + 84 + 105 + 175 + 300 + 336 + 729 + 735 Table A.38: SU(5) Tensor Products 5 × 5 = 1 + 24 5 × 5 = 10 + 15 10 × 5 = 5 + 45 10 × 5 = 10 + 40 10 × 10 = 1 + 24 + 75 10 × 10 = 5 + 45 + 50 15 × 5 = 5 + 70 15 × 5 = 35 + 40 15 × 10 = 24 + 126 15 × 10 = 45 + 105 15 × 15 = 1 + 24 + 200 15 × 15 = 50 + 70 + 105 24 × 5 = 5 + 45 + 70 24 × 10 = 10 + 15 + 40 + 175 24 × 15 = 10 + 15 + 160 + 175 24 × 24 = 1 + 2(24) + 75 + 126 + 126 + 200 35 × 5 = 15 + 160 35 × 5 = 70 + 105 35 × 10 = 70 + 280 35 × 10 = 126 + 224 35 × 15 = 5 + 70 + 450 35 × 15 = 126 + 175 + 224 35 × 24 = 35 + 40 + 315 + 450 35 × 35 = 175 + 210 + 420 + 420 35 × 35 = 1 + 24 + 200 + 1000 40 × 5 = 10 + 15 + 175 40 × 5 = 45 + 50 + 105 40 × 10 = 5 + 45 + 70 + 280 40 × 10 = 24 + 75 + 126 + 175 40 × 15 = 5 + 45 + 70 + 480 40 × 15 = 75 + 126 + 175 + 224 40 × 24 = 10 + 35 + 2(40) + 175 + 210 + 450 40 × 35 = 280 + 280 + 420 + 420 40 × 35 = 24 + 126 + 200 + 1050 40 × 40 = 45 + 50 + 70 + 175 + 2(280) + 280 + 420 40 × 40 = 1 + 2(24) + 75 + 126 + 126 + 200 + 1024 45 × 5 = 10 + 40 + 175 45 × 5 = 24 + 75 + 126 45 × 10 = 10 + 15 + 40 + 175 + 210 45 × 10 = 5 + 45 + 50 + 70 + 280 45 × 15 = 10 + 40 + 175 + 450 45 × 15 = 45 + 70 + 280 + 280 45 × 24 = 5 + 2(45) + 50 + 70 + 105 + 280 + 480 45 × 35 = 160 + 175 + 540 + 700 45 × 35 = 45 + 105 + 480 + 945 45 × 40 = 10 + 15 + 40 + 160 + 2(175) + 210 + 315 + 700 Table A.38: SU(5) Tensor Products (continued) 45 × 40 = 5 + 2(45) + 50 + 70 + 105 + 280 + 480 + 720 45 × 45 = 10 + 15 + 35 + 2(40) + 2(175) + 210 + 315 + 450 + 560 45 × 45 = 1 + 2(24) + 2(75) + 126 + 126 + 175 + 175 + 200 + 1024 50 × 5 = 40 + 210 50 × 5 = 75 + 175 50 × 10 = 10 + 175 + 315 50 × 10 = 45 + 175 + 280 50 × 15 = 15 + 175 + 560 50 × 15 = 50 + 280 + 420 50 × 24 = 45 + 50 + 105 + 280 + 720 50 × 35 = 210 + 700 + 840 50 × 35 = 70 + 480 + 1200 50 × 40 = 40 + 175 + 210 + 315 + 560 + 700 50 × 40 = 5 + 45 + 70 + 280 + 480 + 1120 50 × 45 = 10 + 40 + 175 + 210 + 315 + 450 + 1050 50 × 45 = 24 + 75 + 126 + 126 + 175 + 700 + 1024 50 × 50 = 15 + 175 + 210 + 490 + 560 + 1050 50 × 50 = 1 + 24 + 75 + 200 + 1024 + 1176 70 × 5 = 24 + 126 + 200 70 × 5 = 15 + 160 + 175 70 × 10 = 45 + 70 + 105 + 480 70 × 10 = 35 + 40 + 175 + 450 70 × 15 = 5 + 45 + 70 + 450 + 480 70 × 15 = 35 + 40 + 210 + 315 + 450 70 × 24 = 5 + 45 + 2(70) + 280 + 280 + 450 + 480 70 × 35 = 50 + 70 + 105 + 560 + 720 + 945 70 × 35 = 10 + 15 + 160 + 175 + 875 + 1215 70 × 40 = 45 + 50 + 70 + 2(105) + 280 + 480 + 720 + 945 70 × 40 = 10 + 15 + 40 + 160 + 2(175) + 450 + 560 + 1215 70 × 45 = 24 + 75 + 126 + 2(126) + 175 + 200 + 224 + 1024 + 1050 70 × 45 = 10 + 15 + 40 + 160 + 2(175) + 210 + 450 + 700 + 1215 70 × 50 = 75 + 126 + 175 + 175 + 224 + 1024 + 1701 70 × 50 = 35 + 40 + 175 + 210 + 450 + 700 + 1890 70 × 70 = 1 + 2(24) + 75 + 126 + 126 + 2(200) + 1000 + 1024 + 1050 + 1050 70 × 70 = 10 + 15 + 2(160) + 2(175) + 315 + 540 + 560 + 700 + 875 + 1215 75 × 5 = 45 + 50 + 280 75 × 10 = 10 + 40 + 175 + 210 + 315 75 × 15 = 40 + 175 + 210 + 700 75 × 24 = 24 + 2(75) + 126 + 126 + 175 + 175 + 1024 75 × 35 = 175 + 450 + 560 + 1440 75 × 40 = 10 + 15 + 40 + 2(175) + 210 + 315 + 450 + 560 + 1050 75 × 45 = 5 + 2(45) + 50 + 70 + 105 + 175 + 2(280) + 480 + 720 + 1120 75 × 50 = 5 + 45 + 50 + 70 + 280 + 480 + 720 + 980 + 1120 75 × 70 = 45 + 50 + 70 + 105 + 2(280) + 280 + 420 + 480 + 720 + 2520 75 × 75 = 1 + 2(24) + 2(75) + 126 + 126 + 175 + 175 + 200 + 700 + 700 + 2(1024) + 1176 Table A.39: SU(6) Tensor Products 6 × 6 = 1 + 35 6 × 6 = 15 + 21 15 × 6 = 6 + 84 15 × 6 = 20 + 70 15 × 15 = 1 + 35 + 189 15 × 15 = 15 + 105 + 105 20 × 6 = 15 + 105 20 × 15 = 6 + 84 + 210 20 × 20 = 1 + 35 + 175 + 189 21 × 6 = 6 + 120 21 × 6 = 56 + 70 21 × 15 = 35 + 280 21 × 15 = 105 + 210 21 × 20 = 84 + 336 21 × 21 = 1 + 35 + 405 21 × 21 = 105 + 126 + 210 35 × 6 = 6 + 84 + 120 35 × 15 = 15 + 21 + 105 + 384 35 × 20 = 20 + 70 + 70 + 540 35 × 21 = 15 + 21 + 315 + 384 35 × 35 = 1 + 2(35) + 189 + 280 + 280 + 405 56 × 6 = 21 + 315 56 × 6 = 126 + 210 56 × 15 = 120 + 720 56 × 15 = 336 + 504 56 × 20 = 280 + 840 56 × 21 = 6 + 120 + 1050 56 × 21 = 252 + 420 + 504 56 × 35 = 56 + 70 + 700 + 1134 56 × 56 = 1 + 35 + 405 + 2695 56 × 56 = 462 + 490 + 1050 + 1134 70 × 6 = 15 + 21 + 384 70 × 6 = 105 + 105 + 210 70 × 15 = 6 + 84 + 120 + 840 70 × 15 = 84 + 210 + 336 + 420 70 × 20 = 35 + 189 + 280 + 896 70 × 21 = 6 + 84 + 120 + 1260 70 × 21 = 210 + 336 + 420 + 504 70 × 35 = 20 + 56 + 2(70) + 540 + 560 + 1134 70 × 56 = 35 + 280 + 405 + 3200 70 × 56 = 840 + 896 + 1050 + 1134 70 × 70 = 1 + 2(35) + 189 + 280 + 280 + 405 + 3675 70 × 70 = 175 + 189 + 280 + 490 + 840 + 2(896) + 1134 84 × 6 = 15 + 105 + 384 84 × 6 = 35 + 189 + 280 84 × 15 = 20 + 70 + 70 + 540 + 560 Table A.39: SU(6) Tensor Products (continued) 84 × 15 = 6 + 84 + 120 + 210 + 840 84 × 20 = 15 + 21 + 105 + 105 + 384 + 1050 84 × 21 = 20 + 70 + 540 + 1134 84 × 21 = 84 + 120 + 720 + 840 84 × 35 = 6 + 2(84) + 120 + 210 + 336 + 840 + 1260 84 × 56 = 105 + 210 + 1701 + 2688 84 × 56 = 315 + 384 + 1575 + 2430 84 × 70 = 15 + 2(105) + 105 + 210 + 384 + 1050 + 1701 + 2205 84 × 70 = 15 + 21 + 105 + 315 + 2(384) + 1050 + 1176 + 2430 84 × 84 = 15 + 21 + 2(105) + 105 + 210 + 2(384) + 1050 + 1176 + 1701 + 1800 84 × 84 = 1 + 2(35) + 175 + 2(189) + 280 + 280 + 405 + 896 + 896 + 3675 105 × 6 = 70 + 560 105 × 6 = 20 + 70 + 540 105 × 6 = 210 + 420 105 × 6 = 84 + 210 + 336 105 × 15 = 15 + 384 + 1176 105 × 15 = 15 + 21 + 105 + 384 + 1050 105 × 15 = 189 + 490 + 896 105 × 15 = 35 + 175 + 189 + 280 + 896 105 × 20 = 84 + 840 + 1176 105 × 20 = 6 + 84 + 120 + 210 + 840 + 840 105 × 21 = 21 + 384 + 1800 105 × 21 = 15 + 105 + 384 + 1701 105 × 21 = 175 + 896 + 1134 105 × 21 = 189 + 280 + 840 + 896 105 × 35 = 105 + 105 + 210 + 1050 + 2205 105 × 35 = 15 + 2(105) + 105 + 210 + 384 + 1050 + 1701 105 × 56 = 120 + 1260 + 4500 105 × 56 = 84 + 336 + 1260 + 4200 105 × 56 = 840 + 2520 + 2520 105 × 56 = 720 + 840 + 1800 + 2520 105 × 70 = 6 + 84 + 120 + 840 + 1260 + 5040 105 × 70 = 6 + 2(84) + 120 + 210 + 336 + 840 + 1260 + 4410 105 × 70 = 210 + 840 + 840 + 1176 + 1764 + 2520 105 × 70 = 84 + 120 + 210 + 720 + 2(840) + 840 + 1176 + 2520 105 × 84 = 20 + 70 + 540 + 560 + 1134 + 1960 + 4536 105 × 84 = 20 + 56 + 70 + 2(70) + 2(540) + 560 + 560 + 1134 + 1960 + 3240 105 × 84 = 84 + 210 + 336 + 420 + 840 + 2520 + 4410 105 × 84 = 6 + 2(84) + 120 + 2(210) + 336 + 420 + 840 + 840 + 1260 + 4410 105 × 105 = 105 + 1050 + 1176 + 1764 + 2520 + 4410 105 × 105 = 105 + 384 + 1050 + 1176 + 1470 + 2430 + 4410 105 × 105 = 15 + 21 + 105 + 105 + 315 + 2(384) + 2(1050) + 1176 + 1470 + 2430 + 2520 105 × 105 = 35 + 189 + 280 + 280 + 896 + 3675 + 5670 105 × 105 = 1 + 2(35) + 175 + 2(189) + 280 + 280 + 405 + 896 + 896 + 3675 + 3969 Table A.40: SU(7) Tensor Products 7 × 7 = 1 + 48 7 × 7 = 21 + 28 21 × 7 = 7 + 140 21 × 7 = 35 + 112 21 × 21 = 1 + 48 + 392 21 × 21 = 35 + 196 + 210 28 × 7 = 7 + 189 28 × 7 = 84 + 112 28 × 21 = 48 + 540 28 × 21 = 210 + 378 28 × 28 = 1 + 48 + 735 28 × 28 = 196 + 210 + 378 35 × 7 = 21 + 224 35 × 7 = 35 + 210 35 × 21 = 7 + 140 + 588 35 × 21 = 21 + 224 + 490 35 × 28 = 140 + 840 35 × 28 = 224 + 756 35 × 35 = 1 + 48 + 392 + 784 35 × 35 = 7 + 140 + 490 + 588 48 × 7 = 7 + 140 + 189 48 × 21 = 21 + 28 + 224 + 735 48 × 28 = 21 + 28 + 560 + 735 48 × 35 = 35 + 112 + 210 + 1323 48 × 48 = 1 + 2(48) + 392 + 540 + 540 + 735 84 × 7 = 28 + 560 84 × 7 = 210 + 378 84 × 21 = 189 + 1575 84 × 21 = 756 + 1008 84 × 28 = 7 + 189 + 2156 84 × 28 = 462 + 882 + 1008 84 × 35 = 540 + 2400 84 × 35 = 840 + 2100 84 × 48 = 84 + 112 + 1386 + 2450 84 × 84 = 924 + 1176 + 2310 + 2646 112 × 7 = 21 + 28 + 735 112 × 7 = 196 + 210 + 378 112 × 21 = 7 + 140 + 189 + 2016 112 × 21 = 224 + 490 + 756 + 882 112 × 28 = 7 + 140 + 189 + 2800 112 × 28 = 490 + 756 + 882 + 1008 112 × 35 = 48 + 392 + 540 + 2940 112 × 35 = 140 + 588 + 840 + 2352 112 × 48 = 35 + 84 + 2(112) + 1260 + 1323 + 2450 112 × 84 = 2100 + 2310 + 2352 + 2646 112 × 112 = 490 + 588 + 840 + 1176 + 2100 + 2(2352) + 2646 Table A.41: SU(8) Tensor Products 8 × 8 = 1 + 63 8 × 8 = 28 + 36 28 × 8 = 8 + 216 28 × 8 = 56 + 168 28 × 28 = 1 + 63 + 720 28 × 28 = 70 + 336 + 378 36 × 8 = 8 + 280 36 × 8 = 120 + 168 36 × 28 = 63 + 945 36 × 28 = 378 + 630 36 × 36 = 1 + 63 + 1232 36 × 36 = 330 + 336 + 630 56 × 8 = 28 + 420 56 × 8 = 70 + 378 56 × 28 = 8 + 216 + 1344 56 × 28 = 56 + 504 + 1008 56 × 36 = 216 + 1800 56 × 36 = 504 + 1512 56 × 56 = 1 + 63 + 720 + 2352 56 × 56 = 28 + 420 + 1176 + 1512 63 × 8 = 8 + 216 + 280 63 × 28 = 28 + 36 + 420 + 1280 63 × 36 = 28 + 36 + 924 + 1280 63 × 56 = 56 + 168 + 504 + 2800 63 × 63 = 1 + 2(63) + 720 + 945 + 945 + 1232 70 × 8 = 56 + 504 70 × 28 = 28 + 420 + 1512 70 × 36 = 420 + 2100 70 × 56 = 8 + 216 + 1344 + 2352 70 × 63 = 70 + 378 + 378 + 3584 70 × 70 = 1 + 63 + 720 + 1764 + 2352 120 × 8 = 36 + 924 120 × 8 = 330 + 630 120 × 28 = 280 + 3080 120 × 28 = 1512 + 1848 120 × 36 = 8 + 280 + 4032 120 × 36 = 792 + 1680 + 1848 120 × 56 = 2100 + 4620 120 × 63 = 120 + 168 + 2520 + 4752 168 × 8 = 28 + 36 + 1280 168 × 8 = 336 + 378 + 630 168 × 28 = 8 + 216 + 280 + 4200 168 × 28 = 504 + 1008 + 1512 + 1680 168 × 36 = 1008 + 1512 + 1680 + 1848 168 × 56 = 420 + 1512 + 2100 + 5376 168 × 63 = 56 + 120 + 2(168) + 2520 + 2800 + 4752 Table A.42: SU(9) Tensor Products 9 × 9 = 1 + 80 9 × 9 = 36 + 45 36 × 9 = 9 + 315 36 × 9 = 84 + 240 36 × 36 = 1 + 80 + 1215 36 × 36 = 126 + 540 + 630 45 × 9 = 9 + 396 45 × 9 = 165 + 240 45 × 36 = 80 + 1540 45 × 36 = 630 + 990 45 × 45 = 1 + 80 + 1944 45 × 45 = 495 + 540 + 990 80 × 9 = 9 + 315 + 396 80 × 80 = 1 + 2(80) + 1215 + 1540 + 1540 + 1944 84 × 9 = 36 + 720 84 × 9 = 126 + 630 84 × 36 = 126 + 1008 + 1890 126 × 9 = 84 + 1050 126 × 9 = 126 + 1008 165 × 9 = 45 + 1440 165 × 9 = 495 + 990 240 × 9 = 540 + 630 + 990 Table A.43: SU(10) Tensor Products 10 × 10 = 1 + 99 10 × 10 = 45 + 55 45 × 10 = 10 + 440 45 × 10 = 120 + 330 45 × 45 = 1 + 99 + 1925 45 × 45 = 210 + 825 + 990 55 × 10 = 10 + 540 55 × 10 = 220 + 330 55 × 45 = 990 + 1485 55 × 55 = 715 + 825 + 1485 99 × 10 = 10 + 440 + 540 120 × 10 = 45 + 1155 120 × 10 = 210 + 990 210 × 10 = 120 + 1980 210 × 10 = 252 + 1848 A.2.2. SO(N ) Table A.46: SO(7) Tensor Products 7 × 7 = 1 + 21 + 27 8 × 7 = 8 + 48 8 × 8 = 1 + 7 + 21 + 35 21 × 7 = 7 + 35 + 105 21 × 8 = 8 + 48 + 112 21 × 21 = 1 + 21 + 27 + 35 + 168 + 189 27 × 7 = 7 + 77 + 105 27 × 8 = 48 + 168 27 × 21 = 21 + 27 + 189 + 330 27 × 27 = 1 + 21 + 27 + 168 + 182 + 330 35 × 7 = 21 + 35 + 189 35 × 8 = 8 + 48 + 112 + 112 35 × 21 = 7 + 21 + 35 + 105 + 189 + 378 35 × 27 = 35 + 105 + 189 + 616 35 × 35 = 1 + 7 + 21 + 27 + 35 + 105 + 168 + 189 + 294 + 378 48 × 7 = 8 + 48 + 112 + 168 48 × 8 = 7 + 21 + 27 + 35 + 105 + 189 48 × 21 = 8 + 2(48) + 112 + 112 + 168 + 512 48 × 27 = 8 + 48 + 112 + 168 + 448 + 512 48 × 35 = 8 + 2(48) + 2(112) + 112 + 168 + 512 + 560 48 × 48 = 1 + 7 + 2(21) + 27 + 2(35) + 77 + 2(105) + 168 + 2(189) + 330 + 378 + 616 77 × 7 = 27 + 182 + 330 77 × 8 = 168 + 448 77 × 21 = 77 + 105 + 616 + 819 77 × 27 = 7 + 77 + 105 + 378 + 693 + 819 77 × 35 = 189 + 330 + 616 + 1560 77 × 48 = 48 + 168 + 448 + 512 + 1008 + 1512 77 × 77 = 1 + 21 + 27 + 168 + 182 + 330 + 714 + 825 + 1750 + 1911 105 × 7 = 21 + 27 + 168 + 189 + 330 105 × 8 = 48 + 112 + 168 + 512 105 × 21 = 7 + 35 + 77 + 2(105) + 189 + 378 + 616 + 693 105 × 27 = 7 + 35 + 77 + 2(105) + 378 + 616 + 693 + 819 105 × 35 = 21 + 27 + 35 + 105 + 168 + 2(189) + 330 + 378 + 616 + 1617 105 × 48 = 8 + 2(48) + 2(112) + 112 + 2(168) + 448 + 2(512) + 560 + 720 + 1512 105 × 77 = 21 + 27 + 168 + 182 + 189 + 2(330) + 1560 + 1617 + 1750 + 1911 105 × 105 = 1 + 2(21) + 2(27) + 35 + 2(168 ) + 182 + 3(189) + 294 + 3(330) + 378 + 616 + 825 + 1560 + 2(1617) + 1911 112 × 7 = 112 + 112 + 560 112 × 7 = 48 + 112 + 112 + 512 112 × 8 = 35 + 189 + 294 + 378 112 × 8 = 21 + 35 + 105 + 168 + 189 + 378 112 × 21 = 48 + 112 + 112 + 512 + 560 + 1008 112 × 21 = 8 + 48 + 2(112) + 112 + 168 + 512 + 560 + 720 112 × 27 = 112 + 112 + 512 + 560 + 1728 112 × 27 = 48 + 112 + 112 + 168 + 512 + 560 + 1512 Table A.46: SO(7) Tensor Products (continued) 112 × 35 = 8 + 48 + 112 + 112 + 168 + 512 + 560 + 672 + 720 + 1008 112 × 35 = 8 + 2(48) + 2(112) + 112 + 168 + 2(512) + 560 + 720 + 1008 112 × 48 = 21 + 35 + 105 + 168 + 2(189) + 294 + 2(378) + 616 + 1386 + 1617 112 × 48 = 7 +21 +27 +2(35)+2(105)+168 +3(189)+294 +330 +2(378)+616 +693 +1617 112 × 77 = 112 + 512 + 560 + 1512 + 1728 + 4200 112 × 77 = 112 + 168 + 448 + 512 + 560 + 1512 + 1728 + 3584 112 × 105 = 48 + 2(112) + 112 + 168 + 2(512) + 2(560) + 720 + 1008 + 1512 + 1728 + 4096 112 × 105 = 8 + 2(48) + 2(112) + 2(112 ) + 2(168) + 448 + 3(512) + 2(560) + 720 + 1008 + 1512 + 1728 + 2800 112 × 112 = 1 + 7 + 21 + 27 + 35 + 77 + 105 + 168 + 189 + 294 + 330 + 378 + 616 + 693 + 825 + 1386 + 1386 + 1617 + 2079 + 2310 112 × 112 = 7 + 21 + 27 + 35 + 2(105) + 168 + 2(189) + 294 + 330 + 2(378) + 616 + 693 + 1386 + 2(1617) + 2079 + 2310 112 × 112 = 1 + 7 + 2(21) + 27 + 2(35) + 77 + 2(105) + 2(168 ) + 3(189) + 294 + 330 + 3(378) + 2(616) + 693 + 825 + 1386 + 2(1617) + 2079 168 × 7 = 105 + 378 + 693 168 × 7 = 48 + 168 + 448 + 512 168 × 8 = 112 + 512 + 720 168 × 8 = 27 + 77 + 105 + 189 + 330 + 616 168 × 21 = 21 + 168 + 189 + 330 + 378 + 825 + 1617 168 × 21 = 48 + 112 + 2(168) + 448 + 512 + 560 + 1512 168 × 27 = 27 + 168 + 189 + 294 + 330 + 1617 + 1911 168 × 27 = 8 + 48 + 112 + 168 + 448 + 512 + 720 + 1008 + 1512 168 × 35 = 35 + 105 + 168 + 189 + 378 + 616 + 693 + 1617 + 2079 168 × 35 = 48 + 112 + 112 + 2(168) + 448 + 2(512) + 560 + 1512 + 1728 168 × 48 = 48 + 112 + 112 + 168 + 2(512) + 560 + 720 + 1008 + 1512 + 2800 168 × 48 = 7 + 21 + 27 + 35 + 77 + 2(105) + 168 + 182 + 2(189) + 2(330) + 378 + 2(616) + 693 + 819 + 1560 + 1617 168 × 77 = 77 + 105 + 378 + 616 + 693 + 819 + 1386 + 4312 + 4550 168 × 77 = 8 + 48 + 112 + 168 + 448 + 512 + 720 + 1008 + 1512 + 2016 + 2800 + 3584 168 × 105 = 7 + 35 + 77 + 2(105) + 189 + 294 + 2(378) + 2(616) + 2(693) + 819 + 1386 + 1617 + 2079 + 3003 + 4550 168 × 105 = 8 + 2(48) + 2(112) + 112 + 2(168) + 2(448) + 3(512) + 560 + 720 + 1008 + 1008 + 2(1512) + 1728 + 2800 + 3584 168 × 112 = 48+112+112 +168+2(512)+560+720+1008+1512+1728+2800+4096+4928 168 × 112 = 8 + 48 + 2(112) + 112 + 168 + 448 + 2(512) + 2(560) + 2(720) + 1008 + 1512 + 1728 + 2800 + 3080 + 4096 168 × 112 = 35 + 105 + 168 + 2(189) + 294 + 330 + 2(378) + 2(616) + 693 + 1386 + 1560 + 2(1617) + 4095 + 4550 168 × 112 = 21 + 27 + 35 + 77 + 2(105) + 168 + 3(189) + 294 + 2(330) + 2(378) + 3(616) + 693 + 819 + 1386 + 1560 + 2(1617) + 1911 + 4550 168 × 168 = 1 + 7 + 2(21) + 27 + 2(35) + 77 + 2(105) + 2(168 ) + 182 + 2(189) + 2(330) + 2(378) + 378 + 2(616) + 2(693) + 2(819) + 825 + 2(1560) + 2(1617) + 1750 + 1911 + 2079 + 3375 + 4550 Table A.47: SO(8) Tensor Products 8 s × 8 s = 1 + 28 + 35 s 8 c × 8 s = 8 v + 56 v 8 c × 8 v = 8 s + 56 s 8 v × 8 s = 8 c + 56 c 8 v × 8 v = 1 + 28 + 35 v 28 × 8 s = 8 s + 56 s + 160 s 28 × 8 v = 8 v + 56 v + 160 v 28 × 28 = 1 + 28 + 35 v + 35 c + 35 s + 300 + 350 35 s × 8 s = 8 s + 112 s + 160 s 35 s × 8 v = 56 v + 224 sv 35 c × 8 s = 56 s + 224 cs 35 c × 8 v = 56 v + 224 cv 35 v × 8 s = 56 s + 224 vs 35 v × 8 c = 56 c + 224 vc 35 v × 8 v = 8 v + 112 v + 160 v 35 c × 28 = 28 + 35 c + 350 + 567 c 35 v × 28 = 28 + 35 v + 350 + 567 v 35 s × 35 c = 35 v + 350 + 840 v 35 s × 35 v = 35 c + 350 + 840 c 35 c × 35 c = 1 + 28 + 35 c + 294 c + 300 + 567 c 35 c × 35 v = 35 s + 350 + 840 s 35 v × 35 v = 1 + 28 + 35 v + 294 v + 300 + 567 v 56 v × 8 s = 8 c + 56 c + 160 c + 224 sc 56 v × 8 v = 28 + 35 c + 35 s + 350 56 c × 8 s = 8 v + 56 v + 160 v + 224 sv 56 c × 8 v = 8 s + 56 s + 160 s + 224 vs 56 s × 8 s = 28 + 35 v + 35 c + 350 56 s × 8 c = 8 v + 56 v + 160 v + 224 cv 56 s × 8 v = 8 c + 56 c + 160 c + 224 vc 56 c × 28 = 8 c + 2(56 c ) + 160 c + 224 vc + 224 sc + 840 c 56 s × 28 = 8 s + 2(56 s ) + 160 s + 224 vs + 224 cs + 840 s 56 v × 35 c = 8 v + 56 v + 160 v + 224 cv + 672 cs + 840 v 56 v × 35 v = 56 v + 160 v + 224 cv + 224 sv + 1296 v 56 c × 35 c = 56 c + 160 c + 224 vc + 224 sc + 1296 c 56 c × 35 v = 8 c + 56 c + 160 c + 224 vc + 672 vs + 840 c 56 s × 35 s = 56 s + 160 s + 224 vs + 224 cs + 1296 s 56 s × 35 c = 8 s + 56 s + 160 s + 224 cs + 672 cv + 840 s 56 s × 35 v = 8 s + 56 s + 160 s + 224 vs + 672 vc + 840 s 56 v × 56 s = 8 c + 2(56 c ) + 112 c + 2(160 c ) + 224 vc + 224 sc + 840 c + 1296 c 56 c × 56 c = 1 + 2(28) + 35 v + 35 c + 35 s + 300 + 2(350) + 567 v + 567 s + 840 c 56 c × 56 s = 8 v + 2(56 v ) + 112 v + 2(160 v ) + 224 cv + 224 sv + 840 v + 1296 v 56 s × 56 s = 1 + 2(28) + 35 v + 35 c + 35 s + 300 + 2(350) + 567 v + 567 c + 840 s 112 s × 8 s = 35 s + 294 s + 567 s 112 s × 8 v = 224 sc + 672 sv 112 c × 8 s = 224 cv + 672 cs 112 c × 8 v = 224 cs + 672 cv 112 v × 8 s = 224 vc + 672 vs Table A.47: SO(8) Tensor Products (continued) 112 v × 8 c = 224 vs + 672 vc 112 v × 8 v = 35 v + 294 v + 567 v 112 s × 28 = 112 s + 160 s + 1296 s + 1568 s 112 v × 28 = 112 v + 160 v + 1296 v + 1568 v 112 s × 35 c = 224 vs + 1296 s + 2400 sc 112 s × 35 v = 224 cs + 1296 s + 2400 sv 112 c × 35 c = 8 c + 112 c + 160 c + 672 c + 1400 c + 1568 c 112 c × 35 v = 224 sc + 1296 c + 2400 cv 112 v × 35 s = 224 cv + 1296 v + 2400 vs 112 v × 35 c = 224 sv + 1296 v + 2400 vc 112 v × 35 v = 8 v + 112 v + 160 v + 672 v + 1400 v + 1568 v 112 s × 56 s = 350 + 567 s + 840 c + 840 v + 3675 s 112 c × 56 c = 350 + 567 c + 840 s + 840 v + 3675 c 112 c × 56 s = 56 v + 224 cv + 672 cs + 840 v + 1680 cv + 2800 cv 112 v × 56 v = 350 + 567 v + 840 s + 840 c + 3675 v 112 v × 56 c = 56 s + 224 vs + 672 vc + 840 s + 1680 vs + 2800 vs 112 v × 56 s = 56 c + 224 vc + 672 vs + 840 c + 1680 vc + 2800 vc 112 s × 112 s = 1 + 28 + 35 s + 294 s + 300 + 567 s + 1386 s + 1925 + 3696 s + 4312 s 112 v × 112 v = 1 + 28 + 35 v + 294 v + 300 + 567 v + 1386 v + 1925 + 3696 v + 4312 v 160 s × 8 s = 28 + 35 s + 300 + 350 + 567 s 160 s × 8 v = 56 c + 160 c + 224 sc + 840 c 160 c × 8 s = 56 v + 160 v + 224 cv + 840 v 160 c × 8 v = 56 s + 160 s + 224 cs + 840 s 160 v × 8 s = 56 c + 160 c + 224 vc + 840 c 160 v × 8 c = 56 s + 160 s + 224 vs + 840 s 160 v × 8 v = 28 + 35 v + 300 + 350 + 567 v 160 s × 28 = 8 s + 56 s + 112 s + 2(160 s ) + 224 vs + 224 cs + 840 s + 1296 s + 1400 s 160 v × 28 = 8 v + 56 v + 112 v + 2(160 v ) + 224 cv + 224 sv + 840 v + 1296 v + 1400 v 160 s × 35 c = 56 s + 160 s + 224 vs + 224 cs + 840 s + 1296 s + 2800 cs 160 s × 35 v = 56 s + 160 s + 224 vs + 224 cs + 840 s + 1296 s + 2800 vs 160 c × 35 c = 8 c + 56 c + 112 c + 2(160 c ) + 840 c + 1296 c + 1400 c + 1568 c 160 c × 35 v = 56 c + 160 c + 224 vc + 224 sc + 840 c + 1296 c + 2800 vc 160 v × 35 s = 56 v + 160 v + 224 cv + 224 sv + 840 v + 1296 v + 2800 sv 160 v × 35 c = 56 v + 160 v + 224 cv + 224 sv + 840 v + 1296 v + 2800 cv 160 v × 35 v = 8 v + 56 v + 112 v + 2(160 v ) + 840 v + 1296 v + 1400 v + 1568 v 160 s × 56 s = 28 + 35 v + 35 c + 35 s + 300 + 3(350) + 567 v + 567 c + 567 s + 840 c + 840 v + 4096 160 c × 56 c = 28 + 35 v + 35 c + 35 s + 300 + 3(350) + 567 v + 567 c + 567 s + 840 s + 840 v + 4096 160 c × 56 s = 8 v +2(56 v )+2(160 v )+2(224 cv )+224 sv +672 cs +2(840 v )+1296 v +1400 v +2800 cv 160 v × 56 v = 28 + 35 v + 35 c + 35 s + 300 + 3(350) + 567 v + 567 c + 567 s + 840 s + 840 c + 4096 160 v × 56 c = 8 s + 2(56 s ) + 2(160 s ) + 2(224 vs ) + 224 cs + 672 vc + 2(840 s ) + 1296 s + 1400 s + 2800 vs 160 v × 56 s = 8 c + 2(56 c ) + 2(160 c ) + 2(224 vc ) + 224 sc + 672 vs + 2(840 c ) + 1296 c + 1400 c + 2800 vc 160 s × 112 s = 28 + 35 s + 294 s + 300 + 350 + 2(567 s ) + 3675 s + 3696 s + 4096 + 4312 s 160 v × 112 v = 28 + 35 v + 294 v + 300 + 350 + 2(567 v ) + 3675 v + 3696 v + 4096 + 4312 v 160 s × 160 s = 1 + 2(28) + 35 v + 35 c + 2(35 s ) + 294 s + 2(300) + 3(350) + 567 v + 567 c + 3(567 s ) + 840 s + 840 c + 840 v + 1925 + 3675 s + 2(4096) + 4312 s 160 v × 160 v = 1 + 2(28) + 2(35 v ) + 35 c + 35 s + 294 v + 2(300) + 3(350) + 3(567 v ) + 567 c + 567 s + 840 s + 840 c + 840 v + 1925 + 3675 v + 2(4096) + 4312 v Table A.48: SO(9) Tensor Products 9 × 9 = 1 + 36 + 44 16 × 9 = 16 + 128 16 × 16 = 1 + 9 + 36 + 84 + 126 36 × 9 = 9 + 84 + 231 36 × 16 = 16 + 128 + 432 36 × 36 = 1 + 36 + 44 + 126 + 495 + 594 44 × 9 = 9 + 156 + 231 44 × 16 = 128 + 576 44 × 36 = 36 + 44 + 594 + 910 44 × 44 = 1 + 36 + 44 + 450 + 495 + 910 84 × 9 = 36 + 126 + 594 84 × 16 = 16 + 128 + 432 + 768 84 × 36 = 9 + 84 + 126 + 231 + 924 + 1650 84 × 44 = 84 + 231 + 924 + 2457 84 × 84 = 1 + 36 + 44 + 84 + 126 + 495 + 594 + 924 + 1980 + 2772 126 × 9 = 84 + 126 + 924 126 × 16 = 16 + 128 + 432 + 672 + 768 126 × 36 = 36 + 84 + 126 + 594 + 924 + 2772 126 × 44 = 126 + 594 + 924 + 3900 126 × 84 = 9 + 36 + 84 + 126 + 231 + 594 + 924 + 1650 + 2772 + 4158 126 × 126 = 1+9+36+44+84+126+231+495+594+924+1650+1980+2772+2772 +4158 128 × 9 = 16 + 128 + 432 + 576 128 × 16 = 9 + 36 + 44 + 84 + 126 + 231 + 594 + 924 128 × 36 = 16 + 2(128) + 432 + 576 + 768 + 2560 128 × 44 = 16 + 128 + 432 + 576 + 1920 + 2560 128 × 84 = 16 + 2(128) + 2(432) + 576 + 672 + 768 + 2560 + 5040 128 × 126 = 16 + 2(128) + 2(432) + 576 + 672 + 2(768) + 2560 + 4608 + 5040 128 × 128 = 1 + 9 + 2(36) + 44 + 2(84) + 2(126) + 156 + 2(231) + 495 + 2(594) + 910 + 2(924) + 1650 + 2457 + 2772 + 3900 156 × 9 = 44 + 450 + 910 156 × 16 = 576 + 1920 156 × 36 = 156 + 231 + 2457 + 2772 156 × 44 = 9 + 156 + 231 + 1122 + 2574 + 2772 156 × 84 = 594 + 910 + 3900 + 7700 156 × 126 = 924 + 2457 + 3900 + 12375 156 × 128 = 128 + 576 + 1920 + 2560 + 5280 + 9504 156 × 156 = 1 + 36 + 44 + 450 + 495 + 910 + 2508 + 4004 + 7140 + 8748 231 × 9 = 36 + 44 + 495 + 594 + 910 231 × 16 = 128 + 432 + 576 + 2560 231 × 36 = 9 + 84 + 156 + 2(231) + 924 + 1650 + 2457 + 2574 231 × 44 = 9 + 84 + 156 + 2(231) + 1650 + 2457 + 2574 + 2772 231 × 84 = 36 + 44 + 126 + 495 + 2(594) + 910 + 924 + 2772 + 3900 + 9009 231 × 126 = 84 + 126 + 231 + 594 + 2(924) + 1650 + 2457 + 2772 + 3900 + 15444 231 × 128 = 16 + 2(128) + 2(432) + 2(576) + 768 + 1920 + 2(2560) + 4928 + 5040 + 9504 231 × 156 = 36 + 44 + 450 + 495 + 594 + 2(910) + 7140 + 7700 + 8748 + 9009 231 × 231 = 1 + 2(36) + 2(44) + 126 + 450 + 2(495) + 3(594) + 3(910) + 1980 + 2772 + 3900 + 4004 + 7700 + 8748 + 2(9009) Table A.48: SO(9) Tensor Products (continued) 432 × 9 = 128 + 432 + 768 + 2560 432 × 16 = 36 + 84 + 126 + 231 + 495 + 594 + 924 + 1650 + 2772 432 × 36 = 16 + 128 + 2(432) + 576 + 672 + 768 + 2560 + 4928 + 5040 432 × 44 = 128 + 432 + 576 + 768 + 2560 + 5040 + 9504 432 × 84 = 16 + 2(128) + 2(432) + 576 + 672 + 2(768) + 2(2560) + 4608 + 4928 + 5040 + 12672 432 × 126 = 16 + 2(128) + 3(432) + 576 + 672 + 2(768) + 2(2560) + 4608 + 4928 + 2(5040) + 12672 + 12672 432 × 128 = 9 + 36 + 44 + 2(84) + 2(126) + 2(231) + 495 + 3(594) + 910 + 3(924) + 2(1650) + 1980 + 2457 + 2574 + 2(2772) + 3900 + 4158 + 9009 + 15444 432 × 156 = 432 + 576 + 1920 + 2560 + 5040 + 9504 + 19712 + 27648 432 × 231 = 16 + 2(128) + 2(432) + 2(576) + 672 + 2(768) + 1920 + 3(2560) + 4608 + 4928 + 2(5040) + 9504 + 12672 + 19712 + 24192 432 × 432 = 1 + 9 + 2(36) + 44 + 2(84) + 3(126) + 156 + 2(231) + 2(495) + 3(594) + 910 + 4(924) + 3(1650) + 1980 + 2(2457) + 2574 + 4(2772) + 2772 + 2(3900) + 4004 + 2(4158) + 2(9009) + 12012 + 2(15444) + 15444 + 25740 + 27456 450 × 9 = 156 + 1122 + 2772 450 × 16 = 1920 + 5280 450 × 36 = 450 + 910 + 7140 + 7700 450 × 44 = 44 + 450 + 910 + 2508 + 7140 + 8748 450 × 84 = 2457 + 2772 + 12375 + 20196 450 × 126 = 3900 + 7700 + 12375 + 32725 450 × 128 = 576 + 1920 + 5280 + 9504 + 12672 + 27648 450 × 156 = 9 + 156 + 231 + 1122 + 2574 + 2772 + 5148 + 16302 + 18018 + 23868 450 × 231 = 156 + 231 + 1122 + 2457 + 2574 + 2(2772 ) + 16302 + 20196 + 23868 + 31500 450 × 432 = 1920 + 2560 + 5280 + 9504 + 19712 + 27648 + 59136 + 68640 450 × 450 = 1 + 36 + 44 + 450 + 495 + 910 + 2508 + 4004 + 7140 + 8748 + 9867 + 22932 + 33957 + 54978 + 56430 495 × 9 = 231 + 1650 + 2574 495 × 16 = 432 + 2560 + 4928 495 × 36 = 36 + 495 + 594 + 910 + 2772 + 4004 + 9009 495 × 44 = 44 + 495 + 594 + 910 + 1980 + 8748 + 9009 495 × 84 = 84 + 231 + 924 + 1650 + 2457 + 2574 + 2772 + 15444 + 15444 495 × 126 = 126 + 495 + 594 + 924 + 1650 + 2772 + 3900 + 9009 + 15444 + 27456 495 × 128 = 128 + 432 + 576 + 768 + 2(2560) + 4928 + 5040 + 9504 + 12672 + 24192 495 × 156 = 156 + 231 + 1650 + 2457 + 2574 + 2772 + 12012 + 23868 + 31500 495 × 231 = 9 + 84 + 156 + 2(231) + 924 + 2(1650) + 2(2457) + 2(2574) + 2772 + 4158 + 12012 + 15444 + 15444 + 18018 + 31500 495 × 432 = 16 +128 + 2(432) +576 +672 +768 +1920 + 2(2560) +4608 + 2(4928) +2(5040) + 9504 + 12672 + 12672 + 19712 + 24192 + 34944 + 65536 495 × 450 = 450 + 495 + 910 + 7140 + 7700 + 8748 + 9009 + 44352 + 56430 + 87516 495 × 495 = 1 + 36 + 44 + 126 + 450 + 2(495) + 594 + 910 + 1980 + 2772 + 2772 + 3900 + 4004 + 7700 + 8748 + 2(9009) + 22932 + 25740 + 27456 + 44352 + 71500 Table A.49: SO(10) Tensor Products 10 × 10 = 1 + 45 + 54 16 × 10 = 16 + 144 16 × 16 = 10 + 120 + 126 16 × 16 = 1 + 45 + 210 45 × 10 = 10 + 120 + 320 45 × 16 = 16 + 144 + 560 45 × 45 = 1 + 45 + 54 + 210 + 770 + 945 54 × 10 = 10 + 210 + 320 54 × 16 = 144 + 720 54 × 45 = 45 + 54 + 945 + 1386 54 × 54 = 1 + 45 + 54 + 660 + 770 + 1386 120 × 10 = 45 + 210 + 945 120 × 16 = 16 + 144 + 560 + 1200 120 × 45 = 10 + 120 + 126 + 126 + 320 + 1728 + 2970 120 × 54 = 120 + 320 + 1728 + 4312 120 × 120 = 1 + 45 + 54 + 2(210) + 770 + 945 + 1050 + 1050 + 4125 + 5940 126 × 10 = 210 + 1050 126 × 16 = 144 + 672 + 1200 126 × 16 = 16 + 560 + 1440 126 × 45 = 120 + 126 + 1728 + 3696 126 × 54 = 126 + 1728 + 4950 126 × 120 = 45 + 210 + 945 + 1050 + 5940 + 6930 126 × 126 = 1 + 45 + 210 + 770 + 5940 + 8910 126 × 126 = 54 + 945 + 1050 + 2772 + 4125 + 6930 144 × 10 = 16 + 144 + 560 + 720 144 × 16 = 45 + 54 + 210 + 945 + 1050 144 × 16 = 10 + 120 + 126 + 320 + 1728 144 × 45 = 16 + 2(144) + 560 + 720 + 1200 + 3696 144 × 54 = 16 + 144 + 560 + 720 + 2640 + 3696 144 × 120 = 16 + 2(144) + 2(560) + 720 + 1200 + 1440 + 3696 + 8800 144 × 126 = 16 + 144 + 560 + 1200 + 1440 + 3696 + 11088 144 × 126 = 144 + 560 + 720 + 1200 + 1440 + 5280 + 8800 144 × 144 = 1 + 2(45) + 54 + 2(210) + 770 + 2(945) + 1050 + 1050 + 1386 + 5940 + 8085 144 × 144 = 10 + 2(120) + 126 + 126 + 210 + 2(320) + 2(1728) + 2970 + 3696 + 4312 + 4950 210 × 10 = 120 + 126 + 126 + 1728 210 × 10 = 54 + 660 + 1386 210 × 16 = 16 + 144 + 560 + 1200 + 1440 210 × 16 = 720 + 2640 210 × 45 = 45 + 2(210) + 945 + 1050 + 1050 + 5940 210 × 45 = 210 + 320 + 4312 + 4608 210 × 54 = 210 + 945 + 1050 + 1050 + 8085 210 × 54 = 10 + 210 + 320 + 1782 + 4410 + 4608 210 × 120 = 10 + 2(120) + 126 + 126 + 320 + 2(1728) + 2970 + 3696 + 3696 + 10560 210 × 120 = 945 + 1386 + 8085 + 14784 210 × 126 = 10 + 120 + 126 + 320 + 1728 + 2970 + 3696 + 6930 + 10560 210 × 126 = 1050 + 8085 + 17325 210 × 144 = 16 + 2(144) + 2(560) + 672 + 720 + 2(1200) + 1440 + 3696 + 8800 + 11088 210 × 144 = 144 + 720 + 2640 + 3696 + 7920 + 15120 Table A.49: SO(10) Tensor Products (continued) 210 × 210 = 1 + 2(45) + 54 + 2(210) + 770 + 2(945) + 1050 + 1050 + 4125 + 2(5940) + 6930 + 6930 + 8910 210 × 210 = 1728 + 4312 + 4950 + 4950 + 28160 210 × 210 = 1 + 45 + 54 + 660 + 770 + 1386 + 4290 + 7644 + 12870 + 16380 320 × 10 = 45 + 54 + 770 + 945 + 1386 320 × 16 = 144 + 560 + 720 + 3696 320 × 45 = 10 + 120 + 210 + 2(320) + 1728 + 2970 + 4312 + 4410 320 × 54 = 10 + 120 + 210 + 2(320) + 2970 + 4312 + 4410 + 4608 320 × 120 = 45 + 54 + 210 + 770 + 2(945) + 1050 + 1050 + 1386 + 5940 + 8085 + 17920 320 × 126 = 210 + 945 + 1050 + 1050 + 5940 + 8085 + 23040 320 × 144 = 16 + 2(144) + 2(560) + 2(720) + 1200 + 2640 + 2(3696) + 8064 + 8800 + 15120 320 × 210 = 120+126+126+320+3(1728)+2970+3696 +3696 +4312+4950+4950+36750 320 × 210 = 45 + 54 + 660 + 770 + 945 + 2(1386) + 12870 + 14784 + 16380 + 17920 320 × 320 = 1 + 2(45) + 2(54) + 210 + 660 + 2(770) + 3(945) + 3(1386) + 4125 + 5940 + 7644 + 8085 + 14784 + 16380 + 2(17920) 560 × 10 = 144 + 560 + 1200 + 3696 560 × 16 = 120 + 126 + 320 + 1728 + 2970 + 3696 560 × 16 = 45 + 210 + 770 + 945 + 1050 + 5940 560 × 45 = 16 + 144 + 2(560) + 720 + 1200 + 1440 + 3696 + 8064 + 8800 560 × 54 = 144 + 560 + 720 + 1200 + 3696 + 8800 + 15120 560 × 120 = 16 + 2(144) + 2(560) + 672 + 720 + 2(1200) + 1440 + 2(3696) + 8064 + 8800 + 11088 + 25200 560 × 126 = 16 + 144 + 2(560) + 1200 + 1440 + 3696 + 8064 + 8800 + 11088 + 34992 560 × 126 = 144 + 560 + 672 + 720 + 2(1200) + 3696 + 8800 + 11088 + 17280 + 25200 560 × 144 = 10 + 2(120) + 126 + 126 + 2(320) + 3(1728) + 2(2970) + 3696 + 3696 + 4312 + 4410 + 4950 + 10560 + 36750 560 × 144 = 45 + 54 + 2(210) + 770 + 3(945) + 2(1050) + 1050 + 1386 + 4125 + 2(5940) + 6930 + 8085 + 17920 + 23040 560 × 210 = 16 +2(144)+3(560)+720 +2(1200)+2(1440)+2(3696)+5280 +8064 +2(8800)+ 11088 + 25200 + 34992 560 × 210 = 560 + 720 + 2640 + 3696 + 8800 + 15120 + 38016 + 48048 560 × 320 = 16 +2(144)+2(560)+2(720)+2(1200)+1440 +2640 +3(3696)+8064 +2(8800)+ 11088 + 15120 + 25200 + 38016 + 43680 560 × 560 = 10 + 2(120) + 126 + 2(126) + 210 + 2(320) + 4(1728) + 3(2970) + 3696 + 3(3696 ) + 2(4312) + 4410 + 4950 + 4950 + 6930 + 2(10560) + 27720 + 34398 + 2(36750) + 46800 + 48114 560 × 560 = 1 + 2(45) + 54 + 3(210) + 2(770) + 3(945) + 2(1050) + 2(1050) + 1386 + 4125 + 4(5940) + 6930 + 6930 + 7644 + 2(8085) + 8910 + 2(17920) + 23040 + 23040 + 72765 + 73710 660 × 10 = 210 + 1782 + 4608 660 × 16 = 2640 + 7920 660 × 45 = 660 + 1386 + 12870 + 14784 660 × 54 = 54 + 660 + 1386 + 4290 + 12870 + 16380 660 × 120 = 4312 + 4608 + 28160 + 42120 660 × 126 = 4950 + 28160 + 50050 660 × 144 = 720 + 2640 + 7920 + 15120 + 20592 + 48048 660 × 210 = 10 + 210 + 320 + 1782 + 4410 + 4608 + 9438 + 31680 + 37632 + 48510 660 × 320 = 210 + 320 + 1782 + 4312 + 4410 + 2(4608) + 31680 + 42120 + 48510 + 68640 Table A.51: SO(12) Tensor Products 12 × 12 = 1 + 66 + 77 32 × 12 = 32 + 352 32 × 32 = 12 + 220 + 792 32 × 32 = 1 + 66 + 462 + 495 66 × 12 = 12 + 220 + 560 66 × 32 = 32 + 352 + 1728 66 × 66 = 1 + 66 + 77 + 495 + 1638 + 2079 77 × 12 = 12 + 352 + 560 77 × 32 = 352 + 2112 77 × 66 = 66 + 77 + 2079 + 2860 77 × 77 = 1 + 66 + 77 + 1287 + 1638 + 2860 220 × 12 = 66 + 495 + 2079 220 × 32 = 32 + 352 + 1728 + 4928 220 × 66 = 12 + 220 + 560 + 792 + 4928 + 8008 220 × 77 = 220 + 560 + 4928 + 11232 220 × 220 = 1 + 66 + 77 + 462 + 462 + 495 + 1638 + 2079 + 8085 + 14014 + 21021 352 × 12 = 32 + 352 + 1728 + 2112 352 × 12 = 77 + 1287 + 2860 352 × 32 = 66 + 77 + 462 + 495 + 2079 + 8085 352 × 32 = 12 + 220 + 560 + 792 + 4752 + 4928 352 × 32 = 2112 + 9152 352 × 66 = 32 + 2(352) + 1728 + 2112 + 4928 + 13728 352 × 66 = 352 + 560 + 11088 + 11232 352 × 77 = 32 + 352 + 1728 + 2112 + 9152 + 13728 352 × 77 = 12 + 352 + 560 + 4004 + 11088 + 11088 352 × 220 = 32 + 2(352) + 2(1728) + 2112 + 4928 + 8800 + 13728 + 43680 352 × 220 = 2079 + 2860 + 27456 + 45045 352 × 352 = 1 + 2(66) + 77 + 462 + 462 + 2(495) + 1638 + 2(2079) + 2860 + 2(8085) + 21021 + 21450 + 27027 + 27456 352 × 352 = 12 + 2(220) + 352 + 2(560) + 2(792) + 4752 + 4752 + 2(4928) + 8008 + 11232 + 36036 + 45760 462 × 12 = 792 + 4752 462 × 32 = 352 + 4928 + 9504 462 × 32 = 32 + 1728 + 4224 + 8800 462 × 66 = 462 + 495 + 8085 + 21450 462 × 77 = 462 + 8085 + 27027 495 × 12 = 220 + 792 + 4928 495 × 32 = 32 + 352 + 1728 + 4928 + 8800 495 × 66 = 66 + 462 + 462 + 495 + 2079 + 8085 + 21021 495 × 77 = 495 + 2079 + 8085 + 27456 495 × 220 = 12 + 220 + 560 + 2(792) + 4752 + 4752 + 4928 + 8008 + 36036 + 48048 560 × 12 = 66 + 77 + 1638 + 2079 + 2860 560 × 32 = 352 + 1728 + 2112 + 13728 560 × 66 = 12 + 220 + 352 + 2(560) + 4928 + 8008 + 11088 + 11232 560 × 77 = 12 + 220 + 352 + 2(560) + 8008 + 11088 + 11088 + 11232 Table A.54: SO(18) Tensor Products 18 × 18 = 1 + 153 + 170 153 × 18 = 18 + 816 + 1920 170 × 18 = 18 + 1122 + 1920 256 × 18 = 256 + 4352 Table A.55: SO(22) Tensor Products 22 × 22 = 1 + 231 + 252 231 × 22 = 22 + 1540 + 3520 252 × 22 = 22 + 2002 + 3520 Table A.56: SO(26) Tensor Products 26 × 26 = 1 + 325 + 350 325 × 26 = 26 + 2600 + 5824 325 × 325 = 1 + 325 + 350 + 14950 + 37674 + 52325 2600 × 26 = 325 + 14950 + 52325 2600 × 325 = 26 + 2600 + 5824 + 65780 + 320320 + 450450</trash>


				</figure>

				<p>A.2.3. Sp(N )</p>

				<figure>
					<trash>Table A.57: Sp(4) Tensor Products 4 × 4 = 1 + 5 + 10 5 × 4 = 4 + 16 5 × 5 = 1 + 10 + 14 10 × 4 = 4 + 16 + 20 10 × 5 = 5 + 10 + 35 10 × 10 = 1 + 5 + 10 + 14 + 35 + 35 14 × 4 = 16 + 40 14 × 5 = 5 + 30 + 35 14 × 10 = 10 + 14 + 35 + 81 14 × 14 = 1 + 10 + 14 + 35 + 55 + 81 16 × 4 = 5 + 10 + 14 + 35 16 × 5 = 4 + 16 + 20 + 40 16 × 10 = 4 + 2(16) + 20 + 40 + 64 16 × 14 = 4 + 16 + 20 + 40 + 64 + 80 16 × 16 = 1 + 5 + 2(10) + 14 + 30 + 2(35) + 35 + 81 20 × 4 = 10 + 35 + 35 20 × 5 = 16 + 20 + 64 20 × 10 = 4 + 16 + 20 + 40 + 56 + 64 20 × 14 = 16 + 20 + 40 + 64 + 140 20 × 16 = 5 + 10 + 14 + 2(35) + 35 + 81 + 105 20 × 20 = 1 + 5 + 10 + 14 + 30 + 35 + 35 + 81 + 84 + 105 30 × 4 = 40 + 80 30 × 5 = 14 + 55 + 81 30 × 10 = 30 + 35 + 81 + 154 30 × 14 = 5 + 30 + 35 + 91 + 105 + 154 30 × 16 = 16 + 40 + 64 + 80 + 140 + 140 30 × 20 = 20 + 40 + 64 + 80 + 140 + 256 30 × 30 = 1 + 10 + 14 + 35 + 55 + 81 + 84 + 140 + 220 + 260 35 × 4 = 16 + 20 + 40 + 64 35 × 4 = 20 + 56 + 64 35 × 5 = 10 + 14 + 35 + 35 + 81 35 × 5 = 35 + 35 + 105 35 × 10 = 5 + 10 + 14 + 30 + 2(35) + 35 + 81 + 105 35 × 10 = 10 + 35 + 35 + 81 + 84 + 105 35 × 14 = 5 + 10 + 30 + 2(35) + 35 + 81 + 105 + 154 35 × 14 = 14 + 35 + 35 + 81 + 105 + 220 35 × 16 = 4 + 2(16) + 2(20) + 2(40) + 56 + 2(64) + 80 + 140 35 × 16 = 16 + 20 + 40 + 56 + 2(64) + 140 + 160 35 × 20 = 4 + 2(16) + 20 + 2(40) + 56 + 2(64) + 80 + 140 + 160 35 × 20 = 4 + 16 + 20 + 40 + 56 + 64 + 80 + 120 + 140 + 160 35 × 30 = 10 + 14 + 35 + 35 + 55 + 2(81) + 105 + 154 + 220 + 260 35 × 30 = 30 + 35 + 35 + 81 + 105 + 154 + 220 + 390 35 × 35 = 1 + 5 + 2(10) + 2(14) + 30 + 3(35) + 2(35 ) + 55 + 3(81) + 84 + 2(105) + 154 + 220 35 × 35 = 5 + 10 + 14 + 30 + 2(35) + 35 + 2(81) + 84 + 2(105) + 154 + 220 + 231 35 × 35 = 1 + 5 + 10 + 14 + 30 + 35 + 35 + 55 + 81 + 84 + 105 + 154 + 165 + 220 + 231 Table A.58: Sp(6) Tensor Products 6 × 6 = 1 + 14 + 21 14 × 6 = 14 + 70 14 × 6 = 6 + 14 + 64 14 × 14 = 1 + 21 + 84 + 90 14 × 14 = 6 + 64 + 126 14 × 14 = 1 + 14 + 21 + 70 + 90 21 × 6 = 6 + 56 + 64 21 × 14 = 14 + 64 + 216 21 × 14 = 14 + 21 + 70 + 189 21 × 21 = 1 + 14 + 21 + 90 + 126 + 189 56 × 6 = 21 + 126 + 189 56 × 14 = 70 + 189 + 525 56 × 14 = 56 + 64 + 216 + 448 56 × 21 = 6 + 56 + 64 + 252 + 350 + 448 56 × 56 = 1 + 14 + 21 + 90 + 126 + 189 + 385 + 462 + 924 + 924 64 × 6 = 14 + 21 + 70 + 90 + 189 64 × 14 = 14 + 21 + 70 + 90 + 189 + 512 64 × 14 = 6 + 14 + 56 + 2(64) + 126 + 216 + 350 64 × 21 = 6 + 14 + 56 + 2(64) + 126 + 216 + 350 + 448 64 × 56 = 14 + 21 + 70 + 90 + 126 + 2(189) + 512 + 525 + 924 + 924 64 × 64 = 1 + 2(14) + 2(21) + 3(70) + 84 + 2(90) + 126 + 3(189) + 385 + 2(512) + 525 + 924 70 × 6 = 14 + 64 + 126 + 216 70 × 14 = 6 + 56 + 64 + 126 + 350 + 378 70 × 14 = 14 + 21 + 70 + 84 + 90 + 189 + 512 70 × 21 = 14 + 2(70) + 90 + 189 + 512 + 525 70 × 56 = 14 + 64 + 126 + 2(216) + 350 + 448 + 1100 + 1386 70 × 64 = 6 + 14 + 56 + 3(64) + 2(126) + 2(216) + 2(350) + 378 + 448 + 616 + 1386 70 × 70 = 1 + 14 + 2(21) + 70 + 84 + 2(90) + 126 + 2(189) + 385 + 2(512) + 594 + 924 + 1078 84 × 6 = 126 + 378 84 × 14 = 14 + 216 + 330 + 616 84 × 14 = 70 + 512 + 594 84 × 21 = 84 + 90 + 512 + 1078 84 × 56 = 126 + 350 + 378 + 1386 + 2464 84 × 64 = 64 + 126 + 216 + 350 + 378 + 616 + 1386 + 2240 84 × 70 = 14 + 70 + 189 + 385 + 512 + 525 + 594 + 1386 + 2205 84 × 84 = 1 + 21 + 84 + 90 + 126 + 924 + 1001 + 1078 + 1274 + 2457 90 × 6 = 64 + 126 + 350 90 × 14 = 14 + 64 + 216 + 350 + 616 90 × 14 = 14 + 70 + 90 + 189 + 385 + 512 90 × 21 = 21 + 70 + 84 + 90 + 189 + 512 + 924 90 × 56 = 56 + 64 + 126 + 216 + 350 + 378 + 448 + 1386 + 2016 90 × 64 = 6 + 14 + 56 + 2(64) + 2(126) + 2(216) + 2(350) + 378 + 448 + 616 + 1344 + 1386 90 × 70 = 14 + 21 + 2(70) + 90 + 2(189) + 385 + 2(512) + 525 + 594 + 924 + 2205 90 × 84 = 21 + 84 + 90 + 189 + 512 + 924 + 1078 + 2205 + 2457 90 × 90 = 1 + 14 + 21 + 70 + 84 + 2(90) + 126 + 189 + 385 + 2(512) + 525 + 924 + 1078 + 1274 + 2205 Table A.59: Sp(8) Tensor Products 8 × 8 = 1 + 27 + 36 27 × 8 = 8 + 48 + 160 27 × 27 = 1 + 27 + 36 + 42 + 308 + 315 36 × 8 = 8 + 120 + 160 36 × 27 = 27 + 36 + 315 + 594 36 × 36 = 1 + 27 + 36 + 308 + 330 + 594 42 × 8 = 48 + 288 42 × 27 = 27 + 315 + 792 42 × 36 = 42 + 315 + 1155 42 × 42 = 1 + 36 + 308 + 594 + 825 48 × 8 = 27 + 42 + 315 48 × 27 = 8 + 48 + 160 + 288 + 792 48 × 36 = 48 + 160 + 288 + 1232 48 × 42 = 8 + 160 + 792 + 1056 48 × 48 = 1 + 27 + 36 + 308 + 315 + 792 + 825 120 × 8 = 36 + 330 + 594 120 × 27 = 120 + 160 + 1232 + 1728 120 × 36 = 8 + 120 + 160 + 792 + 1512 + 1728 120 × 42 = 288 + 1232 + 3520 120 × 48 = 315 + 594 + 1155 + 3696 120 × 120 = 1 + 27 + 36 + 308 + 330 + 594 + 1716 + 2184 + 4290 + 4914 160 × 8 = 27 + 36 + 308 + 315 + 594 160 × 27 = 8 + 48 + 120 + 2(160) + 288 + 792 + 1232 + 1512 160 × 36 = 8 + 48 + 120 + 2(160) + 792 + 1232 + 1512 + 1728 160 × 42 = 48 + 160 + 288 + 792 + 1232 + 4200 160 × 48 = 27 + 36 + 42 + 308 + 2(315) + 594 + 792 + 1155 + 4096 160 × 120 = 27 + 36 + 308 + 315 + 330 + 2(594) + 3696 + 4096 + 4290 + 4914 160 × 160 = 1 + 2(27) + 2(36) + 42 + 2(308) + 3(315) + 330 + 3(594) + 792 + 825 + 1155 + 2184 + 3696 + 2(4096) + 4914 288 × 8 = 42 + 315 + 792 + 1155 288 × 27 = 48 + 160 + 288 + 792 + 1056 + 1232 + 4200 288 × 36 = 48 + 2(288) + 792 + 1232 + 3520 + 4200 288 × 42 = 8 + 120 + 160 + 792 + 1056 + 1512 + 3696 + 4752 288 × 48 = 27 + 36 + 308 + 315 + 594 + 594 + 792 + 825 + 4096 + 6237 308 × 8 = 160 + 792 + 1512 308 × 27 = 27 + 308 + 315 + 594 + 792 + 2184 + 4096 308 × 36 = 36 + 308 + 315 + 594 + 825 + 4096 + 4914 308 × 42 = 42 + 308 + 315 + 1155 + 4096 + 7020 308 × 48 = 48 + 160 + 288 + 792 + 1232 + 1512 + 4200 + 6552 Table A.60: Sp(10) Tensor Products 10 × 10 = 1 + 44 + 55 44 × 10 = 10 + 110 + 320 44 × 44 = 1 + 44 + 55 + 165 + 780 + 891 55 × 10 = 10 + 220 + 320 55 × 44 = 44 + 55 + 891 + 1430 55 × 55 = 1 + 44 + 55 + 715 + 780 + 1430 110 × 10 = 44 + 165 + 891 110 × 44 = 10 + 110 + 132 + 320 + 1408 + 2860 110 × 55 = 110 + 320 + 1408 + 4212 110 × 110 = 1 + 44 + 55 + 165 + 780 + 891 + 1155 + 4004 + 5005 132 × 10 = 165 + 1155 132 × 44 = 110 + 1408 + 4290 132 × 55 = 132 + 1408 + 5720 132 × 110 = 44 + 891 + 5005 + 8580 132 × 132 = 1 + 55 + 780 + 4004 + 4719 + 7865 165 × 10 = 110 + 132 + 1408 165 × 44 = 44 + 165 + 891 + 1155 + 5005 165 × 55 = 165 + 891 + 1155 + 6864 165 × 110 = 10 + 110 + 320 + 1408 + 2860 + 4290 + 9152 165 × 132 = 10 + 320 + 2860 + 9152 + 9438 165 × 165 = 1 + 44 + 55 + 780 + 891 + 4004 + 5005 + 7865 + 8580 220 × 10 = 55 + 715 + 1430 220 × 44 = 220 + 320 + 4212 + 4928 220 × 55 = 10 + 220 + 320 + 2002 + 4620 + 4928 220 × 110 = 891 + 1430 + 6864 + 15015 220 × 132 = 1155 + 6864 + 21021 220 × 165 = 1408 + 4212 + 5720 + 24960 220 × 220 = 1 + 44 + 55 + 715 + 780 + 1430 + 5005 + 8250 + 14300 + 17820 320 × 10 = 44 + 55 + 780 + 891 + 1430 320 × 44 = 10 + 110 + 220 + 2(320) + 1408 + 2860 + 4212 + 4620 320 × 55 = 10 + 110 + 220 + 2(320) + 2860 + 4212 + 4620 + 4928 320 × 110 = 44 + 55 + 165 + 780 + 2(891) + 1155 + 1430 + 5005 + 6864 + 17920 320 × 132 = 165 + 891 + 1155 + 5005 + 6864 + 28160 320 × 165 = 110 + 132 + 320 + 2(1408) + 2860 + 4212 + 4290 + 5720 + 32340 320 × 220 = 44 + 55 + 715 + 780 + 891 + 2(1430) + 14300 + 15015 + 17820 + 17920 320 × 320 = 1 + 2(44) + 2(55) + 165 + 715 + 2(780) + 3(891) + 3(1430) + 4004 + 5005 + 6864 + 8250 + 15015 + 17820 + 2(17920) Table A.61: Sp(12) Tensor Products 12 × 12 = 1 + 65 + 78 65 × 12 = 12 + 208 + 560 65 × 65 = 1 + 65 + 78 + 429 + 1650 + 2002 78 × 12 = 12 + 364 + 560 78 × 65 = 65 + 78 + 2002 + 2925 78 × 78 = 1 + 65 + 78 + 1365 + 1650 + 2925 208 × 12 = 65 + 429 + 2002 208 × 65 = 12 + 208 + 560 + 572 + 4368 + 7800 208 × 78 = 208 + 560 + 4368 + 11088 208 × 208 = 1 + 65 + 78 + 429 + 429 + 1650 + 2002 + 6006 + 13650 + 18954 364 × 12 = 78 + 1365 + 2925 364 × 65 = 364 + 560 + 11088 + 11648 364 × 78 = 12 + 364 + 560 + 4368 + 11440 + 11648 429 × 12 = 572 + 4576 429 × 12 = 208 + 572 + 4368 429 × 65 = 429 + 6006 + 21450 429 × 65 = 65 + 429 + 429 + 2002 + 6006 + 18954 Table A.62: Sp(14) Tensor Products 14 × 14 = 1 + 90 + 105 90 × 14 = 14 + 350 + 896 90 × 90 = 1 + 90 + 105 + 910 + 3094 + 3900 105 × 14 = 14 + 560 + 896 105 × 90 = 90 + 105 + 3900 + 5355 105 × 105 = 1 + 90 + 105 + 2380 + 3094 + 5355 350 × 14 = 90 + 910 + 3900 560 × 14 = 105 + 2380 + 5355 896 × 14 = 90 + 105 + 3094 + 3900 + 5355 A.2.4. Exceptional Algebras Table A.63: E 6 Tensor Products 27 × 27 = 1 + 78 + 650 27 × 27 = 27 + 351 + 351 78 × 27 = 27 + 351 + 1728 78 × 78 = 1 + 78 + 650 + 2430 + 2925 351 × 27 = 27 + 1728 + 7722 351 × 27 = 27 + 351 + 1728 + 7371 351 × 27 = 78 + 650 + 2925 + 5824 351 × 27 = 650 + 3003 + 5824 351 × 78 = 351 + 351 + 7371 + 19305 351 × 78 = 27 + 351 + 351 + 1728 + 7371 + 17550 351 × 351 = 351 + 7371 + 7722 + 19305 + 34398 + 54054 351 × 351 = 351 + 1728 + 7371 + 7722 + 51975 + 54054 351 × 351 = 27 + 351 + 351 + 2(1728) + 7371 + 7722 + 17550 + 34398 + 51975 351 × 351 = 1 + 78 + 2(650) + 2430 + 2925 + 5824 + 5824 + 34749 + 70070 351 × 351 = 1 + 78 + 650 + 2430 + 34749 + 85293 351 × 351 = 78 + 650 + 2925 + 5824 + 34749 + 78975 650 × 27 = 27 + 351 + 351 + 1728 + 7371 + 7722 650 × 78 = 78 + 2(650) + 2925 + 5824 + 5824 + 34749 650 × 351 = 27 + 351 + 351 + 1728 + 7371 + 7722 + 17550 + 19305 + 61425 + 112320 650 × 351 = 27 + 2(351) + 351 + 2(1728) + 2(7371) + 7722 + 17550 + 19305 + 51975 + 112320 650 × 650 = 1 +2(78)+3(650)+2430 +2(2925)+3003 +3003 +2(5824)+2(5824)+2(34749)+ 70070 + 78975 + 78975 + 85293 1728 × 27 = 78 + 650 + 2430 + 2925 + 5824 + 34749 1728 × 27 = 351 + 351 + 1728 + 7371 + 17550 + 19305 1728 × 78 = 27 + 351 + 2(1728) + 7371 + 7722 + 17550 + 46332 + 51975 1728 × 351 = 650 + 2925 + 3003 + 5824 + 2(5824) + 34749 + 70070 + 78975 + 146432 + 252252 1728 × 351 = 78 + 2(650) + 2430 + 2(2925) + 3003 + 5824 + 2(5824) + 2(34749) + 70070 + 78975 + 105600 + 252252 1728 × 351 = 27 + 351 + 2(1728) + 7371 + 7722 + 17550 + 46332 + 51975 + 112320 + 359424 1728 × 351 = 27 + 2(351) + 351 + 2(1728) + 2(7371) + 7722 + 2(17550) + 19305 + 46332 + 51975 + 112320 + 314496 1728 × 650 = 27 + 2(351) + 351 + 3(1728) + 3(7371) + 2(7722) + 2(17550) + 19305 + 34398 + 46332 + 2(51975) + 54054 + 112320 + 314496 + 359424 1728 × 1728 = 1 + 2(78) + 3(650) + 2(2430) + 3(2925) + 2(5824) + 2(5824) + 4(34749) + 43758 + 2(70070) + 78975 + 78975 + 85293 + 2(105600) + 252252 + 252252 + 812175 + 852930 1728 × 1728 = 27 + 2(351) + 2(351 ) + 2(1728) + 4(7371) + 7722 + 3(17550) + 3(19305) + 34398 + 46332 +2(51975)+61425 +2(112320)+2(314496)+386100 +393822 +459459 + 494208 2430 × 27 = 1728 + 17550 + 46332 2430 × 78 = 78 + 2430 + 2925 + 34749 + 43758 + 105600 2430 × 351 = 351 + 7371 + 17550 + 19305 + 34398 + 314496 + 459459 2430 × 351 = 351 + 1728 + 7371 + 17550 + 19305 + 46332 + 51975 + 314496 + 393822 2430 × 650 = 650 +2430 +2925 +5824 +5824 +2(34749)+70070 +105600 +252252 +252252 + 812175 Table A.66: F 4 Tensor Products (continued) 1053 × 324 = 26 + 2(273) + 324 + 3(1053) + 1274 + 2652 + 3(4096) + 2(8424) + 10829 + 17901 + 2(19278) + 19448 + 34749 + 76076 + 106496 1053 × 324 = 324 + 1053 + 1274 + 4096 + 8424 + 10829 + 19448 + 29172 + 106496 + 160056 1053 × 1053 = 1 + 26 + 2(52) + 2(273) + 3(324) + 2(1053) + 2(1053 ) + 3(1274) + 2652 + 4(4096) + 3(8424) + 4(10829) + 12376 + 16302 + 17901 + 2(19278) + 2(19448) + 2(29172) + 2(34749) + 2(106496) + 107406 + 119119 + 160056 + 160056 1053 × 1053 = 26 + 273 + 2(1053) + 2652 + 4096 + 2(8424) + 2(17901) + 2(19278) + 34749 + 76076 + 106496 + 107406 + 119119 + 184756 + 379848 1053 × 1053 = 1 + 52 + 324 + 2(1053 ) + 1274 + 10829 + 12376 + 16302 + 19448 + 2(29172) + 100776 + 160056 + 160056 + 226746 + 340119 1274 × 26 = 273 + 1053 + 4096 + 8424 + 19278 1274 × 52 = 52 + 324 + 1053 + 1274 Table A. 67: G 2 Tensor Products 7 × 7 = 1 + 7 + 14 + 27 14 × 7 = 7 + 27 + 64 14 × 14 = 1 + 14 + 27 + 77 + 77 27 × 7 = 7 + 14 + 27 + 64 + 77 27 × 14 = 7 + 14 + 27 + 64 + 77 + 189 27 × 27 = 1 + 7 + 14 + 2 ( 27 ) + 2( 64 ) + 77 + 77 + 182 + 189 64 × 7 = 14 + 27 + 64 + 77 + 77 + 189 64 × 14 = 7 + 27 + 2 ( 64 ) + 77 + 182 + 189 + 286 64 × 27 = 7 + 14 + 2 ( 27 ) + 2 ( 64 ) + 2(77)+77 +182+2(189)+286+448 64×64=1+7+2(14)+2(27)+2(64)+3(77)+2(77 )+2(182)+3(189)+273+286+ 378+2(448)+729 77 ×7=64+189+286 77×7=27+64+77+182+189 77 ×14=14+77+77 +189+273+448 77×14=14+27+64+77+77 +182+189+448 77 ×27=27+64+77+77 +182+189+286+448+729 77×27=7+14+27+2(64)+2(77)+77 +182+2(189)+286+378+448 77 ×64=7+27+2(64)+77+2(182)+2(189)+2(286)+378+448+729+896+924 77×64=7+14+2(27)+3(64)+2(77)+77 +2(182)+3(189)+2(286)+378+2(448)+729+924 77 ×77 =1+14+27+77+2(77 )+182+189+273+378+2(448)+714+729+748+1547 A.3.BranchingRules A.3.1.SU(N) TableA.68:SU(2)BranchingRules SU(2)→U(1) 2=(1)+(−1) 3=(2)+(0)+(−2) 4=(3)+(1)+(−1)+(−3) 5=(4)+(2)+(0)+(−2)+(−4) 6=(5)+(3)+(1)+(−1)+(−3)+(−5) 7=(6)+(4)+(2)+(0)+(−2)+(−4)+(−6) 8=(7)+(5)+(3)+(1)+(−1)+(−3)+(−5)+(−7) 9=(8)+(6)+(4)+(2)+(0)+(−2)+(−4)+(−6)+(−8) 10=(9)+(7)+(5)+(3)+(1)+(−1)+(−3)+(−5)+(−7)+(−9) 11=(10)+(8)+(6)+(4)+(2)+(0)+(−2)+(−4)+(−6)+(−8)+(−10) 12=(11)+(9)+(7)+(5)+(3)+(1)+(−1)+(−3)+(−5)+(−7)+(−9)+(−11) 13=(12)+(10)+(8)+(6)+(4)+(2)+(0)+(−2)+(−4)+(−6)+(−8)+(−10)+(−12) 14=(13)+(11)+(9)+(7)+(5)+(3)+(1)+(−1)+(−3)+(−5)+(−7)+(−9)+(−11)+(−13) 15=(14)+(12)+(10)+(8)+(6)+(4)+(2)+(0)+(−2)+(−4)+(−6)+(−8)+(−10)+(−12)+(−14) 16=(15)+(13)+(11)+(9)+(7)+(5)+(3)+(1)+(−1)+(−3)+(−5)+(−7)+(−9)+(−11)+(−13)+(−15) 17=(16)+(14)+(12)+(10)+(8)+(6)+(4)+(2)+(0)+(−2)+(−4)+(−6)+(−8)+(−10)+ (−12)+(−14)+(−16) 18=(17)+(15)+(13)+(11)+(9)+(7)+(5)+(3)+(1)+(−1)+(−3)+(−5)+(−7)+(−9)+(−11)+ (−13)+(−15)+(−17) TableA.69:SU(3)BranchingRules SU(3)→SU(2)×U(1) 3=(1)(−2)+(2)(1) 6=(1)(−4)+(2)(−1)+(3)(2) 8=(1)(0)+(2)(3)+(2)(−3)+(3)(0) 10=(1)(−6)+(2)(−3)+(3)(0)+(4)(3) 15=(1)(−2)+(2)(1)+(2)(−5)+(3)(4)+(3)(−2)+(4)(1) 15 =(1)(−8)+(2)(−5)+(3)(−2)+(4)(1)+(5)(4) 21=(1)(10)+(2)(7)+(3)(4)+(4)(1)+(5)(−2)+(6)(−5) 24=(1)(4)+(2)(7)+(2)(1)+(3)(4)+(3)(−2)+(4)(1)+(4)(−5)+(5)(−2) 27=(1)(0)+(2)(3)+(2)(−3)+(3)(6)+(3)(0)+(3)(−6)+(4)(3)+(4)(−3)+(5)(0) 28=(1)(−12)+(2)(−9)+(3)(−6)+(4)(−3)+(5)(0)+(6)(3)+(7)(6) 35=(1)(−6)+(2)(−3)+(2)(−9)+(3)(0)+(3)(−6)+(4)(3)+(4)(−3)+(5)(6)+(5)(0)+(6)(3) 36=(1)(−14)+(2)(−11)+(3)(−8)+(4)(−5)+(5)(−2)+(6)(1)+(7)(4)+(8)(7) 42=(1)(−2)+(2)(1)+(2)(−5)+(3)(4)+(3)(−2)+(3)(−8)+(4)(7)+(4)(1)+(4)(−5)+(5)(4)+ (5)(−2)+(6)(1) 45=(1)(16)+(2)(13)+(3)(10)+(4)(7)+(5)(4)+(6)(1)+(7)(−2)+(8)(−5)+(9)(−8) 48=(1)(−8)+(2)(−5)+(2)(−11)+(3)(−2)+(3)(−8)+(4)(1)+(4)(−5)+(5)(4)+(5)(−2)+(6)(7)+ (6)(1)+(7)(4) 55=(1)(−18)+(2)(−15)+(3)(−12)+(4)(−9)+(5)(−6)+(6)(−3)+(7)(0)+(8)(3)+(9)(6)+(10)(9) TableA.70:SU(4)BranchingRules SU(4)→SU(3)×U(1) 4=(1)(−3)+(3)(1) 6=(3)(−2)+(3)(2) 10=(1)(−6)+(3)(−2)+(6)(2) 15=(1)(0)+(3)(4)+(3)(−4)+(8)(0) 20=(3)(1)+(3)(5)+(6)(1)+(8)(−3) 20 =(6)(4)+(6)(−4)+(8)(0) 20 =(1)(9)+(3)(5)+(6)(1)+(10)(−3) 35=(1)(−12)+(3)(−8)+(6)(−4)+(10)(0)+(15 )(4) 36=(1)(−3)+(3)(1)+(3)(−7)+(6)(5)+(8)(−3)+(15)(1) 45=(3)(−8)+(3)(−4)+(6)(−4)+(8)(0)+(10)(0)+(15)(4) 50=(10)(−6)+(10)(6)+(15)(−2)+(15)(2) 56=(1)(−15)+(3)(−11)+(6)(−7)+(10)(−3)+(15 )(1)+(21)(5) 60=(6)(1)+(6)(−7)+(8)(−3)+(10)(−3)+(15)(1)+(15)(5) 64=(3)(−2)+(3)(2)+(6)(−2)+(6)(2)+(8)(6)+(8)(−6)+(15)(−2)+(15)(2) 70=(1)(−6)+(3)(−2)+(3)(−10)+(6)(2)+(8)(−6)+(10)(6)+(15)(−2)+(24)(2) 84=(1)(0)+(3)(4)+(3)(−4)+(6)(−8)+(6)(8)+(8)(0)+(15)(4)+(15)(−4)+(27)(0) 84 =(3)(−11)+(3)(−7)+(6)(−7)+(8)(−3)+(10)(−3)+(15)(1)+(15 )(1)+(24)(5) 84 =(1)(−18)+(3)(−14)+(6)(−10)+(10)(−6)+(15 )(−2)+(21)(2)+(28)(6) SU(4)→SU(2)×SU(2)×U(1) 4=(2,1)(1)+(1,2)(−1) 6=(1,1)(2)+(1,1)(−2)+(2,2)(0) 10=(2,2)(0)+(3,1)(2)+(1,3)(−2) 15=(1,1)(0)+(2,2)(2)+(2,2)(−2)+(3,1)(0)+(1,3)(0) 20=(2,1)(1)+(2,1)(−3)+(1,2)(3)+(1,2)(−1)+(3,2)(−1)+(2,3)(1) 20 =(1,1)(4)+(1,1)(0)+(1,1)(−4)+(2,2)(2)+(2,2)(−2)+(3,3)(0) 20 =(3,2)(−1)+(2,3)(1)+(4,1)(−3)+(1,4)(3) 35=(3,3)(0)+(4,2)(2)+(2,4)(−2)+(5,1)(4)+(1,5)(−4) 36=(2,1)(1)+(1,2)(−1)+(3,2)(3)+(3,2)(−1)+(2,3)(1)+(2,3)(−3)+(4,1)(1)+(1,4)(−1) 45=(2,2)(2)+(2,2)(−2)+(3,1)(4)+(3,1)(0)+(1,3)(0)+(1,3)(−4)+(3,3)(0)+(4,2)(2)+ (2,4)(−2) 50=(1,1)(6)+(1,1)(2)+(1,1)(−2)+(1,1)(−6)+(2,2)(4)+(2,2)(0)+(2,2)(−4)+(3,3)(2)+ (3,3)(−2)+(4,4)(0) 56=(4,3)(1)+(3,4)(−1)+(5,2)(3)+(2,5)(−3)+(6,1)(5)+(1,6)(−5) 60=(2,1)(5)+(2,1)(1)+(2,1)(−3)+(1,2)(3)+(1,2)(−1)+(1,2)(−5)+(3,2)(3)+(3,2)(−1)+ (2,3)(1)+(2,3)(−3)+(4,3)(1)+(3,4)(−1) 64=(1,1)(2)+(1,1)(−2)+(2,2)(4)+2(2,2)(0)+(2,2)(−4)+(3,1)(2)+(3,1)(−2)+(1,3)(2)+ (1,3)(−2)+(3,3)(2)+(3,3)(−2)+(4,2)(0)+(2,4)(0) 70=(2,2)(0)+(3,1)(2)+(1,3)(−2)+(3,3)(2)+(3,3)(−2)+(4,2)(4)+(4,2)(0)+(2,4)(0)+ (2,4)(−4)+(5,1)(2)+(1,5)(−2) 84=(1,1)(0)+(2,2)(2)+(2,2)(−2)+(3,1)(0)+(1,3)(0)+(3,3)(4)+(3,3)(0)+(3,3)(−4)+ (4,2)(2)+(4,2)(−2)+(2,4)(2)+(2,4)(−2)+(5,1)(0)+(1,5)(0) 84 =(3,2)(3)+(3,2)(−1)+(2,3)(1)+(2,3)(−3)+(4,1)(5)+(4,1)(1)+(1,4)(−1)+(1,4)(−5)+ (4,3)(1)+(3,4)(−1)+(5,2)(3)+(2,5)(−3) 84 =(4,4)(0)+(5,3)(2)+(3,5)(−2)+(6,2)(4)+(2,6)(−4)+(7,1)(6)+(1,7)(−6) TableA.71:SU(5)BranchingRules SU(5)→SU(4)×U(1) 5=(1)(−4)+(4)(1) 10=(4)(−3)+(6)(2) 15=(1)(−8)+(4)(−3)+(10)(2) 24=(1)(0)+(4)(5)+(4)(−5)+(15)(0) 35=(1)(12)+(4)(7)+(10)(2)+(20 )(−3) 40=(4)(7)+(6)(2)+(10)(2)+(20)(−3) 45=(4)(1)+(6)(6)+(15)(−4)+(20)(1) 50=(10)(6)+(20)(1)+(20 )(−4) 70=(1)(−4)+(4)(1)+(4)(−9)+(10)(6)+(15)(−4)+(36)(1) 70 =(1)(16)+(4)(11)+(10)(6)+(20 )(1)+(35)(−4) 75=(15)(0)+(20)(5)+(20)(−5)+(20 )(0) 105=(4)(11)+(6)(6)+(10)(6)+(20)(1)+(20 )(1)+(45)(−4) 126=(4)(−5)+(6)(−10)+(15)(0)+(20)(−5)+(36)(5)+(45)(0) 126 =(1)(−20)+(4)(−15)+(10)(−10)+(20 )(−5)+(35)(0)+(56)(5) 160=(1)(−8)+(4)(−3)+(4)(−13)+(10)(2)+(15)(−8)+(20 )(7)+(36)(−3)+(70)(2) 175=(4)(−3)+(6)(2)+(10)(2)+(15)(−8)+(20)(−3)+(20)(7)+(36)(−3)+(64)(2) 175 =(10)(−10)+(20)(−5)+(20 )(0)+(20 )(−5)+(45)(0)+(60)(5) 175 =(20 )(−9)+(45)(−4)+(50)(6)+(60)(1) SU(5)→SU(3)×SU(2)×U(1) 5=(1,2)(−3)+(3,1)(2) 10=(1,1)(−6)+(3,1)(4)+(3,2)(−1) 15=(1,3)(−6)+(3,2)(−1)+(6,1)(4) 24=(1,1)(0)+(1,3)(0)+(3,2)(5)+(3,2)(−5)+(8,1)(0) 35=(1,4)(9)+(3,3)(4)+(6,2)(−1)+(10,1)(−6) 40=(1,2)(9)+(3,1)(4)+(3,2)(−1)+(3,3)(4)+(6,2)(−1)+(8,1)(−6) 45=(1,2)(−3)+(3,1)(2)+(3,1)(−8)+(3,2)(7)+(3,3)(2)+(6,1)(2)+(8,2)(−3) 50=(1,1)(12)+(3,1)(2)+(3,2)(7)+(6,1)(−8)+(6,3)(2)+(8,2)(−3) 70=(1,2)(−3)+(3,1)(2)+(1,4)(−3)+(3,3)(2)+(3,3)(−8)+(6,2)(7)+(8,2)(−3)+(15,1)(2) 70 =(1,5)(12)+(3,4)(7)+(6,3)(2)+(10,2)(−3)+(15 ,1)(−8) 75=(1,1)(0)+(3,1)(−10)+(3,1)(10)+(3,2)(5)+(3,2)(−5)+(6,2)(5)+(6,2)(−5)+(8,1)(0)+ (8,3)(0) 105=(1,3)(12)+(3,2)(7)+(3,3)(2)+(6,1)(2)+(3,4)(7)+(6,3)(2)+(8,2)(−3)+(10,2)(−3)+ (15,1)(−8) 126=(1,3)(0)+(3,2)(5)+(3,2)(−5)+(3,3)(−10)+(6,1)(10)+(3,4)(−5)+(6,2)(−5)+(8,1)(0)+ (8,3)(0)+(10,1)(0)+(15,2)(5) 126 =(1,6)(−15)+(3,5)(−10)+(6,4)(−5)+(10,3)(0)+(15 ,2)(5)+(21,1)(10) 160=(1,3)(−6)+(3,2)(−1)+(1,5)(−6)+(6,1)(4)+(3,4)(−1)+(3,4)(−11)+(6,3)(4)+(8,3)(−6)+ (10,2)(9)+(15,2)(−1)+(24,1)(4) 175=(1,1)(−6)+(3,1)(4)+(1,3)(−6)+2(3,2)(−1)+(3,2)(−11)+(3,3)(4)+(6,1)(4)+(3,4)(−1)+ (6,2)(−1)+(8,1)(−6)+(6,3)(4)+(8,2)(9)+(8,3)(−6)+(15,1)(4)+(15,2)(−1) 175 =(1,2)(−15)+(3,1)(−10)+(3,2)(−5)+(3,3)(−10)+(6,2)(5)+(6,2)(−5)+(8,1)(0)+ (6,4)(−5)+(8,3)(0)+(10,3)(0)+(15,1)(10)+(15,2)(5) 175 =(1,1)(−18)+(3,1)(−8)+(3,2)(−13)+(6,1)(2)+(6,3)(−8)+(8,2)(−3)+(10,1)(12)+ (10,4)(−3)+(15,2)(7)+(15,3)(2) TableA.72:SU(6)BranchingRules SU(6)→SU(5)×U(1) 6=(1)(−5)+(5)(1) 15=(5)(−4)+(10)(2) 20=(10)(−3)+(10)(3) 21=(1)(−10)+(5)(−4)+(15)(2) 35=(1)(0)+(5)(6)+(5)(−6)+(24)(0) 56=(1)(−15)+(5)(−9)+(15)(−3)+(35)(3) 70=(5)(−9)+(10)(−3)+(15)(−3)+(40)(3) 84=(5)(1)+(10)(7)+(24)(−5)+(45)(1) 105=(10)(2)+(10)(8)+(40)(2)+(45)(−4) 105 =(15)(8)+(40)(2)+(50)(−4) 120=(1)(−5)+(5)(1)+(5)(−11)+(15)(7)+(24)(−5)+(70)(1) 126=(1)(20)+(5)(14)+(15)(8)+(35)(2)+(70 )(−4) 175=(50)(6)+(50)(−6)+(75)(0) 189=(24)(0)+(45)(6)+(45)(−6)+(75)(0) 210=(40)(7)+(45)(1)+(50)(1)+(75)(−5) 210 =(5)(14)+(10)(8)+(15)(8)+(35)(2)+(40)(2)+(105)(−4) 252=(1)(25)+(5)(19)+(15)(13)+(35)(7)+(70 )(1)+(126 )(−5) 280=(5)(−6)+(10)(−12)+(24)(0)+(45)(−6)+(70)(6)+(126)(0) 315=(1)(−10)+(5)(−4)+(5)(−16)+(15)(2)+(24)(−10)+(35)(8)+(70)(−4)+(160)(2) SU(6)→SU(4)×SU(2)×U(1) 6=(1,2)(−2)+(4,1)(1) 15=(1,1)(−4)+(4,2)(−1)+(6,1)(2) 20=(4,1)(−3)+(4,1)(3)+(6,2)(0) 21=(1,3)(−4)+(4,2)(−1)+(10,1)(2) 35=(1,1)(0)+(1,3)(0)+(4,2)(3)+(4,2)(−3)+(15,1)(0) 56=(1,4)(−6)+(4,3)(−3)+(10,2)(0)+(20 ,1)(3) 70=(1,2)(−6)+(4,1)(−3)+(4,3)(−3)+(6,2)(0)+(10,2)(0)+(20,1)(3) 84=(1,2)(−2)+(4,1)(1)+(4,1)(−5)+(4,3)(1)+(6,2)(4)+(15,2)(−2)+(20,1)(1) 105=(4,2)(−1)+(4,2)(5)+(6,1)(2)+(6,3)(2)+(10,1)(2)+(15,1)(−4)+(20,2)(−1) 105 =(1,1)(8)+(4,2)(5)+(6,1)(2)+(10,3)(2)+(20 ,1)(−4)+(20,2)(−1) 120=(1,2)(−2)+(4,1)(1)+(1,4)(−2)+(4,3)(1)+(4,3)(−5)+(10,2)(4)+(15,2)(−2)+(36,1)(1) 126=(1,5)(8)+(4,4)(5)+(10,3)(2)+(20 ,2)(−1)+(35,1)(−4) 175=(10,1)(−6)+(10,1)(6)+(15,1)(0)+(20,2)(3)+(20,2)(−3)+(20 ,3)(0) 189=(1,1)(0)+(4,2)(3)+(4,2)(−3)+(6,1)(6)+(6,1)(−6)+(15,1)(0)+(15,3)(0)+(20 ,1)(0)+ (20,2)(3)+(20,2)(−3) 210=(4,1)(1)+(4,1)(7)+(6,2)(4)+(10,2)(4)+(15,2)(−2)+(20,1)(1)+(20,1)(−5)+(20 ,2)(−2)+ (20,3)(1) 210 =(1,3)(8)+(4,2)(5)+(4,4)(5)+(6,3)(2)+(10,1)(2)+(10,3)(2)+(20,2)(−1)+(20 ,2)(−1)+ (45,1)(−4) 252=(1,6)(10)+(4,5)(7)+(10,4)(4)+(20 ,3)(1)+(35,2)(−2)+(56,1)(−5) 280=(1,3)(0)+(4,2)(3)+(4,2)(−3)+(4,4)(−3)+(6,3)(−6)+(10,1)(6)+(15,1)(0)+(15,3)(0)+ (20,2)(−3)+(36,2)(3)+(45,1)(0) 315=(1,3)(−4)+(4,2)(−1)+(1,5)(−4)+(4,4)(−1)+(4,4)(−7)+(10,1)(2)+(10,3)(2)+ (15,3)(−4)+(20 ,2)(5)+(36,2)(−1)+(70,1)(2) TableA.72:SU(6)BranchingRules(continued) SU(6)→SU(3)×SU(3)×U(1) 6=(3,1)(1)+(1,3)(−1) 15=(3,1)(2)+(1,3)(−2)+(3,3)(0) 20=(1,1)(3)+(1,1)(−3)+(3,3)(−1)+(3,3)(1) 21=(3,3)(0)+(6,1)(2)+(1,6)(−2) 35=(1,1)(0)+(3,3)(2)+(3,3)(−2)+(8,1)(0)+(1,8)(0) 56=(6,3)(1)+(3,6)(−1)+(10,1)(3)+(1,10)(−3) 70=(3,3)(−1)+(3,3)(1)+(8,1)(3)+(1,8)(−3)+(6,3)(1)+(3,6)(−1) 84=(3,1)(1)+(1,3)(−1)+(3,3)(3)+(3,3)(−3)+(6,1)(1)+(1,6)(−1)+(8,3)(−1)+(3,8)(1) 105=(3,1)(2)+(3,1)(−4)+(1,3)(4)+(1,3)(−2)+(3,3)(0)+(3,6)(0)+(6,3)(0)+(8,3)(−2)+ (3,8)(2) 105 =(3,3)(0)+(6,1)(−4)+(1,6)(4)+(8,3)(−2)+(3,8)(2)+(6,6)(0) 120=(3,1)(1)+(1,3)(−1)+(6,3)(3)+(3,6)(−3)+(8,3)(−1)+(3,8)(1)+(15,1)(1)+(1,15)(−1) 126=(6,6)(0)+(10,3)(−2)+(3,10)(2)+(15 ,1)(−4)+(1,15 )(4) 175=(1,1)(6)+(1,1)(0)+(1,1)(−6)+(3,3)(2)+(3,3)(−4)+(3,3)(4)+(3,3)(−2)+(6,6)(−2)+ (6,6)(2)+(8,8)(0) 189=(1,1)(0)+(3,3)(2)+(3,3)(−4)+(3,3)(4)+(3,3)(−2)+(8,1)(0)+(1,8)(0)+(6,3)(−2)+ (3,6)(2)+(6,3)(2)+(3,6)(−2)+(8,8)(0) 210=(3,1)(1)+(3,1)(−5)+(1,3)(5)+(1,3)(−1)+(3,3)(3)+(3,3)(−3)+(6,3)(−3)+(3,6)(3)+ (8,3)(−1)+(3,8)(1)+(8,6)(−1)+(6,8)(1) 210 =(3,6)(0)+(6,3)(0)+(8,3)(−2)+(3,8)(2)+(6,6)(0)+(10,3)(−2)+(3,10)(2)+(15,1)(−4)+ (1,15)(4) 252=(10,6)(−1)+(6,10)(1)+(15 ,3)(−3)+(3,15 )(3)+(21,1)(−5)+(1,21)(5) 280=(3,3)(2)+(3,3)(−2)+(8,1)(0)+(1,8)(0)+(6,3)(4)+(6,3)(−2)+(3,6)(2)+(3,6)(−4)+ (10,1)(0)+(1,10)(0)+(8,8)(0)+(15,3)(2)+(3,15)(−2) 315=(3,3)(0)+(6,1)(2)+(1,6)(−2)+(10,3)(4)+(3,10)(−4)+(6,8)(2)+(8,6)(−2)+(15,3)(0)+ (3,15)(0)+(24,1)(2)+(1,24)(−2) TableA.73:SU(7)BranchingRules SU(7)→SU(6)×U(1) 7=(1)(−6)+(6)(1) 21=(6)(−5)+(15)(2) 28=(1)(−12)+(6)(−5)+(21)(2) 35=(15)(−4)+(20)(3) 48=(1)(0)+(6)(7)+(6)(−7)+(35)(0) 84=(1)(−18)+(6)(−11)+(21)(−4)+(56)(3) 112=(6)(−11)+(15)(−4)+(21)(−4)+(70)(3) 140=(6)(1)+(15)(8)+(35)(−6)+(84)(1) 189=(1)(−6)+(6)(1)+(6)(−13)+(21)(8)+(35)(−6)+(120)(1) 196=(21)(10)+(70)(3)+(105 )(−4) 210=(15)(10)+(20)(3)+(70)(3)+(105)(−4) 210 =(1)(24)+(6)(17)+(21)(10)+(56)(3)+(126)(−4) 224=(15)(2)+(20)(9)+(84)(−5)+(105)(2) 378=(6)(17)+(15)(10)+(21)(10)+(56)(3)+(70)(3)+(210 )(−4) 392=(35)(0)+(84)(7)+(84)(−7)+(189)(0) 462=(1)(30)+(6)(23)+(21)(16)+(56)(9)+(126)(2)+(252)(−5) 490=(70)(9)+(105)(2)+(105 )(2)+(210)(−5) 490 =(105 )(8)+(175)(−6)+(210)(1) 540=(6)(−7)+(15)(−14)+(35)(0)+(84)(−7)+(120)(7)+(280)(0) SU(7)→SU(5)×SU(2)×U(1) 7=(1,2)(−5)+(5,1)(2) 21=(1,1)(−10)+(5,2)(−3)+(10,1)(4) 28=(1,3)(−10)+(5,2)(−3)+(15,1)(4) 35=(5,1)(−8)+(10,1)(6)+(10,2)(−1) 48=(1,1)(0)+(1,3)(0)+(5,2)(7)+(5,2)(−7)+(24,1)(0) 84=(1,4)(−15)+(5,3)(−8)+(15,2)(−1)+(35,1)(6) 112=(1,2)(−15)+(5,1)(−8)+(5,3)(−8)+(10,2)(−1)+(15,2)(−1)+(40,1)(6) 140=(1,2)(−5)+(5,1)(2)+(5,1)(−12)+(5,3)(2)+(10,2)(9)+(24,2)(−5)+(45,1)(2) 189=(1,2)(−5)+(1,4)(−5)+(5,1)(2)+(5,3)(2)+(5,3)(−12)+(15,2)(9)+(24,2)(−5)+(70,1)(2) 196=(1,1)(20)+(5,2)(13)+(10,1)(6)+(15,3)(6)+(40,2)(−1)+(50,1)(−8) 210=(5,2)(13)+(10,1)(6)+(10,2)(−1)+(10,3)(6)+(15,1)(6)+(40,2)(−1)+(45,1)(−8) 210 =(1,5)(20)+(5,4)(13)+(15,3)(6)+(35,2)(−1)+(70 ,1)(−8) 224=(5,2)(−3)+(10,1)(4)+(10,2)(11)+(10,3)(4)+(24,1)(−10)+(40,1)(4)+(45,2)(−3) 378=(1,3)(20)+(5,2)(13)+(5,4)(13)+(10,3)(6)+(15,1)(6)+(15,3)(6)+(35,2)(−1)+(40,2)(−1)+ (105,1)(−8) 392=(1,1)(0)+(5,2)(7)+(5,2)(−7)+(10,1)(14)+(10,1)(−14)+(24,1)(0)+(24,3)(0)+(45,2)(7)+ (45,2)(−7)+(75,1)(0) 462=(1,6)(25)+(5,5)(18)+(15,4)(11)+(35,3)(4)+(70 ,2)(−3)+(126 ,1)(−10) 490=(5,1)(18)+(10,1)(4)+(10,2)(11)+(15,2)(11)+(40,1)(4)+(40,3)(4)+(45,2)(−3)+ (50,2)(−3)+(75,1)(−10) 490 =(15,1)(16)+(40,2)(9)+(45,1)(2)+(50,1)(−12)+(50,3)(2)+(75,2)(−5) 540=(1,3)(0)+(5,2)(7)+(5,2)(−7)+(5,4)(−7)+(10,3)(−14)+(15,1)(14)+(24,1)(0)+(24,3)(0)+ (45,2)(−7)+(70,2)(7)+(126,1)(0) TableA.73:SU(7)BranchingRules(continued) SU(7)→SU(4)×SU(3)×U(1) 7=(1,3)(−4)+(4,1)(3) 21=(1,3)(−8)+(4,3)(−1)+(6,1)(6) 28=(4,3)(−1)+(1,6)(−8)+(10,1)(6) 35=(1,1)(−12)+(4,1)(9)+(4,3)(−5)+(6,3)(2) 48=(1,1)(0)+(4,3)(7)+(4,3)(−7)+(1,8)(0)+(15,1)(0) 84=(4,6)(−5)+(1,10)(−12)+(10,3)(2)+(20 ,1)(9) 112=(4,3)(−5)+(6,3)(2)+(1,8)(−12)+(4,6)(−5)+(10,3)(2)+(20,1)(9) 140=(1,3)(−4)+(4,1)(3)+(4,3)(−11)+(1,6)(−4)+(6,3)(10)+(4,8)(3)+(15,3)(−4)+(20,1)(3) 189=(1,3)(−4)+(4,1)(3)+(4,6)(−11)+(4,8)(3)+(10,3)(10)+(1,15)(−4)+(15,3)(−4)+(36,1)(3) 196=(1,6)(16)+(6,3)(2)+(4,8)(9)+(10,6)(2)+(20 ,1)(−12)+(20,3)(−5) 210=(1,3)(16)+(4,1)(9)+(4,3)(−5)+(6,3)(2)+(6,6)(2)+(4,8)(9)+(10,3)(2)+(15,1)(−12)+ (20,3)(−5) 210 =(4,10)(9)+(10,6)(2)+(1,15 )(16)+(20 ,3)(−5)+(35,1)(−12) 224=(1,3)(−8)+(4,1)(−15)+(4,3)(−1)+(6,1)(6)+(4,3)(13)+(4,6)(−1)+(10,1)(6)+(6,8)(6)+ (15,3)(−8)+(20,3)(−1) 378=(6,6)(2)+(4,8)(9)+(10,3)(2)+(4,10)(9)+(10,6)(2)+(1,15)(16)+(20,3)(−5)+(20 ,3)(−5)+ (45,1)(−12) 392=(1,1)(0)+(4,3)(7)+(4,3)(−7)+(6,3)(14)+(6,3)(−14)+(1,8)(0)+(4,6)(7)+(4,6)(−7)+ (15,1)(0)+(20 ,1)(0)+(15,8)(0)+(20,3)(7)+(20,3)(−7) 462=(4,15 )(13)+(10,10)(6)+(1,21)(20)+(20 ,6)(−1)+(35,3)(−8)+(56,1)(−15) 490=(1,3)(20)+(4,3)(−1)+(6,1)(6)+(4,3)(13)+(4,6)(13)+(6,8)(6)+(15,3)(−8)+(10,8)(6)+ (20,1)(−15)+(20,3)(−1)+(20 ,3)(−8)+(20,6)(−1) 490 =(1,1)(24)+(4,1)(3)+(4,3)(17)+(6,3)(10)+(10,1)(−18)+(10,6)(10)+(15,3)(−4)+ (20,3)(−11)+(20 ,6)(−4)+(20,8)(3) 540=(4,3)(7)+(4,3)(−7)+(1,8)(0)+(4,6)(7)+(1,10)(0)+(6,6)(−14)+(10,3)(14)+(15,1)(0)+ (4,15)(−7)+(15,8)(0)+(20,3)(−7)+(36,3)(7)+(45,1)(0) TableA.74:SU(8)BranchingRules SU(8)→SU(7)×U(1) 8=(1)(−7)+(7)(1) 28=(7)(−6)+(21)(2) 36=(1)(−14)+(7)(−6)+(28)(2) 56=(21)(−5)+(35)(3) 63=(1)(0)+(7)(8)+(7)(−8)+(48)(0) 70=(35)(−4)+(35)(4) 120=(1)(−21)+(7)(−13)+(28)(−5)+(84)(3) 168=(7)(−13)+(21)(−5)+(28)(−5)+(112)(3) 216=(7)(1)+(21)(9)+(48)(−7)+(140)(1) 280=(1)(−7)+(7)(1)+(7)(−15)+(28)(9)+(48)(−7)+(189)(1) 330=(1)(−28)+(7)(−20)+(28)(−12)+(84)(−4)+(210 )(4) 336=(28)(−12)+(112)(−4)+(196)(4) 378=(21)(−12)+(35)(−4)+(112)(−4)+(210)(4) 420=(21)(2)+(35)(10)+(140)(−6)+(224)(2) 504=(35)(3)+(35)(11)+(210)(3)+(224)(−5) 630=(7)(−20)+(21)(−12)+(28)(−12)+(84)(−4)+(112)(−4)+(378)(4) 720=(48)(0)+(140)(8)+(140)(−8)+(392)(0) SU(8)→SU(6)×SU(2)×U(1) 8=(1,2)(−3)+(6,1)(1) 28=(1,1)(−6)+(6,2)(−2)+(15,1)(2) 36=(1,3)(−6)+(6,2)(−2)+(21,1)(2) 56=(6,1)(−5)+(15,2)(−1)+(20,1)(3) 63=(1,1)(0)+(1,3)(0)+(6,2)(4)+(6,2)(−4)+(35,1)(0) 70=(15,1)(−4)+(15,1)(4)+(20,2)(0) 120=(1,4)(−9)+(6,3)(−5)+(21,2)(−1)+(56,1)(3) 168=(1,2)(−9)+(6,1)(−5)+(6,3)(−5)+(15,2)(−1)+(21,2)(−1)+(70,1)(3) 216=(1,2)(−3)+(6,1)(1)+(6,1)(−7)+(6,3)(1)+(15,2)(5)+(35,2)(−3)+(84,1)(1) 280=(1,2)(−3)+(1,4)(−3)+(6,1)(1)+(6,3)(1)+(6,3)(−7)+(21,2)(5)+(35,2)(−3)+(120,1)(1) 330=(1,5)(−12)+(6,4)(−8)+(21,3)(−4)+(56,2)(0)+(126,1)(4) 336=(1,1)(−12)+(6,2)(−8)+(15,1)(−4)+(21,3)(−4)+(70,2)(0)+(105 ,1)(4) 378=(6,2)(−8)+(15,1)(−4)+(15,3)(−4)+(20,2)(0)+(21,1)(−4)+(70,2)(0)+(105,1)(4) 420=(6,2)(−2)+(15,1)(2)+(15,3)(2)+(20,2)(6)+(35,1)(−6)+(84,2)(−2)+(105,1)(2) 504=(15,2)(−1)+(15,2)(7)+(20,1)(3)+(20,3)(3)+(70,1)(3)+(84,1)(−5)+(105,2)(−1) 630=(1,3)(−12)+(6,2)(−8)+(6,4)(−8)+(15,3)(−4)+(21,1)(−4)+(21,3)(−4)+(56,2)(0)+ (70,2)(0)+(210 ,1)(4) 720=(1,1)(0)+(6,2)(4)+(6,2)(−4)+(15,1)(8)+(15,1)(−8)+(35,1)(0)+(35,3)(0)+(84,2)(4)+ (84,2)(−4)+(189,1)(0) TableA.74:SU(8)BranchingRules(continued) SU(8)→SU(5)×SU(3)×U(1) 8=(1,3)(−5)+(5,1)(3) 28=(1,3)(−10)+(5,3)(−2)+(10,1)(6) 36=(1,6)(−10)+(5,3)(−2)+(15,1)(6) 56=(1,1)(−15)+(5,3)(−7)+(10,1)(9)+(10,3)(1) 63=(1,1)(0)+(5,3)(8)+(5,3)(−8)+(1,8)(0)+(24,1)(0) 70=(5,1)(−12)+(5,1)(12)+(10,3)(−4)+(10,3)(4) 120=(5,6)(−7)+(1,10)(−15)+(15,3)(1)+(35,1)(9) 168=(5,3)(−7)+(1,8)(−15)+(5,6)(−7)+(10,3)(1)+(15,3)(1)+(40,1)(9) 216=(1,3)(−5)+(5,1)(3)+(1,6)(−5)+(5,3)(−13)+(10,3)(11)+(5,8)(3)+(24,3)(−5)+(45,1)(3) 280=(1,3)(−5)+(5,1)(3)+(5,6)(−13)+(5,8)(3)+(1,15)(−5)+(15,3)(11)+(24,3)(−5)+(70,1)(3) 330=(5,10)(−12)+(1,15 )(−20)+(15,6)(−4)+(35,3)(4)+(70 ,1)(12) 336=(1,6)(−20)+(10,3)(−4)+(5,8)(−12)+(15,6)(−4)+(40,3)(4)+(50,1)(12) 378=(1,3)(−20)+(5,1)(−12)+(10,3)(−4)+(10,3)(4)+(5,8)(−12)+(10,6)(−4)+(15,3)(−4)+ (40,3)(4)+(45,1)(12) 420=(1,3)(−10)+(5,1)(−18)+(5,3)(−2)+(10,1)(6)+(5,6)(−2)+(10,3)(14)+(10,8)(6)+ (24,3)(−10)+(40,1)(6)+(45,3)(−2) 504=(5,3)(−7)+(5,3)(17)+(10,1)(9)+(10,3)(1)+(15,1)(9)+(10,6)(1)+(10,8)(9)+(24,1)(−15)+ (40,3)(1)+(45,3)(−7) 630=(5,8)(−12)+(5,10)(−12)+(10,6)(−4)+(1,15)(−20)+(15,3)(−4)+(15,6)(−4)+(35,3)(4)+ (40,3)(4)+(105,1)(12) 720=(1,1)(0)+(5,3)(8)+(5,3)(−8)+(1,8)(0)+(5,6)(8)+(5,6)(−8)+(10,3)(16)+(10,3)(−16)+ (24,1)(0)+(24,8)(0)+(45,3)(8)+(45,3)(−8)+(75,1)(0) SU(8)→SU(4)×SU(4)×U(1) 8=(4,1)(1)+(1,4)(−1) 28=(6,1)(2)+(1,6)(−2)+(4,4)(0) 36=(4,4)(0)+(10,1)(2)+(1,10)(−2) 56=(4,1)(3)+(1,4)(−3)+(4,6)(−1)+(6,4)(1) 63=(1,1)(0)+(4,4)(2)+(4,4)(−2)+(15,1)(0)+(1,15)(0) 70=(1,1)(4)+(1,1)(−4)+(4,4)(−2)+(4,4)(2)+(6,6)(0) 120=(10,4)(1)+(4,10)(−1)+(20 ,1)(3)+(1,20 )(−3) 168=(4,6)(−1)+(6,4)(1)+(10,4)(1)+(4,10)(−1)+(20,1)(3)+(1,20)(−3) 216=(4,1)(1)+(1,4)(−1)+(6,4)(3)+(4,6)(−3)+(15,4)(−1)+(4,15)(1)+(20,1)(1)+(1,20)(−1) 280=(4,1)(1)+(1,4)(−1)+(10,4)(3)+(4,10)(−3)+(15,4)(−1)+(4,15)(1)+(36,1)(1)+(1,36)(−1) 330=(10,10)(0)+(20 ,4)(2)+(4,20 )(−2)+(35,1)(4)+(1,35)(−4) 336=(6,6)(0)+(10,10)(0)+(20 ,1)(4)+(1,20 )(−4)+(20,4)(2)+(4,20)(−2) 378=(4,4)(−2)+(4,4)(2)+(6,6)(0)+(15,1)(4)+(1,15)(−4)+(10,6)(0)+(6,10)(0)+(20,4)(2)+ (4,20)(−2) 420=(6,1)(2)+(1,6)(−2)+(4,4)(0)+(4,4)(4)+(4,4)(−4)+(10,1)(2)+(1,10)(−2)+(15,6)(−2)+ (6,15)(2)+(4,20)(0)+(20,4)(0) 504=(4,1)(3)+(4,1)(−5)+(1,4)(5)+(1,4)(−3)+(4,6)(−1)+(6,4)(1)+(4,10)(−1)+(10,4)(1)+ (15,4)(−3)+(4,15)(3)+(20,6)(−1)+(6,20)(1) 630=(10,6)(0)+(6,10)(0)+(10,10)(0)+(20,4)(2)+(4,20)(−2)+(20 ,4)(2)+(4,20 )(−2)+ (45,1)(4)+(1,45)(−4) 720=(1,1)(0)+(4,4)(2)+(4,4)(−2)+(6,6)(4)+(6,6)(−4)+(15,1)(0)+(1,15)(0)+(20 ,1)(0)+ (1,20 )(0)+(20,4)(−2)+(4,20)(2)+(20,4)(2)+(4,20)(−2)+(15,15)(0) TableA.75:SU(9)BranchingRules(continued) SU(9)→SU(6)×SU(3)×U(1) 9=(1,3)(−2)+(6,1)(1) 36=(1,3)(−4)+(6,3)(−1)+(15,1)(2) 45=(1,6)(−4)+(6,3)(−1)+(21,1)(2) 80=(1,1)(0)+(6,3)(3)+(6,3)(−3)+(1,8)(0)+(35,1)(0) 84=(1,1)(−6)+(6,3)(−3)+(15,3)(0)+(20,1)(3) 126=(6,1)(−5)+(15,1)(4)+(15,3)(−2)+(20,3)(1) 165=(1,10)(−6)+(6,6)(−3)+(21,3)(0)+(56,1)(3) 240=(6,3)(−3)+(1,8)(−6)+(6,6)(−3)+(15,3)(0)+(21,3)(0)+(70,1)(3) 315=(1,3)(−2)+(6,1)(1)+(1,6)(−2)+(6,3)(−5)+(6,8)(1)+(15,3)(4)+(35,3)(−2)+(84,1)(1) 396=(1,3)(−2)+(6,1)(1)+(6,6)(−5)+(6,8)(1)+(1,15)(−2)+(21,3)(4)+(35,3)(−2)+(120,1)(1) 495=(6,10)(−5)+(1,15 )(−8)+(21,6)(−2)+(56,3)(1)+(126,1)(4) 540=(1,6)(−8)+(6,8)(−5)+(15,3)(−2)+(21,6)(−2)+(70,3)(1)+(105 ,1)(4) 630=(1,3)(−8)+(6,1)(−5)+(6,8)(−5)+(15,3)(−2)+(15,6)(−2)+(20,3)(1)+(21,3)(−2)+ (70,3)(1)+(105,1)(4) 720=(1,3)(−4)+(6,1)(−7)+(6,3)(−1)+(6,6)(−1)+(15,1)(2)+(20,3)(5)+(15,8)(2)+ (35,3)(−4)+(84,3)(−1)+(105,1)(2) 990=(6,8)(−5)+(6,10)(−5)+(1,15)(−8)+(15,6)(−2)+(21,3)(−2)+(21,6)(−2)+(56,3)(1)+ (70,3)(1)+(210 ,1)(4) 1008=(6,3)(7)+(15,1)(4)+(15,3)(−2)+(21,1)(4)+(20,3)(1)+(15,8)(4)+(20,6)(1)+(70,3)(1)+ (84,1)(−5)+(105,3)(−2) SU(9)→SU(5)×SU(4)×U(1) 9=(1,4)(−5)+(5,1)(4) 36=(1,6)(−10)+(5,4)(−1)+(10,1)(8) 45=(5,4)(−1)+(1,10)(−10)+(15,1)(8) 80=(1,1)(0)+(5,4)(9)+(5,4)(−9)+(1,15)(0)+(24,1)(0) 84=(1,4)(−15)+(5,6)(−6)+(10,1)(12)+(10,4)(3) 126=(1,1)(−20)+(5,1)(16)+(5,4)(−11)+(10,4)(7)+(10,6)(−2) 165=(5,10)(−6)+(15,4)(3)+(1,20 )(−15)+(35,1)(12) 240=(5,6)(−6)+(10,4)(3)+(5,10)(−6)+(15,4)(3)+(1,20)(−15)+(40,1)(12) 315=(1,4)(−5)+(5,1)(4)+(5,6)(−14)+(10,4)(13)+(5,15)(4)+(1,20)(−5)+(24,4)(−5)+ (45,1)(4) 396=(1,4)(−5)+(5,1)(4)+(5,10)(−14)+(15,4)(13)+(5,15)(4)+(24,4)(−5)+(1,36)(−5)+ (70,1)(4) 495=(15,10)(−2)+(5,20 )(−11)+(1,35)(−20)+(35,4)(7)+(70 ,1)(16) 540=(10,6)(−2)+(1,20 )(−20)+(15,10)(−2)+(5,20)(−11)+(40,4)(7)+(50,1)(16) 630=(5,4)(−11)+(10,4)(7)+(10,6)(−2)+(1,15)(−20)+(10,10)(−2)+(15,6)(−2)+(5,20)(−11)+ (40,4)(7)+(45,1)(16) 720=(1,6)(−10)+(5,4)(−1)+(5,4)(−19)+(10,1)(8)+(1,10)(−10)+(10,4)(17)+(10,15)(8)+ (5,20)(−1)+(24,6)(−10)+(40,1)(8)+(45,4)(−1) 990=(10,10)(−2)+(15,6)(−2)+(15,10)(−2)+(5,20)(−11)+(5,20 )(−11)+(35,4)(7)+(40,4)(7)+ (1,45)(−20)+(105,1)(16) 1008=(1,4)(25)+(5,1)(16)+(5,4)(−11)+(10,4)(7)+(10,6)(−2)+(15,4)(7)+(10,10)(−2)+ (5,15)(16)+(24,1)(−20)+(10,20)(7)+(40,6)(−2)+(45,4)(−11) TableA.76:SU(10)BranchingRules SU(10)→SU(9)×U(1) 10=(1)(−9)+(9)(1) 45=(9)(−8)+(36)(2) 55=(1)(−18)+(9)(−8)+(45)(2) 99=(1)(0)+(9)(10)+(9)(−10)+(80)(0) 120=(36)(−7)+(84)(3) 210=(84)(−6)+(126)(4) 220=(1)(−27)+(9)(−17)+(45)(−7)+(165)(3) 252=(126)(−5)+(126)(5) 330=(9)(−17)+(36)(−7)+(45)(−7)+(240)(3) 440=(9)(1)+(36)(11)+(80)(−9)+(315)(1) 540=(1)(−9)+(9)(1)+(9)(−19)+(45)(11)+(80)(−9)+(396)(1) 715=(1)(−36)+(9)(−26)+(45)(−16)+(165)(−6)+(495)(4) 825=(45)(−16)+(240)(−6)+(540)(4) SU(10)→SU(8)×SU(2)×U(1) 10=(1,2)(−4)+(8,1)(1) 45=(1,1)(−8)+(8,2)(−3)+(28,1)(2) 55=(1,3)(−8)+(8,2)(−3)+(36,1)(2) 99=(1,1)(0)+(1,3)(0)+(8,2)(5)+(8,2)(−5)+(63,1)(0) 120=(8,1)(−7)+(28,2)(−2)+(56,1)(3) 210=(28,1)(−6)+(56,2)(−1)+(70,1)(4) 220=(1,4)(−12)+(8,3)(−7)+(36,2)(−2)+(120,1)(3) 252=(56,1)(−5)+(56,1)(5)+(70,2)(0) 330=(1,2)(−12)+(8,1)(−7)+(8,3)(−7)+(28,2)(−2)+(36,2)(−2)+(168,1)(3) 440=(1,2)(−4)+(8,1)(1)+(8,1)(−9)+(8,3)(1)+(28,2)(6)+(63,2)(−4)+(216,1)(1) 540=(1,2)(−4)+(1,4)(−4)+(8,1)(1)+(8,3)(1)+(8,3)(−9)+(36,2)(6)+(63,2)(−4)+(280,1)(1) 715=(1,5)(−16)+(8,4)(−11)+(36,3)(−6)+(120,2)(−1)+(330,1)(4) 825=(1,1)(−16)+(8,2)(−11)+(28,1)(−6)+(36,3)(−6)+(168,2)(−1)+(336,1)(4) SU(10)→SU(7)×SU(3)×U(1) 10=(1,3)(−7)+(7,1)(3) 45=(1,3)(−14)+(7,3)(−4)+(21,1)(6) 55=(1,6)(−14)+(7,3)(−4)+(28,1)(6) 99=(1,1)(0)+(1,8)(0)+(7,3)(10)+(7,3)(−10)+(48,1)(0) 120=(1,1)(−21)+(7,3)(−11)+(21,3)(−1)+(35,1)(9) 210=(7,1)(−18)+(21,3)(−8)+(35,1)(12)+(35,3)(2) 220=(1,10)(−21)+(7,6)(−11)+(28,3)(−1)+(84,1)(9) 252=(21,1)(−15)+(21,1)(15)+(35,3)(−5)+(35,3)(5) 330=(1,8)(−21)+(7,3)(−11)+(7,6)(−11)+(21,3)(−1)+(28,3)(−1)+(112,1)(9) 440=(1,3)(−7)+(1,6)(−7)+(7,1)(3)+(7,3)(−17)+(7,8)(3)+(21,3)(13)+(48,3)(−7)+(140,1)(3) 540=(1,3)(−7)+(7,1)(3)+(7,6)(−17)+(7,8)(3)+(1,15)(−7)+(28,3)(13)+(48,3)(−7)+ (189,1)(3) 715=(1,15 )(−28)+(7,10)(−18)+(28,6)(−8)+(84,3)(2)+(210 ,1)(12) 825=(1,6)(−28)+(7,8)(−18)+(21,3)(−8)+(28,6)(−8)+(112,3)(2)+(196,1)(12) TableA.76:SU(10)BranchingRules(continued) SU(10)→SU(6)×SU(4)×U(1) 10=(1,4)(−3)+(6,1)(2) 45=(1,6)(−6)+(6,4)(−1)+(15,1)(4) 55=(6,4)(−1)+(1,10)(−6)+(21,1)(4) 99=(1,1)(0)+(6,4)(5)+(6,4)(−5)+(1,15)(0)+(35,1)(0) 120=(1,4)(−9)+(6,6)(−4)+(15,4)(1)+(20,1)(6) 210=(1,1)(−12)+(6,4)(−7)+(15,1)(8)+(15,6)(−2)+(20,4)(3) 220=(6,10)(−4)+(1,20 )(−9)+(21,4)(1)+(56,1)(6) 252=(6,1)(−10)+(6,1)(10)+(15,4)(−5)+(15,4)(5)+(20,6)(0) 330=(6,6)(−4)+(6,10)(−4)+(15,4)(1)+(1,20)(−9)+(21,4)(1)+(70,1)(6) 440=(1,4)(−3)+(6,1)(2)+(6,6)(−8)+(15,4)(7)+(6,15)(2)+(1,20)(−3)+(35,4)(−3)+(84,1)(2) 540=(1,4)(−3)+(6,1)(2)+(6,10)(−8)+(6,15)(2)+(21,4)(7)+(1,36)(−3)+(35,4)(−3)+ (120,1)(2) 715=(6,20 )(−7)+(21,10)(−2)+(1,35)(−12)+(56,4)(3)+(126,1)(8) 825=(15,6)(−2)+(1,20 )(−12)+(6,20)(−7)+(21,10)(−2)+(70,4)(3)+(105 ,1)(8) SU(10)→SU(5)×SU(5)×U(1) 10=(5,1)(1)+(1,5)(−1) 45=(5,5)(0)+(10,1)(2)+(1,10)(−2) 55=(5,5)(0)+(15,1)(2)+(1,15)(−2) 99=(1,1)(0)+(5,5)(2)+(5,5)(−2)+(24,1)(0)+(1,24)(0) 120=(10,1)(3)+(1,10)(−3)+(5,10)(−1)+(10,5)(1) 210=(5,1)(4)+(1,5)(−4)+(5,10)(−2)+(10,5)(2)+(10,10)(0) 220=(15,5)(1)+(5,15)(−1)+(35,1)(3)+(1,35)(−3) 252=(1,1)(5)+(1,1)(−5)+(5,5)(−3)+(5,5)(3)+(10,10)(−1)+(10,10)(1) 330=(5,10)(−1)+(10,5)(1)+(15,5)(1)+(5,15)(−1)+(40,1)(3)+(1,40)(−3) 440=(5,1)(1)+(1,5)(−1)+(10,5)(3)+(5,10)(−3)+(24,5)(−1)+(5,24)(1)+(45,1)(1)+(1,45)(−1) 540=(5,1)(1)+(1,5)(−1)+(15,5)(3)+(5,15)(−3)+(24,5)(−1)+(5,24)(1)+(70,1)(1)+(1,70)(−1) 715=(15,15)(0)+(35,5)(2)+(5,35)(−2)+(70 ,1)(4)+(1,70 )(−4) 825=(10,10)(0)+(15,15)(0)+(40,5)(2)+(5,40)(−2)+(50,1)(4)+(1,50)(−4) A.3.2.SO(N) TableA.79:SO(7)BranchingRules SO(7)→SU(4) 7=1+6 8=4+4 21=6+15 27=1+6+20 35=10+10+15 48=4+4+20+20 77=1+6+20 +50 105=6+15+20 +64 112=20+20+36+36 112 =20 +20 +36+36 168=4+4+20+20+60+60 168 =20 +64+84 182=1+6+20 +50+105 189=10+10+15+45+45+64 294=35+35+70+70+84 330=6+15+20 +50+64+175 378=45+45+64+70+70+84 378 =1+6+20 +50+105+196 448=4+4+20+20+60+60+140 +140 512=20+20+36+36+60+60+140+140 560=20 +20 +36+36+84 +84 +140+140 616=10+10+15+45+45+64+126+126+175 672=56+56+120+120+160+160 693=20 +50+64+84+175+300 714=1+6+20 +50+105+196+336 720=60+60+140+140+160+160 819=6+15+20 +50+64+105+175+384 825=50+175+300+300 1008=84 +84 +120+120+140+140+160+160 1008 =4+4+20+20+60+60+140 +140 +280 +280 1254=1+6+20 +50+105+196+336+540 1386=35+35+70+70+84+140 +140 +256+256+300 1386 =84 +84 +189+189+270+270+300 1512=20+20+36+36+60+60+140+140+140 +140 +360+360 1560=10+10+15+45+45+64+126+126+175+280+280+384 1617=45+45+64+70+70+84+126+126+175+256+256+300 1728=20 +20 +36+36+84 +84 +140+140+224+224+360+360 1750=6+15+20 +50+64+105+175+196+384+735 1911=20 +50+64+84+105+175+300+384+729 2016=4+4+20+20+60+60+140 +140 +280 +280 +504+504 2079=126+126+175+256+256+270+270+300+300 2079 =1+6+20 +50+105+196+336+540 +825 2310=140 +140 +189+189+256+256+270+270+300+300 TableA.80:SO(8)BranchingRules SO(8)→SO(7) 8s=1+7 8v=8 8c=8 28=7+21 35v=35 35c=35 35s=1+7+27 56s=21+35 56v=8+48 56c=8+48 112s=1+7+27+77 112v=112 112c=112 160s=7+21+27+105 160v=48+112 160c=48+112 224vs=35+189 224cs=35+189 224cv=112+112 224sv=8+48+168 224vc=112+112 224sc=8+48+168 294v=294 294c=294 294s=1+7+27+77+182 300=27+105+168 350=21+35+105+189 567v=189+378 567c=189+378 567s=7+21+27+77+105+330 672vc=294+378 672cv=294+378 672cs=112 +560 672sc=8+48+168+448 672vs=112 +560 672sv=8+48+168+448 672 s=1+7+27+77+182+378 672 v=672 672 c=672 840s=105+168 +189+378 840v=48+112+168+512 840c=48+112+168+512 840 s=168 +294+378 840 c=35+189+616 840 v=35+189+616 vc=1386 +2310 3696 cv=1386 +2310 3696 cs=672+3024 3696 sc=8+48+168+448+1008 +2016 3696 vs=672+3024 3696 sv=8+48+168+448+1008 +2016 TableA.81:SO(9)BranchingRules SO(9)→SO(8) 9=1+8v 16=8s+8c 36=8v+28 44=1+8v+35v 84=28+56v 126=35c+35s+56v 128=8s+8c+56c+56s 156=1+8v+35v+112v 231=8v+28+35v+160v 432=56c+56s+160s+160c 450=1+8v+35v+112v+294v 495=35v+160v+300 576=8s+8c+56c+56s+224vs+224vc 594=28+56v+160v+350 672=112s+112c+224sc+224cs 768=160s+160c+224sc+224cs 910=8v+28+35v+112v+160v+567v 924=35c+35s+56v+224cv+224sv+350 1122=1+8v+35v+112v+294v+672 v 1650=160v+300+350+840v 1920=8s+8c+56c+56s+224vs+224vc+672vs+672vc 1980=300+840v+840 v 2457=28+56v+160v+350+567v+1296v 2508=1+8v+35v+112v+294v+672 v+1386v 2560=56c+56s+160s+160c+224vs+224vc+840c+840s 2574=35v+112v+160v+300+567v+1400v 2772=224cv+224sv+350+567c+567s+840v 2772 =294c+294s+672cs+672sc+840 v 2772 =8v+28+35v+112v+160v+294v+567v+1568v 3900=35c+35s+56v+224cv+224sv+350+840 s+840 c+1296v 4004=112v+567v+1400v+1925 4158=567c+567s+672cs+672sc+840v+840 v 4608=112s+112c+224sc+224cs+672sv+672cv+1296s+1296c SO(9)→SU(4)×SU(2) 9=(1,3)+(6,1) 16=(4,2)+(4,2) 36=(1,3)+(6,3)+(15,1) 44=(1,1)+(1,5)+(6,3)+(20 ,1) 84=(1,1)+(6,3)+(10,1)+(10,1)+(15,3) 126=(6,1)+(10,3)+(10,3)+(15,1)+(15,3) 128=(4,2)+(4,2)+(4,4)+(4,4)+(20,2)+(20,2) 156=(1,3)+(6,1)+(1,7)+(6,5)+(20 ,3)+(50,1) 231=(1,3)+(1,5)+(6,1)+(6,3)+(6,5)+(15,3)+(20 ,3)+(64,1) 432=(4,2)+(4,2)+(4,4)+(4,4)+(20,2)+(20,2)+(20,4)+(20,4)+(36,2)+(36,2) TableA.81:SO(9)BranchingRules(continued) 450=(1,1)+(1,5)+(6,3)+(1,9)+(6,7)+(20 ,1)+(20 ,5)+(50,3)+(105,1) 495=(1,1)+(1,5)+(6,3)+(6,5)+(15,3)+(20 ,1)+(20 ,5)+(64,3)+(84,1) 576=(4,2)+(4,2)+(4,4)+(4,4)+(4,6)+(4,6)+(20,2)+(20,2)+(20,4)+(20,4)+(60,2)+(60,2) 594=(1,3)+(6,1)+(6,3)+(6,5)+(10,3)+(10,3)+(15,1)+(15,3)+(15,5)+(20 ,3)+(45,1)+ (45,1)+(64,3) 672=(20,2)+(20,2)+(20 ,4)+(20 ,4)+(36,2)+(36,2)+(36,4)+(36,4) 768=(4,2)+(4,2)+(20,2)+(20,2)+(20 ,2)+(20 ,2)+(20,4)+(20,4)+(36,2)+(36,2)+ (36,4)+(36,4) 910=(1,3)+(1,5)+(1,7)+2(6,3)+(6,5)+(6,7)+(15,1)+(15,5)+(20 ,1)+(20 ,3)+(20 ,5)+ (50,3)+(64,3)+(175,1) 924=(6,3)+(10,1)+(10,1)+(10,3)+(10,3)+(10,5)+(10,5)+(15,1)+2(15,3)+(15,5)+ (20 ,1)+(45,3)+(45,3)+(64,1)+(64,3) 1122=(1,3)+(6,1)+(1,7)+(6,5)+(1,11)+(6,9)+(20 ,3)+(20 ,7)+(50,1)+(50,5)+(105,3)+ (196,1) 1650=(1,3)+(6,1)+(6,3)+(6,5)+(10,3)+(10,3)+(15,1)+(15,3)+(15,5)+(20 ,3)+(20 ,5)+ (45,3)+(45,3)+(64,1)+(64,3)+(64,5)+(70,1)+(70,1)+(84,3) 1920=(4,2)+(4,2)+(4,4)+(4,4)+(4,6)+(4,6)+(4,8)+(4,8)+(20,2)+(20,2)+(20,4)+ (20,4)+(20,6)+(20,6)+(60,2)+(60,2)+(60,4)+(60,4)+(140 ,2)+(140 ,2) 1980=(1,1)+(6,3)+(10,1)+(10,1)+(15,3)+(20 ,1)+(20 ,5)+(35,1)+(35,1)+(45,3)+ (45,3)+(64,3)+(64,5)+(70,3)+(70,3)+(84,1)+(84,5) 2457=(1,1)+(1,5)+2(6,3)+(10,1)+(10,1)+(6,5)+(6,7)+(10,5)+(10,5)+2(15,3)+(15,5)+ (20 ,1)+(15,7)+(20 ,3)+(20 ,5)+(45,3)+(45,3)+(50,3)+(64,1)+(64,3)+(64,5)+ (126,1)+(126,1)+(175,3) 2508=(1,1)+(1,5)+(6,3)+(1,9)+(6,7)+(1,13)+(6,11)+(20 ,1)+(20 ,5)+(20 ,9)+(50,3)+ (50,7)+(105,1)+(105,5)+(196,3)+(336,1) 2560=(4,2)+(4,2)+2(4,4)+2(4,4)+(4,6)+(4,6)+2(20,2)+2(20,2)+2(20,4)+2(20,4)+ (20,6)+(20,6)+(36,2)+(36,2)+(36,4)+(36,4)+(60,2)+(60,2)+(60,4)+(60,4)+ (140,2)+(140,2) 2574=(1,3)+(1,5)+(6,1)+(1,7)+(6,3)+2(6,5)+(6,7)+(15,3)+(15,5)+2(20 ,3)+(20 ,5)+ (20 ,7)+(50,1)+(50,5)+(64,1)+(64,3)+(64,5)+(84,3)+(175,3)+(300,1) 2772=(6,3)+(10,1)+(10,1)+(10,3)+(10,3)+(10,5)+(10,5)+(15,1)+2(15,3)+(15,5)+ (20 ,3)+(45,1)+(45,1)+(45,3)+(45,3)+(45,5)+(45,5)+(64,1)+2(64,3)+(64,5)+ (70,3)+(70,3)+(84,1)+(84,3) 2772 =(20 ,1)+(35,5)+(35,5)+(45,3)+(45,3)+(64,1)+(64,3)+(70,3)+(70,3)+(70,5)+ (70,5)+(84,1)+(84,3)+(84,5) 2772 =(1,3)+(1,5)+(6,1)+(1,7)+(6,3)+(1,9)+2(6,5)+(6,7)+(6,9)+(15,3)+(15,7)+2(20 ,3)+ (20 ,5)+(20 ,7)+(50,1)+(50,3)+(50,5)+(64,1)+(64,5)+(105,3)+(175,3)+(384,1) 3900=(6,1)+(6,5)+2(10,3)+2(10,3)+(10,5)+(10,5)+(15,1)+(10,7)+(10,7)+2(15,3)+ 2(15,5)+(15,7)+(20 ,3)+(45,1)+(45,1)+(45,3)+(45,3)+(45,5)+(45,5)+(50,1)+ (64,1)+2(64,3)+(64,5)+(126,3)+(126,3)+(175,1)+(175,3) 4004=(1,3)+(1,7)+(6,3)+(6,5)+(6,7)+(15,1)+(15,5)+(20 ,3)+(20 ,5)+(20 ,7)+(50,3)+ (50,7)+(64,3)+(64,5)+(84,3)+(175,1)+(175,5)+(300 ,1)+(300,3) 4158=(6,1)+(10,3)+(10,3)+(15,1)+(15,3)+(20 ,3)+(35,3)+(35,3)+(45,1)+(45,1)+ (45,3)+(45,3)+(45,5)+(45,5)+(64,1)+2(64,3)+(64,5)+(70,1)+(70,1)+(70,3)+ (70,3)+(70,5)+(70,5)+2(84,3)+(84,5) 4608=(20,2)+(20,2)+(20 ,2)+(20 ,2)+(20,4)+(20,4)+(20 ,4)+(20 ,4)+(20 ,6)+(20 ,6)+ 2(36,2)+2(36,2)+2(36,4)+2(36,4)+(36,6)+(36,6)+(60,2)+(60,2)+(84 ,4)+(84 ,4)+ (140,2)+(140,2)+(140,4)+(140,4) TableA.82:SO(10)BranchingRules(continued) SO(10)→SU(2)×SU(2)×SU(4) 10=(2,2,1)+(1,1,6) 16=(2,1,4)+(1,2,4) 45=(3,1,1)+(1,3,1)+(2,2,6)+(1,1,15) 54=(1,1,1)+(3,3,1)+(2,2,6)+(1,1,20 ) 120=(2,2,1)+(3,1,6)+(1,3,6)+(1,1,10)+(1,1,10)+(2,2,15) 126=(1,1,6)+(3,1,10)+(1,3,10)+(2,2,15) 144=(2,1,4)+(1,2,4)+(2,3,4)+(3,2,4)+(2,1,20)+(1,2,20) 210=(1,1,1)+(2,2,6)+(2,2,10)+(2,2,10)+(1,1,15)+(3,1,15)+(1,3,15) 210 =(2,2,1)+(1,1,6)+(4,4,1)+(3,3,6)+(2,2,20 )+(1,1,50) 320=(2,2,1)+(4,2,1)+(2,4,1)+(1,1,6)+(3,1,6)+(1,3,6)+(3,3,6)+(2,2,15)+(2,2,20 )+ (1,1,64) 560=(2,1,4)+(1,2,4)+(2,3,4)+(3,2,4)+(4,1,4)+(1,4,4)+(2,1,20)+(1,2,20)+(2,3,20)+ (3,2,20)+(2,1,36)+(1,2,36) 660=(1,1,1)+(3,3,1)+(2,2,6)+(5,5,1)+(4,4,6)+(1,1,20 )+(3,3,20 )+(2,2,50)+(1,1,105) 672=(2,1,20)+(1,2,20)+(4,1,20 )+(1,4,20 )+(2,3,36)+(3,2,36) 720=(2,1,4)+(1,2,4)+(2,3,4)+(3,2,4)+(4,3,4)+(3,4,4)+(2,1,20)+(1,2,20)+(2,3,20)+ (3,2,20)+(2,1,60)+(1,2,60) 770=(1,1,1)+(3,3,1)+(5,1,1)+(1,5,1)+(2,2,6)+(4,2,6)+(2,4,6)+(3,1,15)+(1,3,15)+ (1,1,20 )+(3,3,20 )+(2,2,64)+(1,1,84) 945=(3,1,1)+(1,3,1)+(3,3,1)+2(2,2,6)+(4,2,6)+(2,4,6)+(2,2,10)+(2,2,10)+(1,1,15)+ (3,1,15)+(1,3,15)+(3,3,15)+(3,1,20 )+(1,3,20 )+(1,1,45)+(1,1,45)+(2,2,64) 1050=(2,2,6)+(2,2,10)+(2,2,10)+(4,2,10)+(2,4,10)+(1,1,15)+(3,1,15)+(1,3,15)+ (3,3,15)+(1,1,20 )+(3,1,45)+(1,3,45)+(2,2,64) 1200=(2,1,4)+(1,2,4)+(2,3,4)+(3,2,4)+(2,1,20)+(1,2,20)+(2,1,20 )+(1,2,20 )+ (2,3,20)+(3,2,20)+(4,1,20)+(1,4,20)+(2,1,36)+(1,2,36)+(2,3,36)+(3,2,36) 1386=(3,1,1)+(1,3,1)+(3,3,1)+(5,3,1)+(3,5,1)+2(2,2,6)+(4,2,6)+(2,4,6)+(4,4,6)+ (1,1,15)+(3,3,15)+(1,1,20 )+(3,1,20 )+(1,3,20 )+(3,3,20 )+(2,2,50)+(2,2,64)+ (1,1,175) 1440=(2,1,4)+(1,2,4)+(2,1,20)+(1,2,20)+(2,3,20)+(3,2,20)+(2,3,20 )+(3,2,20 )+ (2,1,36)+(1,2,36)+(2,3,36)+(3,2,36)+(4,1,36)+(1,4,36) 1728=(2,2,1)+(1,1,6)+(3,1,6)+(1,3,6)+(1,1,10)+(1,1,10)+(3,3,6)+(3,1,10)+(3,1,10)+ (1,3,10)+(1,3,10)+(3,3,10)+(3,3,10)+3(2,2,15)+(4,2,15)+(2,4,15)+(2,2,20 )+ (2,2,45)+(2,2,45)+(1,1,64)+(3,1,64)+(1,3,64) 1782=(2,2,1)+(1,1,6)+(4,4,1)+(3,3,6)+(6,6,1)+(5,5,6)+(2,2,20 )+(4,4,20 )+(1,1,50)+ (3,3,50)+(2,2,105)+(1,1,196) 2640=(2,1,4)+(1,2,4)+(2,3,4)+(3,2,4)+(4,3,4)+(3,4,4)+(4,5,4)+(5,4,4)+(2,1,20)+ (1,2,20)+(2,3,20)+(3,2,20)+(4,3,20)+(3,4,20)+(2,1,60)+(1,2,60)+(2,3,60)+ (3,2,60)+(2,1,140 )+(1,2,140 ) 2772=(1,1,20 )+(5,1,35)+(1,5,35)+(3,1,45)+(1,3,45)+(2,2,64)+(4,2,70)+(2,4,70)+ (3,3,84) 2970=(2,2,1)+(4,2,1)+(2,4,1)+(1,1,6)+(3,1,6)+(1,3,6)+2(3,3,6)+(5,1,6)+(1,5,6)+ (3,1,10)+(3,1,10)+(1,3,10)+(1,3,10)+2(2,2,15)+(4,2,15)+(2,4,15)+(2,2,20 )+ (4,2,20 )+(2,4,20 )+(2,2,45)+(2,2,45)+(1,1,64)+(3,1,64)+(1,3,64)+(3,3,64)+ (1,1,70)+(1,1,70)+(2,2,84) TableA.82:SO(10)BranchingRules(continued) SO(10)→SO(9) 10=1+9 16=16 45=9+36 54=1+9+44 120=36+84 126=126 144=16+128 210=84+126 210 =1+9+44+156 320=9+36+44+231 560=128+432 660=1+9+44+156+450 672=672 720=16+128+576 770=44+231+495 945=36+84+231+594 1050=126+924 1200=432+768 1386=9+36+44+156+231+910 1440=672+768 1728=84+126+594+924 1782=1+9+44+156+450+1122 2640=16+128+576+1920 2772=2772 2970=231+495+594+1650 SO(10)→SU(2)×SO(7) 10=(3,1)+(1,7) 16=(2,8) 45=(3,1)+(3,7)+(1,21) 54=(1,1)+(5,1)+(3,7)+(1,27) 120=(1,1)+(3,7)+(3,21)+(1,35) 126=(1,21)+(3,35) 144=(2,8)+(4,8)+(2,48) 210=(1,7)+(3,21)+(1,35)+(3,35) 210 =(3,1)+(1,7)+(7,1)+(5,7)+(3,27)+(1,77) 320=(3,1)+(5,1)+(1,7)+(3,7)+(5,7)+(3,21)+(3,27)+(1,105) 560=(2,8)+(4,8)+(2,48)+(4,48)+(2,112) 660=(1,1)+(5,1)+(3,7)+(9,1)+(7,7)+(1,27)+(5,27)+(3,77)+(1,182) 672=(2,112)+(4,112 ) 720=(2,8)+(4,8)+(6,8)+(2,48)+(4,48)+(2,168) 770=(1,1)+(5,1)+(3,7)+(5,7)+(3,21)+(1,27)+(5,27)+(3,105)+(1,168 ) 945=(3,1)+(1,7)+(3,7)+(5,7)+(1,21)+(3,21)+(5,21)+(3,27)+(3,35)+(3,105)+(1,189) 1050=(3,21)+(1,35)+(3,35)+(5,35)+(1,105)+(3,189) 1200=(2,8)+(2,48)+(4,48)+(2,112)+(2,112 )+(4,112) E6→SU(6)×SU(2) 27=(6,2)+(15,1) 78=(1,3)+(20,2)+(35,1) 351=(6,2)+(15,3)+(21,1)+(84,2)+(105,1) 351 =(15,1)+(21,3)+(84,2)+(105 ,1) 650=(1,1)+(20,2)+(35,1)+(35,3)+(70,2)+(70,2)+(189,1) 1728=(6,2)+(6,4)+(15,1)+(15,3)+(84,2)+(105,1)+(105,3)+(120,2)+(210,2)+(384,1) 2430=(1,1)+(1,5)+(20,2)+(20,4)+(35,3)+(175,3)+(189,1)+(405,1)+(540,2) 2925=(1,3)+(20,2)+(20,4)+(35,1)+(35,3)+(70,2)+(70,2)+(175,1)+(189,3)+(280,1)+ (280,1)+(540,2) 3003=(56,4)+(70,2)+(189,1)+(280,3)+(490,1)+(560,2) 5824=(20,2)+(35,1)+(35,3)+(56,2)+(70,2)+(70,2)+(70,4)+(189,1)+(189,3)+(280,1)+ (280,3)+(540,2)+(560,2)+(896,1) 7371=(6,2)+(15,1)+(15,3)+(21,1)+(21,3)+2(84,2)+(84,4)+(105,1)+(105,3)+(105 ,3)+ (120,2)+(210 ,1)+(210,2)+(336,2)+(384,1)+(384,3)+(840,2)+(1050,1) 7722=(6,2)+(15,1)+(84,2)+(105,1)+(105 ,1)+(105,3)+(120,2)+(120,4)+(210,2)+ (210 ,3)+(384,1)+(384,3)+(420,2)+(840,2)+(1176,1) 17550=(6,2)+(6,4)+(15,1)+(15,3)+(15,5)+(21,3)+2(84,2)+(84,4)+(105,1)+(105 ,1)+ 2(105,3)+(120,2)+(210,2)+(210,4)+(315,1)+(336,2)+(384,1)+(384,3)+(840,2)+ (840 ,2)+(1050,1)+(1050,3)+(1260,2)+(1701,1) TableA.88:E7BranchingRules E7→SU(8) 56=28+28 133=63+70 912=36+36+420+420 1463=1+70+336+336+720 1539=63+378+378+720 6480=28+28+420+420+1280+1280+1512+1512 7371=1+70+720+1232+1764+3584 8645=63+378+378+945+945+2352+3584 24320=28+28+1512+1512+2520 +2520 +8100+8100 27664=36+36+420+420+1176+1176+1280+1280+2100+2100+8820+8820 E7→SO(12)×SU(2) 56=(12,2)+(32,1) 133=(1,3)+(32,2)+(66,1) 912=(12,2)+(32,3)+(220,2)+(352,1) 1463=(66,1)+(77,3)+(352,2)+(462,1) 1539=(1,1)+(32,2)+(66,3)+(77,1)+(352,2)+(495,1) 6480=(12,2)+(12,4)+(32,1)+(32,3)+(220,2)+(352,1)+(352,3)+(560,2)+(792,2)+(1728,1) 7371=(1,1)+(1,5)+(32,2)+(32,4)+(66,3)+(462,3)+(495,1)+(1638,1)+(1728,2) 8645=(1,3)+(32,2)+(32,4)+(66,1)+(66,3)+(352,2)+(462,1)+(495,3)+(1728,2)+(2079,1) 24320=(352 ,4)+(560,2)+(1728,1)+(2112,3)+(4224,1)+(4752,2) 27664=(12,2)+(32,1)+(32,3)+(220,2)+(220,4)+(352,1)+(352,3)+(560,2)+(792,2)+ (1728,3)+(2112,1)+(4928 ,1)+(4928,2) E7→SU(6)×SU(3) 56=(6,3)+(6,3)+(20,1) 133=(1,8)+(15,3)+(15,3)+(35,1) 912=(6,3)+(6,3)+(6,6)+(6,6)+(20,8)+(70,1)+(70,1)+(84,3)+(84,3) 1463=(1,1)+(15,3)+(15,3)+(21,6)+(21,6)+(35,1)+(35,8)+(105,3)+(105,3)+(175,1) 1539=(1,1)+(1,8)+(15,3)+(15,3)+(15,6)+(15,6)+(21,3)+(21,3)+(35,1)+(35,8)+ (105,3)+(105,3)+(189,1) 6480=2(6,3)+2(6,3)+(6,6)+(6,6)+2(20,1)+(6,15)+(6,15)+2(20,8)+(70,1)+(70,1)+(70,8)+ (70,8)+2(84,3)+2(84,3)+(84,6)+(84,6)+(120,3)+(120,3)+(210,3)+(210,3)+(540,1) 7371=(1,1)+(1,8)+(15,3)+(15,3)+(15,6)+(15,6)+(1,27)+(15,15)+(15,15)+(35,1)+(35,8)+ (105,3)+(105,3)+(105 ,6)+(105 ,6)+(189,1)+(189,8)+(384,3)+(384,3)+(405,1) 8645=(1,1)+(1,8)+(1,10)+(1,10)+2(15,3)+2(15,3)+(15,6)+(15,6)+(21,3)+(21,3)+ (15,15)+(15,15)+(35,1)+2(35,8)+(105,3)+(105,3)+(105 ,3)+(105 ,3)+(105,6)+ (105,6)+(189,1)+(189,8)+(280,1)+(280,1)+(384,3)+(384,3) 24320=(6,3)+(6,3)+2(20,1)+(56,10)+(56,10)+(70,8)+(70,8)+(84,3)+(84,3)+(84,6)+ (84,6)+(120,3)+(120,3)+(120,15)+(120,15)+(210,3)+(210,3)+(336,6)+(336,6)+ (540,1)+(540,8)+(840 ,3)+(840 ,3)+(980,1) 27664=2(6,3)+2(6,3)+2(6,6)+2(6,6)+2(20,1)+(6,15)+(6,15)+2(20,8)+(20,10)+(20,10)+ (56,1)+(56,1)+(70,1)+(70,1)+2(70,8)+2(70,8)+3(84,3)+3(84,3)+(84,6)+(84,6)+ (84,15)+(84,15)+(120,3)+(120,3)+(120,6)+(120,6)+(210,3)+(210,3)+(210,6)+ (210,6)+(336,3)+(336,3)+(540,1)+(540,8)+(560,1)+(560,1)+(840,3)+(840,3) TableA.89:E8BranchingRules E8→SO(16) 248=120+128 3875=135+1820+1920 27000=1+128+1820+5304+6435+13312 30380=120+1920+7020+8008+13312 E8→SU(9) 248=80+84+84 3875=80+240+240+1050+1050+1215 27000=1+80+84+84+1050+1050+1215+1944+2520+2520+5346+5346+5760 30380=1+80+84+84+240+240+1050+1050+1215+1540+1540+3402+3402+5346+ 5346+5760 E8→E7×SU(2) 248=(1,3)+(56,2)+(133,1) 3875=(1,1)+(56,2)+(133,3)+(912,2)+(1539,1) 27000=(1,1)+(1,5)+(56,2)+(56,4)+(133,3)+(1463,3)+(1539,1)+(6480,2)+(7371,1) 30380=(1,3)+(56,2)+(56,4)+(133,1)+(133,3)+(912,2)+(1463,1)+(1539,3)+(6480,2)+ (8645,1) E8→E6×SU(3) 248=(1,8)+(27,3)+(27,3)+(78,1) 3875=(1,1)+(1,8)+(27,3)+(27,3)+(27,6)+(27,6)+(78,8)+(351,3)+(351,3)+(650,1) 27000=(1,1)+(1,8)+(1,27)+(27,3)+(27,3)+(27,6)+(27,6)+(27,15)+(27,15)+(78,1)+(78,8)+ (351,3)+(351,3)+(351 ,6)+(351 ,6)+(650,1)+(650,8)+(1728,3)+(1728,3)+(2430,1) 30380=(1,1)+(1,8)+(1,10)+(1,10)+2(27,3)+2(27,3)+(27,6)+(27,6)+(27,15)+(27,15)+ (78,1)+2(78,8)+(351,3)+(351,3)+(351 ,3)+(351 ,3)+(351,6)+(351,6)+(650,1)+ (650,8)+(1728,3)+(1728,3)+(2925,1) E8→SU(5)×SU(5) 248=(5,10)+(10,5)+(10,5)+(5,10)+(24,1)+(1,24) 3875=(1,1)+(5,10)+(10,5)+(10,5)+(5,10)+(5,15)+(15,5)+(15,5)+(5,15)+(24,1)+ (1,24)+(5,40)+(40,5)+(40,5)+(5,40)+(24,24)+(45,10)+(10,45)+(10</trash>


				</figure>

			</div>

			<note place="foot">* Corresponding author Email addresses: robert.feger@physik.uni-wuerzburg.de (Robert Feger), thomas.w.kephart@vanderbilt.edu (Thomas W. Kephart) Preprint submitted to Computer Physics Communications August 7, 2014</note>

			<note place="foot">In[80]:= ProjectionMatrix[SU5,ProductAlgebra[SU3,SU2,U1]]</note>

			<note place="foot">* SU(3)×U(1) singlet.</note>

			<note place="foot">* SO(10)×U(1) singlets resp.</note>
		</body>
		<back>
		<div type="annex">
				<figure>
					<trash>× 32 = 1 + 11 + 55 + 165 + 330 + 462 55 × 11 = 11 + 165 + 429 55 × 32 = 32 + 320 + 1408 55 × 55 = 1 + 55 + 65 + 330 + 1144 + 1430 65 × 11 = 11 + 275 + 429 65 × 32 = 320 + 1760 65 × 55 = 55 + 65 + 1430 + 2025 65 × 65 = 1 + 55 + 65 + 935 + 1144 + 2025 165 × 11 = 55 + 330 + 1430 165 × 32 = 32 + 320 + 1408 + 3520 165 × 55 = 11 + 165 + 429 + 462 + 3003 + 5005 165 × 65 = 165 + 429 + 3003 + 7128 165 × 165 = 1 + 55 + 65 + 330 + 462 + 1144 + 1430 + 4290 + 7865 + 11583 275 × 11 = 65 + 935 + 2025 275 × 32 = 1760 + 7040 275 × 55 = 275 + 429 + 7128 + 7293 275 × 65 = 11 + 275 + 429 + 2717 + 7150 + 7293 275 × 165 = 1430 + 2025 + 15400 + 26520 275 × 275 = 1 + 55 + 65 + 935 + 1144 + 2025 + 7007 + 13650 + 21945 + 28798 320 × 11 = 32 + 320 + 1408 + 1760 320 × 32 = 11 + 55 + 65 + 165 + 330 + 429 + 462 + 1430 + 3003 + 4290 320 × 55 = 32 + 2(320) + 1408 + 1760 + 3520 + 10240 320 × 65 = 32 + 320 + 1408 + 1760 + 7040 + 10240 320 × 165 = 32 + 2(320) + 2(1408) + 1760 + 3520 + 5280 + 10240 + 28512 320 × 320 = 1 + 11 + 2(55) + 65 + 2(165) + 275 + 2(330) + 2(429) + 2(462) + 1144 + 2(1430) + 2025 + 2(3003) + 2(4290) + 5005 + 7128 + 11583 + 15400 + 17160 + 22275 330 × 11 = 165 + 462 + 3003 330 × 32 = 32 + 320 + 1408 + 3520 + 5280 330 × 55 = 55 + 330 + 462 + 1430 + 4290 + 11583 330 × 65 = 330 + 1430 + 4290 + 15400 330 × 165 = 11 + 165 + 330 + 429 + 462 + 3003 + 4290 + 5005 + 17160 + 23595 330 × 330 = 1 + 55 + 65 + 165 + 330 + 462 + 1144 + 1430 + 3003 + 4290 + 7865 + 11583 + 17160 + 23595 + 37752 429 × 11 = 55 + 65 + 1144 + 1430 + 2025 429 × 32 = 320 + 1408 + 1760 + 10240 429 × 55 = 11 + 165 + 275 + 2(429) + 3003 + 5005 + 7128 + 7150 429 × 65 = 11 + 165 + 275 + 2(429) + 5005 + 7128 + 7150 + 7293 429 × 165 = 55 + 65 + 330 + 1144 + 2(1430) + 2025 + 4290 + 11583 + 15400 + 33033 429 × 275 = 55 + 65 + 935 + 1144 + 1430 + 2(2025) + 21945 + 26520 + 28798 + 33033 429 × 429 = 1 + 2(55) + 2(65) + 330 + 935 + 2(1144) + 3(1430) + 3(2025) + 7865 + 11583 + 13650 + 15400 + 26520 + 28798 + 2(33033) 462 × 11 = 330 + 462 + 4290 462 × 32 = 32 + 320 + 1408 + 3520 + 4224 + 5280 462 × 55 = 165 + 330 + 462 + 3003 + 4290 + 17160 462 × 65 = 462 + 3003 + 4290 + 22275 462 × 165 = 55 + 165 + 330 + 462 + 1430 + 3003 + 4290 + 11583 + 17160 + 37752 × 64 = 1 + 13 + 78 + 286 + 715 + 1287 + 1716 78 × 13 = 13 + 286 + 715 78 × 64 = 64 + 768 + 4160 78 × 78 = 1 + 78 + 90 + 715 + 2275 + 2925 90 × 13 = 13 + 442 + 715 90 × 64 = 768 + 4992 90 × 78 = 78 + 90 + 2925 + 3927 90 × 90 = 1 + 78 + 90 + 1729 + 2275 + 3927 286 × 13 = 78 + 715 + 2925 286 × 64 = 64 + 768 + 4160 + 13312 286 × 78 = 13 + 286 + 715 + 1287 + 7722 + 12285 286 × 90 = 286 + 715 + 7722 + 17017 442 × 13 = 90 + 1729 + 3927 442 × 78 = 442 + 715 + 16302 + 17017 442 × 90 = 13 + 442 + 715 + 5733 + 16302 + 16575 715 × 13 = 78 + 90 + 2275 + 2925 + 3927 715 × 78 = 13 + 286 + 442 + 2(715) + 7722 + 12285 + 16575 + 17017 715 × 90 = 13 + 286 + 442 + 2(715) + 12285 + 16302 + 16575 + 17017 768 × 13 = 64 + 768 + 4160 + 4992 1287 × 13 = 715 + 1716 + 14300 1729 × 13 = 442 + 5733 + 16302 2275 × 13 = 715 + 12285 + 16575 2925 × 13 = 286 + 715 + 7722 + 12285 + 17017 Table A.53: SO(14) Tensor Products 14 × 14 = 1 + 91 + 104 64 × 14 = 64 + 832 64 × 64 = 1 + 91 + 1001 + 3003 64 × 64 = 14 + 364 + 1716 + 2002 91 × 14 = 14 + 364 + 896 91 × 64 = 64 + 832 + 4928 91 × 91 = 1 + 91 + 104 + 1001 + 3080 + 4004 104 × 14 = 14 + 546 + 896 104 × 64 = 832 + 5824 104 × 91 = 91 + 104 + 4004 + 5265 104 × 104 = 1 + 91 + 104 + 2275 + 3080 + 5265 364 × 14 = 91 + 1001 + 4004 546 × 14 = 104 + 2275 + 5265 832 × 14 = 64 + 832 + 4928 + 5824 × 133 = 1 + 133 + 1539 + 7371 + 8645 912 × 56 = 133 + 1539 + 8645 + 40755 912 × 133 = 56 + 912 + 6480 + 27664 + 86184 912 × 912 = 1 + 133 + 1463 + 1539 + 7371 + 8645 + 40755 + 152152 + 253935 + 365750 1463 × 56 = 56 + 6480 + 24320 + 51072 1463 × 133 = 1463 + 1539 + 40755 + 150822 1463 × 912 = 912 + 6480 + 27664 + 51072 + 362880 + 885248 1463 × 1463 = 1 + 133 + 1463 + 1539 + 7371 + 150822 + 152152 + 293930 + 617253 + 915705 1539 × 56 = 56 + 912 + 6480 + 27664 + 51072 1539 × 133 = 133 + 1463 + 1539 + 8645 + 40755 + 152152 1539 × 912 = 56 + 912 + 2(6480) + 27664 + 51072 + 86184 + 362880 + 861840 1539 × 1463 = 133 + 1463 + 1539 + 8645 + 40755 + 150822 + 152152 + 915705 + 980343 1539 × 1539 = 1 + 133 + 1463 + 2(1539) + 7371 + 8645 + 2(40755) + 150822 + 152152 + 365750 + 617253 + 980343 Table A.65: E 8 Tensor Products 248 × 248 = 1 + 248 + 3875 + 27000 + 30380 3875 × 248 = 248 + 3875 + 30380 + 147250 + 779247 3875 × 3875 = 1+248+3875+27000+30380+147250+779247+2450240+4881384+6696000 Table A.66: F 4 Tensor Products 26 × 26 = 1 + 26 + 52 + 273 + 324 52 × 26 = 26 + 273 + 1053 52 × 52 = 1 + 52 + 324 + 1053 + 1274 273 × 26 = 26 + 52 + 273 + 324 + 1053 + 1274 + 4096 273 × 52 = 26 + 273 + 324 + 1053 + 4096 + 8424 273 × 273 = 1 + 26 + 52 + 2(273) + 2(324) + 2(1053) + 1053 + 1274 + 2652 + 2(4096) + 8424 + 10829 + 19278 + 19448 324 × 26 = 26 + 273 + 324 + 1053 + 2652 + 4096 324 × 52 = 52 + 273 + 324 + 1274 + 4096 + 10829 324 × 273 = 26 + 52 + 2(273) + 324 + 2(1053) + 1274 + 2652 + 2(4096) + 8424 + 10829 + 19278 + 34749 324 × 324 = 1 + 26 + 52 + 273 + 2(324) + 1053 + 1053 + 1274 + 2652 + 2(4096) + 8424 + 10829 + 16302 + 19448 + 34749 1053 × 26 = 52 + 273 + 324 + 1053 + 1053 + 1274 + 4096 + 8424 + 10829 1053 × 26 = 1053 + 8424 + 17901 1053 × 52 = 26 + 273 + 2(1053) + 2652 + 4096 + 8424 + 17901 + 19278 1053 × 52 = 52 + 1053 + 1274 + 10829 + 12376 + 29172 1053 × 273 = 26 +52 +2(273)+2(324)+2(1053)+1053 +2(1274)+2652 +3(4096)+2(8424)+ 2(10829) + 17901 + 19278 + 19448 + 29172 + 34749 + 106496 1053 × 273 = 273 + 1053 + 4096 + 8424 + 10829 + 17901 + 19278 + 106496 + 119119 1296 c = 112 + 112 + 512 + 560 1386 v = 1386 1386 c = 1386 1386 s = 1 + 7 + 27 + 77 + 182 + 378 + 714 1400 s = 27 + 77 + 105 + 168 + 330 + 693 1400 v = 168 + 512 + 720 1400 c = 168 + 512 + 720 1568 s = 7 + 21 + 27 + 77 + 105 + 182 + 330 + 819 1568 v = 560 + 1008 1568 c = 560 + 1008 1680 vs = 294 + 1386 1680 cs = 294 + 1386 1680 cv = 672 + 1008 1680 sv = 8 + 48 + 168 + 448 + 1008 1680 vc = 672 + 1008 1680 sc = 8 + 48 + 168 + 448 + 1008 1925 = 77 + 330 + 693 + 825 2400 sv = 35 + 189 + 616 + 1560 2400 sc = 35 + 189 + 616 + 1560 2400 vc = 672 + 720 + 1008 2400 vs = 112 + 560 + 1728 2400 cv = 672 + 720 + 1008 2400 cs = 112 + 560 + 1728 2640 s = 1 + 7 + 27 + 77 + 182 + 378 + 714 + 1254 2640 v = 2640 2640 c = 2640 2800 vs = 189 + 378 + 616 + 1617 2800 cs = 189 + 378 + 616 + 1617 2800 cv = 512 + 560 + 720 + 1008 2800 sv = 48 + 112 + 168 + 448 + 512 + 1512 2800 vc = 512 + 560 + 720 + 1008 2800 sc = 48 + 112 + 168 + 448 + 512 + 1512 3675 v = 294 + 378 + 1386 + 1617 3675 c = 294 + 378 + 1386 + 1617 3675 s = 21 + 35 + 105 + 189 + 330 + 616 + 819 + 1560 3696 v = 1386 + 2310 3696 c = 1386 + 2310 3696 s = 7 + 21 + 27 + 77 + 105 + 182 + 330 + 378 + 819 + 1750</trash>


				</figure>

		</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<imprint>
			<date type="published" when="2430" />
			<biblScope unit="page" from="110" to="2925" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="34749" to="43758" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title/>
		<imprint>
			<date type="published" when="4752384" />
			<biblScope unit="page" from="45" to="852930" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title/>
		<editor>90]:= Timing[Irrep[E6]</editor>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title/>
		<author>
			<persName>
				<surname>Out</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="17550" />
			<biblScope unit="page" from="210" to="27" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">459459)+106(494208)+210(579150)+105(638820)+6(741312)+70(853281)+420(967680)+ 2104582656) + 15(5553900) + 105(5776056) +</title>
		<imprint>
			<date type="published" when="1837836" />
			<biblScope unit="page" from="560" to="112320" />
		</imprint>
	</monogr>
	<note>1123200. ) + 140(1253070) + 210(1640925) + 1706562 +</note>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title/>
		<editor>91]:= Timing[Irrep[E6]</editor>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title/>
		<author>
			<persName>
				<surname>Out</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="17550" />
			<biblScope unit="page" from="820" to="27" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">1253070) + 1345(1640925) + 238(2088450)+1344(2559843)+420(3281850)</title>
		<imprint>
			<date type="published" when="1123200" />
			<biblScope unit="page" from="1960" to="61425" />
		</imprint>
	</monogr>
	<note>579150. ) + 420(638820) + 112(741312) + 2240(967680) + 2240</note>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title/>
		<imprint>
			<date type="published" when="9189180" />
			<biblScope unit="page" from="560" to="10378368" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">) + 90(219490128)} and 78 n for n = 2</title>
		<imprint>
			<date type="published" when="138881925" />
			<biblScope unit="page" from="56" to="123803316" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title/>
		<editor>92]:= Timing[Irrep[E6]</editor>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title/>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title/>
		<editor>93]:= Timing[Irrep[E6]</editor>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title/>
		<author>
			<persName>
				<surname>Out</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="20391" />
			<biblScope unit="page" from="1" to="5" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title/>
		<editor>94]:= Timing[Irrep[E6]</editor>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title/>
		<author>
			<persName>
				<surname>Out</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">650) + 18(2430) + 26(2925) + 2(3003) + 2(3003) + 16</title>
		<imprint>
			<biblScope unit="page" from="5824" to="16" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title/>
		<imprint>
			<date type="published" when="105600" />
			<biblScope unit="page" from="6" to="43758" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title/>
		<imprint>
			<date type="published" when="812175" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title/>
		<editor>95]:= Timing[Irrep[E6]</editor>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title/>
		<author>
			<persName>
				<surname>Out</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">650) + 110(2430) + 175(2925) + 24(3003) + 24(3003) + 140</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">70070) + 90(78975) + 90(78975) + 51(85293) + 160(105600)+16(146432)+16(146432)+120(252252)+120(252252)</title>
		<imprint>
			<biblScope unit="page" from="10" to="537966" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title/>
		<imprint>
			<date type="published" when="1911195" />
			<biblScope unit="page" from="95" to="812175" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title/>
		<imprint>
			<date type="published" when="19160064" />
			<biblScope unit="page" from="34906950" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title/>
		<editor>96]:= Timing[Irrep[E6]</editor>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title/>
		<author>
			<persName>
				<surname>Out</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">)+542(78)+1100(650)+840(2430)+1390(2925)+270(3003)371800) + 40(371800) + 115(537966) + 745(600600) + 745(600600) + 1370(812175) + 1890(852930) + 585(972972) + 585</title>
		<imprint>
			<date type="published" when="2977975" />
			<biblScope unit="page" from="270" to="3003" />
		</imprint>
	</monogr>
	<note>972972. ) + 495(1337050) + 65(1559376) + 65(1559376) + 585(1911195) + 1350(2453814) + 760</note>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">252808452) + 10</title>
		<imprint>
			<biblScope unit="page" from="348985350" to="45" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title/>
		<editor>97]:= Timing[Irrep[E6]</editor>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title/>
		<author>
			<persName>
				<surname>Out</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">252252)+1155(371800)+1155(371800)+1505(537966)+12145(600600)+12145(600600)+ 19621(812175) + 28161(852930) + 10899(972972)3309696) + 2870(3309696) + 9729(3490695) + 686(4548180) + 11760(4752384) + 11760(4752384) + 231(4969107) + 9450</title>
		<imprint>
			<date type="published" when="1575" />
			<biblScope unit="page" from="78" to="9156" />
		</imprint>
	</monogr>
	<note>+. 10899(972972) + 8085(1337050) + 1701(1559376) + 1701(1559376) + 175(1896180) + 175(1896180) + 8910</note>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">64414350) + 2079(66023100) + 560(85974525) + 560221077350) + 225961450 + 1575(226459233) + 560(236487680) + 560(236487680) + 819(252808452) + 819(252808452) +532097280) + 14(532097280) + 504(537567030) + 504(537567030) +649806300) + 126(688740975) + 966(734557824) + 105(797489550) + 140(929510400) +</title>
		<imprint>
			<date type="published" when="200449886" />
			<biblScope unit="page" from="85974525" to="315" />
		</imprint>
	</monogr>
	<note>303388800. ) + 840(303388800) + 3465(348985350) + 2100(350895402) + 294</note>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title/>
		<imprint>
			<date>3203785728 . 3256917300 . 3548188800 . 4991693850 . 8713554850</date>
			<biblScope unit="page" from="3863940795" to="15" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">30380) + 775(147250) + 1386(779247) + 415(1763125) + 1011</title>
		<imprint>
			<date type="published" when="79143000" />
			<biblScope unit="page" from="79" to="1" />
		</imprint>
	</monogr>
	<note>2450240. ) + 1240(4096000) + 405(4881384) + 765</note>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">66393847000)+69176971200 +90(83080364250)+90(85424220000)</title>
		<imprint>
			<date>21039669000 . 574197082368 . 627099023250 . 841900509450</date>
			<biblScope unit="page" from="180" to="23592339045" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">919045960000) + 10(1041872676000) + 9(1283242632840) + 10(1349926375875) + 16</title>
		<imprint>
			<date>1813461073920</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">30380) + 6580(147250) + 12306(779247) + 3850(1763125) + 9779</title>
		<imprint>
			<date type="published" when="79143000" />
			<biblScope unit="page" from="421" to="1" />
		</imprint>
	</monogr>
	<note>2450240. ) + 11830(4096000) + 4452(4881384) +</note>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">234550030000) + 546(267413986840) + 1155(355647996000) + 105(417532087000) + 140(417933862500) + 1751198018560000) + 735(1283242632840) + 756(1349926375875) + 1473701482500 + 756(1813461073920) + 105</title>
		<imprint>
			<date>627099023250 . 841900509450 . 919045960000 . 1041872676000 . 4007202600000 . 4189713446646 . 4490627295000 . 10701806469120 . 12737135385000 . 13532264250750 . 19994148864000 . 28123973939490 . 29369472656250 . 30014459904000 . 33372802062000</date>
			<biblScope unit="page" from="3696" to="21039669000" />
		</imprint>
	</monogr>
	<note>492957660000. ) + 1575(508731738750) + 315(560213725500) + 2170(574197082368) + 280</note>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
		<title/>
		<imprint>
			<date>85471274280000 . 107701303073000</date>
			<biblScope unit="page" from="33699815424000" to="126" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<monogr>
		<title/>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Table</surname>
			</persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<monogr>
		<title/>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Table</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="19448" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
		<title/>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<monogr>
		<title/>
		<imprint>
			<date type="published" when="17901" />
			<biblScope unit="page" from="273" to="324" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<monogr>
		<title/>
		<imprint>
			<date type="published" when="19448" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<monogr>
		<title/>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">1274 )+ 4096 + 2 ( 10829 )</title>
		<imprint>
			<date type="published" when="19278" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<monogr>
		<title/>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<monogr>
		<title/>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<monogr>
		<title/>
		<imprint>
			<date type="published" when="19278" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<monogr>
		<title/>
		<imprint>
			<date type="published" when="19278" />
			<biblScope unit="page" from="1274" to="2652" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<monogr>
		<title/>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">+2(34749)+2(76076)+2(106496)+107406 +160056 +205751 +212992</title>
		<imprint>
			<date type="published" when="19278" />
			<biblScope unit="page" from="273" to="2" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="77" to="182" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="77" to="1" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">182) + 2(189) + 286 + 378 + 2(448) + 714 + 729 + 924 182 × 64 = 14 +27 +2(64)+2(77)+2(77 )+2(182)+3(189)+273 +2(286)+2(378)</title>
		<imprint>
			<biblScope unit="page" from="3" to="448" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="64" to="77" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">182 ) + 2(189) + 2(286) + 378 + 2(448) + 714 + 2(729) + 896</title>
		<imprint>
			<biblScope unit="page" from="182" to="3" />
		</imprint>
	</monogr>
	<note>924. ) + 1547 + 1728 + 2926 182 × 77 = 7 + 14 + 27 + 2</note>
</biblStruct>

<biblStruct xml:id="b55">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="729" to="896" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="4" to="448" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<monogr>
		<title level="m" type="main">1728) + 2079 + 2079 + 2926 + 3003</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<monogr>
		<title/>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<monogr>
		<title/>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b60">
	<analytic>
		<title/>
		<author>
			<persName>
				<forename type="first">=</forename>
				<surname>14+27+2</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">286) + 2(378) + 4(448) + 714</title>
		<imprint>
			<biblScope unit="page" from="2" to="77" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b61">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="729" to="896" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b62">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="729" to="896" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b63">
	<monogr>
		<title/>
		<imprint>
			<date type="published" when="1728" />
			<biblScope unit="page" from="714" to="4" />
		</imprint>
	</monogr>
	<note>+. 2079 + 2926 + 3003 189 × 189 = 1 + 7 + 2(14) + 3</note>
</biblStruct>

<biblStruct xml:id="b64">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="6" to="448" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b65">
	<monogr>
		<title level="m" type="main">1728) + 2079 + 2926</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b66">
	<analytic>
		<title/>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Table</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SU(9) Branching Rules SU(9) → SU−7) + (28)(2) 45 = (1)(−16) + (8)(−7) + (36)−6) + (56)(3) 126 = (56)(−5) + (70)(4) 165 = (1)(−24) + (8)(−15) + (36)(−6) + (120)(3) 240 = (8)(−15) + (28)(−6) + (36)(−6) + (168)(3)</title>
		<imprint>
			<biblScope unit="page" from="9" to="1" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b67">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">)(−8) + (8)(1) + (8)(−17) + (36)(10) + (63)(−8) + (280)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b68">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−14) + (120)(−5) + (330)(4) 540 = (36)(−14) + (168)(−5) + (336)(4) 630 = (28)(−14) + (56)(−5) + (168)(−5) + (378)(4) 720 = (28)(2) + (56)(11) + (216)(−7) + (420)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b69">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−23) + (28)(−14) + (36)(−14) + (120)(−5) + (168)(−5) + (630)(4) 1008 = (56)(13) + (70)(4) + (378)(4) + (504)(−5) SU(9) → SU(7)×SU</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b70">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="2" to="7" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b71">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−9) + (48, 1)(0) 84 =−12) + (21, 2)(−3) + (35, 1)(6) 126 = (21, 1)(−10) + (35, 1)(8) + (35, 2)(−1) 165 = (1, 4)(−21) + (7, 3)(−12) + (28, 2)(−3) +</title>
		<imprint>
			<biblScope unit="page" from="1" to="0" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b72">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">)(−7) + (7, 1)(2) + (7, 1)(−16) +11) + (48, 2)(−7) + (140, 1)(2) 396 = (1, 2)(−7)+(1, 4)(−7)+(7, 1)(2)+(7, 3)(2)+(7, 3)(−16)+(28, 2)(11)+(48, 2)(−7)+(189, 1)(2) 495 = (1, 5)(−28) + (7, 4)(−19) + (28, 3)(−10) + (84, 2)(−1) +</title>
		<imprint>
			<biblScope unit="page" from="2" to="21" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b73">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−19) + (21, 1)(−10) + (28, 3)(−10) + (112, 2)(−1) +</title>
		<imprint>
			<biblScope unit="page" from="1" to="8" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b74">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−10)+(35, 2)(−1)+(112, 2)(−1)+(210, 1)(8) 720 = (7, 2)(−5) + (21, 1)(4) + (21, 3)(4) + (35, 2)(13) + (48, 1)(−14) + (140, 2)(−5) +</title>
		<editor>−19)+(21, 1)(−10)+(21, 3)(−10)+</editor>
		<imprint>
			<biblScope unit="page" from="1" to="4" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b75">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−28) + (7, 2)(−19) + (7, 4)(−19) +17) + (35, 1)(8) + (35, 2)(−1) + (35, 3)(8) + (112, 1)(8) + (210, 2)−9) + (45)(2) 66 = (1)(−20) + (10)(−9) + (55)(2) 120 = (1)(0) + (10)(11) + (10)(−11) + (99)(0) 165 = (45)(−8) + (120)(3) 286 = (1)(−30) + (10)(−19) + (55)(−8) + (220)(3) 330 = (120)(−7) + (210)(4) 440 = (10)(−19) + (45)(−8) + (55)(−8) + (330)(3) 462 = (210)(−6) + (252)(5) 594 = (10)(1) + (45)(12) + (99)(−10) + (440)(1) SU(11) → SU(9)×SU</title>
		<editor>−10) + (28, 1)(−10) + (28, 3)(−10) + (84, 2)(−1) + (112, 2)(−1) +</editor>
		<imprint>
			<biblScope unit="page" from="1" to="8" />
		</imprint>
	</monogr>
	<note>−1. ) + (224, 1)(−10) Table A.77: SU(11) Branching Rules SU(11) → SU(10)×U</note>
</biblStruct>

<biblStruct xml:id="b76">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">(1, 2)(−9) + (9, 1)(2) 55 = (1, 1)(−18) + (9, 2)(−7) + (36, 1)(4) 66 = (1, 3)(−18) + (9, 2)(−7) +</title>
		<imprint>
			<biblScope unit="page" from="1" to="4" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b77">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">11) + (9, 2)(−11) + (80, 1)(0) 165 =−5) + (84, 1)(6) 286 = (1, 4)(−27) + (9, 3)(−16) + (45, 2)(−5) + (165, 1)(6) 330 = (36, 1)(−14) + (84, 2)(−3) +</title>
		<imprint>
			<biblScope unit="page" from="1" to="16" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b78">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−5) + (45, 2)(−5) + (240, 1)(6) 462 =−1) 594 = (1, 2)(−9) + (9, 1)(2) + (9, 1)(−20) + (9, 3)(2) + (36, 2)(13) + (80, 2)(−9) + (315, 1)(2) SU(11) → SU</title>
		<imprint>
			<biblScope unit="page" from="2" to="27" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b79">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="3" to="8" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b80">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">11) + (8, 3)(−11) + (63, 1)(0) 165 = (1, 1)(−24) + (8, 3)(−13) + (28, 3)(−2) + (56, 1)(9) 286 = (1, 10)(−24) + (8, 6)(−13) + (36, 3)(−2) +</title>
		<imprint>
			<biblScope unit="page" from="1" to="9" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b81">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−21) + (28, 3)(−10) + (56, 3)(1) +</title>
		<imprint>
			<biblScope unit="page" from="1" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b82">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−24) + (8, 3)(−13) + (8, 6)(−13) + (28, 3)(−2) + (36, 3)(−2) +</title>
		<imprint>
			<biblScope unit="page" from="1" to="9" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b83">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−19)+(8, 8)(3)+(28, 3)(14)+(63, 3)(−8)+(216, 1)(3) Table A.77: SU(11) Branching Rules (continued) SU(11) → SU(7)×SU</title>
		<imprint>
			<biblScope unit="page" from="1" to="18" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b84">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="4" to="7" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b85">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−11) + (1, 15)(0) + (48, 1)(0) 165 = (1, 4)(−21) + (7, 6)(−10) + (21, 4)(1) +</title>
		<imprint>
			<biblScope unit="page" from="1" to="0" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b86">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−21) + (28, 4)(1) +</title>
		<imprint>
			<biblScope unit="page" from="1" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b87">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="1" to="28" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b88">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">10)(−10) + (1, 20)(−21) + (21, 4)(1) + (28</title>
		<imprint>
			<biblScope unit="page" from="4" to="1" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b89">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−18) + (1, 20)(−7) + (7, 15)(4) + (21, 4)(15) + (48, 4)(−7) + (140, 1)(4) SU(11) → SU</title>
		<imprint>
			<biblScope unit="page" from="1" to="24" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b90">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">10)(−12) + (15, 1)(10) 66 = (6, 5)(−1) + (1, 15)(−12) +</title>
		<imprint>
			<biblScope unit="page" from="5" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b91">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="1" to="0" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b92">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="10" to="18" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b93">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−24) + (6, 10)(−13) + (15, 1)(20) + (15, 10)(−2) +</title>
		<imprint>
			<biblScope unit="page" from="5" to="9" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b94">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="10" to="7" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b95">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">24)(5) + (35, 5)(−6) + (1, 45)(−6) + (84, 1)(5) Table A−22) + (11)(−10) + (66)(2) 143 = (1)(0) + (11)(12) + (11)(−12) + (120)(0) 220 = (55)(−9) + (165)(3) 364 = (1)(−33) + (11)(−21) + (66)(−9) + (286)(3) 495 = (165)(−8) + (330)(4) 572 = (11)(−21) + (55)(−9) + (66)(−9) + (440)(3) 780 = (11)(1) + (55)(13) + (120)(−11) + (594)</title>
		<imprint>
			<biblScope unit="page" from="1" to="30" />
		</imprint>
	</monogr>
	<note>SU. (12) Branching Rules SU(12) → SU(11)×U(1) 12 = (1)(−11) +</note>
</biblStruct>

<biblStruct xml:id="b96">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">(1, 2)(−5) + (10, 1)(1) 66 = (1, 1)(−10) + (10, 2)(−4) + (45, 1)(2) 78 = (1, 3)(−10) + (10, 2)(−4) +</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b97">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">) + (10, 2)(6) + (10, 2)(−6) + (99, 1)(0) 220 = (10, 1)(−9) + (45, 2)(−3) +</title>
		<imprint>
			<biblScope unit="page" from="1" to="3" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b98">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">10, 3)(−9) + (55, 2)(−3) + (220, 1)(3) 495 = (45, 1)(−8) + (120, 2)(−2) +</title>
		<imprint>
			<biblScope unit="page" from="1" to="4" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b99">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−3) + (55, 2)(−3) + (330, 1)(3) 780 = (1, 2)(−5) + (10, 1)(1) + (10, 1)(−11) + (10, 3)(1) + (45, 2)(7) + (99, 2)(−5) + (440, 1)(1) 792 = (120, 1)(−7) + (210, 2)(−1) + (252, 1)(5) SU(12) → SU(9)×SU</title>
		<imprint>
			<biblScope unit="page" from="1" to="9" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b100">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="3" to="3" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b101">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−4) + (80, 1)(0) 220 = (1, 1)(−9) + (9, 3)(−5) + (36, 3)(−1) + (84, 1)(3) 364 = (1, 10)(−9) + (9, 6)(−5) + (45, 3)(−1) + (165, 1)(3) 495 = (9, 1)(−8) + (36, 3)(−4) +</title>
		<imprint>
			<biblScope unit="page" from="8" to="0" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b102">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−9) + (9, 3)(−5) + (9, 6)(−5) + (36, 3)(−1) + (45, 3)(−1) +</title>
		<imprint>
			<biblScope unit="page" from="1" to="3" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b103">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="3" to="3" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b104">
	<analytic>
		<title/>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Table</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SU(12) Branching Rules (continued) SU(12) → SU(7)×SU(5)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b105">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">10)(−14) + (7, 5)(−2) + (21, 1)(10) 78 = (7, 5)(−2) + (1, 15)(−14) +</title>
		<imprint>
			<biblScope unit="page" from="5" to="7" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b106">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">)(0) 220 = (1, 10)(−21) + (7, 10)(−9) +</title>
		<imprint>
			<biblScope unit="page" from="1" to="0" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b107">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="15" to="9" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b108">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−28) + (7, 10)(−16) + (21, 10)(−4) + (35, 1)(20) +</title>
		<imprint>
			<biblScope unit="page" from="5" to="8" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b109">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−7) + (7, 1)(5) + (7, 10)(−19) + (21, 5)(17) +</title>
		<imprint>
			<biblScope unit="page" from="10" to="9" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b110">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">10)(−11) + (35, 5)(13) + (35, 10)(1) SU(12) → SU</title>
		<imprint>
			<biblScope unit="page" from="1" to="35" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b111">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="1" to="1" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b112">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−2) + (35, 1)(0) + (1, 35)(0) 220 = (6, 15)(−1) + (15, 6)(1) + (20, 1)(3) + (1, 20)(−3) 364 =</title>
		<imprint>
			<biblScope unit="page" from="1" to="0" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b113">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="1" to="4" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b114">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−1)+(15, 6)(3)+(6, 15)(−3)+(35, 6)(−1)+−5) + (6, 15)(−3) + (15, 6)(3) + (15, 20)(−1) + (20, 15)(1) Table A.82: SO(10) Branching Rules SO(10) → SU(5)×U(1) 10 = (5)(2) + (5)(−2) 16 = (1)(−5) + (5)(3) + (10)(−1) 45 = (1)(0) + (10)(4) + (10)(−4) + (24)</title>
		<imprint>
			<biblScope unit="page" from="15" to="1" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b115">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−2) + (10)(−6) + (10)(6) + (45)(2) + (45)(−2)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b116">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">) + (15)(−6) + (45)(−2) + (50)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b117">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">) + (10)(−1) + (15)(−1) + (24)(−5) + (40)(−1) + (45)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b118">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−8) + (5)(8) + (10)(4) + (10)(−4) + (24)(0) + (40)(4) + (40)(−4) + (75)</title>
		<imprint>
			<biblScope unit="page">210</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b119">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">= ( 35 ) ( −6) + (35)(6) + (70)(2) + (70)(−2)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b120">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−2) + (70)(2) + (70)(−2) 560 = (1)−1) + (10)(−9) + (24)(−5) + (40)(−1) + (45)(7) + (45)(3) + (50)(3) + (70)(3) + (75)(−5) + (175)(−1) 660 = (70 )(−8) + (70 )(8) + (160)(4) + (160)(−4) +</title>
		<imprint>
			<biblScope unit="page" from="40" to="6" />
		</imprint>
	</monogr>
	<note>−5. ) + (5)(3) + 2(10</note>
</biblStruct>

<biblStruct xml:id="b121">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">) + (10)(11) + (15)(−1) + (35)(−9) + (45)(3) + (50)(7) + (126)(−5) + (175 )(3) + (210)(−1)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b122">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−1)+(15)(−9)+(24)(−5)+(35)(−1)+(40)(−1)+(45)(3)+(70)(7)+(70)(3)+(105)(3)+ (126)(−5) + (175)(−1)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b123">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">) 945 = (10)(4) + (10)(−4) + (15)(4) + (15)−4) + (45)(−8) + (45)(8) + (75)(0) + (126)(0) + (126)(0) + (175)(4) + (175)(−4) 1050 = (5)(12) + (5)(8) + (10)(4) + (15)(4) + (24)(0) + (35)(−4) + (40)(4) + (40)(−4) + (45)(8) + (70)(−8) + (75)(0) + (126)(0) + (175)(−4) + (175 )(0) + (210)</title>
		<editor>−4) + (24)(0) + (50)(−8) + (50)(8) + (75)(0) + (175)(4) + (175)(−4) +</editor>
		<imprint>
		</imprint>
	</monogr>
	<note>−4. ) + 2(24)(0) + (40)(4) + (40</note>
</biblStruct>

<biblStruct xml:id="b124">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">) + (10)(−1) + (10)(11) + (15)(−1) + (24)(−5) + (40)(−1) + (40)(−9) + (45)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b125">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">+ (50)(7) + (75)(−5) + (126)(−5) + (175)(−1) + (210)(−1) + (280)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b126">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">(15)(4)+(15)(−4)+(24)(0)+(105)(−8)+(105)(8)+(126)(0)+(126)(0)+(160)(4)+(160)(−4)+ (175)(4) + (175)(−4) +</title>
		<imprint>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b127">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−13)+(5)(3)+(10)(−1)+(10)(−9)+(15)(11)+(24)(−5)+(40)(−1)+(40)(−9)+</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b128">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">+(50)(3)+(70)(3)+(75)(−5)+(105)(7)+(175)(−1)+(175 )(−5)+(280)(3)+(315)(−1)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b129">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−2) + (10)(−6) + (10)(6) + (15)(−6) + (15)(6) + (24)(10) + (24)(−10) + (40)(−6) +</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b130">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">+2(45)(2)+2(45)(−2)+(50)−2)+(105)(2)+(105)(−2)+ (175)(−6) + (175)(6) + (280)(2) + (280)(−2) 1782 = (126 )(10) + (126 )(−10) + (315 )(−6) + (315 )(6) + (450 )(2) + (450 )(−2) 2640 = (35)(−1) + (35)(11) + (70)(7) + (70)(3) + (70 )(3) + (105)(3) + (126)(−5) + (160)(−1) + (160)(−9) + (175)(−1) + (200)(−5) + (224)(−5) +</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b131">
	<monogr>
		<title level="m" type="main">+ (450)(−1) + (480)(3)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b132">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">12) + (10)(16) + (15)(4) + (35)(−4) + (45)(8) + (50)(12) + (70 )(−12) + (126)(0) +</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b133">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">+ (210)(4) + (280 )(−8) + (490)(4) + (560)(−4) +</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b134">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−2) + (10)(−6) + (10)(6) + (40)(−6) + (40)(6) + 2(45)(2) + 2(45)(−2) + (50)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b135">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−2) + (70)(2) + (70)(−2) + (75)(10) + (75)(−10) + (175)(−6) + (175)(6) + (210)(−6) + (210)(6) + (280)(2) + (280)(−2) + (480)(2) + (480)(−2)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b136">
	<monogr>
		<title level="m" type="main">SO(10) Branching Rules (continued)</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Table</surname>
			</persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b137">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">27) + (5, 27) + (3, 77) + (3, 105) + (1, 330) 1440 = (2, 48) + (2, 112) +</title>
		<imprint>
			<biblScope unit="page" from="1" to="5" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b138">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">21) + (3, 21) + (5, 21) + (1, 27) + (1, 35) + 2(3, 35) + (5, 35) + (3, 105) + (1, 189) +</title>
		<imprint>
			<biblScope unit="page">189</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b139">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="1" to="1" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b140">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">8) + (8, 8) + (2, 48) + (4, 48) + (6, 48) + (2, 168) + (4, 168) +</title>
		<imprint>
			<biblScope unit="page" from="448" to="2772" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b141">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="1" to="1" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b142">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">105) + (5, 105) + (3, 168 ) + (3, 189) +</title>
		<imprint>
			<biblScope unit="page">378</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b143">
	<analytic>
		<title/>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Table</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">14) Branching Rules SO(14) → SU(2)×SU(2)×SO</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b144">
	<monogr>
		<title/>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b145">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page">16</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b146">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">) + (2, 2, 10) + (1, 1, 45) 104 = (1, 1, 1) + (3, 3, 1) + (2, 2, 10) +</title>
		<imprint>
			<biblScope unit="page">54</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b147">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="45" to="1" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b148">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="54" to="1" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b149">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="144" to="1" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b150">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">) + (2, 4, 1) + (1, 1, 10) + (3, 1, 10) + (1, 3, 10) + (3, 3, 10) + (2, 2, 45) + (2</title>
		<imprint>
			<biblScope unit="page" from="54" to="1" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b151">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">10) + (3, 1, 45) + (1</title>
		<imprint>
			<biblScope unit="page" from="210" to="1716" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b152">
	<analytic>
		<title level="a" type="main">1, 120) + (1, 3, 120) + (1, 1, 126) + (1, 1, 126)</title>
	</analytic>
	<monogr>
		<title level="m">) + (3, 3, 1) + (5, 5, 1) + (2, 2, 10) + (4, 4, 10) + (1, 1, 54) + (3, 3, 54) + (2</title>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="210" to="1" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b153">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">210) + (3, 1, 210) + (1, 3, 210))+(1, 5, 1)+(2, 2, 10)+(4, 2, 10)+(2, 4, 10)+(3</title>
		<imprint>
			<biblScope unit="page" from="45" to="1" />
		</imprint>
	</monogr>
	<note>3080. = (1, 1, 1)+(3</note>
</biblStruct>

<biblStruct xml:id="b154">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">10) + (4, 2, 10) + 45) + (1, 3, 45) + (3, 3, 45) + (3, 1, 54) + (1, 3, 54) + (2, 2, 120) + (2</title>
		<imprint>
			<biblScope unit="page" from="1" to="1" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b155">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">16) + (3, 2, 16) + (4, 1, 16) + (1, 4, 16) + (2, 1, 144) + (1, 2, 144) + (2, 3, 144) + (3, 2, 144) +</title>
		<imprint>
			<biblScope unit="page" from="560" to="1" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b156">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">)+2(2, 2, 10)+(4, 2, 10)+(2, 4, 10)+(4</title>
		<imprint>
			<biblScope unit="page" from="1" to="1" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b157">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">54) + (3, 3, 54) + (2, 2, 210 ) + (2</title>
		<imprint>
			<biblScope unit="page" from="45" to="1" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b158">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">16) + (3, 2, 16) + (4, 3, 16) + (3, 4, 16) + (2, 1, 144) + (1, 2, 144) + (2, 3, 144) + (3, 2, 144) +</title>
		<imprint>
			<biblScope unit="page" from="720" to="1" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b159">
	<monogr>
		<title level="m" type="main">Branching Rules SO(18) → SO(8)×SO(10) 18 = (8 v , 1) + (1, 10) 153 = (8 v , 10) + (28, 1) + (1, 45) 170 = (1, 1) + (8 v , 10) + (35 v , 1) + (1, 54) 256 = (8 s , 16) + (8 c</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Table</surname>
			</persName>
		</author>
		<imprint>
			<biblScope unit="page" from="16" to="816" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b160">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">10) + (35 v , 10) + (8 v , 54) + (112 v , 1) +</title>
		<imprint>
			<biblScope unit="page">210</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b161">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">10) + (28, 10) + (35 v , 10) + (8 v , 45) + (8 v , 54) + (160 v</title>
		<imprint>
			<biblScope unit="page">320</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b162">
	<monogr>
		<title level="m" type="main">1) + (35 s , 1) + (56 v , 10) + (28, 45) + (8 v</title>
		<imprint>
			<biblScope unit="page">210</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b163">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="16" to="8" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b164">
	<analytic>
		<title/>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Table</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SO(22) Branching Rules SO(22) → SO(12)×SO</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b165">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="10" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b166">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="10" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b167">
	<analytic>
		<title/>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Table</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SO(26) Branching Rules SO(26) → SO</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b168">
	<monogr>
		<title level="m" type="main">10) + (1, 45) + (120, 1) 2600 =</title>
		<imprint>
			<biblScope unit="page" from="10" to="16" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b169">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="10" to="16" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b170">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">54) + (135, 45) + (16, 320) + (560, 10) + (1, 945) + (1344, 10) +</title>
		<imprint>
			<biblScope unit="page" from="10" to="1" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b171">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="126" to="1" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b172">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">Exceptional Algebras Table A10)×U(1) 27 = (1)(−4) + (10)(2) + (16)(−1) 78 = (1)(0) + (16)(3) + (16)(−3) + (45)</title>
		<editor>E 6 Branching Rules E 6 → SO</editor>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b173">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−1) + (45)(−4) + (120)(2) + (144)(−1)</title>
		<imprint>
			<biblScope unit="page">351</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b174">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">) + (10)(2) + (16)(5) + (54)(−4) + (126)(2) + (144)(−1)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b175">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">) + (10)(−6) + (16)(3) + (16)(−3) + (45)(0) + (54)(0) + (144)(3) + (144)(−3) + (210)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b176">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−1) + (16)(−7) + (45)(−4) + (120)(2) + (126)(2) + (144)(5) + (144)(−1) + (210)(−4) + (320)(2) + (560)(−1)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b177">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−6)+(126)(6)+(210)(0)+(560)(3)+(560)(−3)+ (770)(0) 2925 = (16)(3) + (16)(−3) + 2(45)(0) + (120)(6) + (120)(−6) + (144)(3) + (144)(−3) + (210)(0) + (560)(3) + (560)(−3) + (945)</title>
		<imprint>
			<biblScope unit="page" from="16" to="3" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b178">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−12) + (10)(−6) + (16)(−9) + (54)(0) + (126)(−6) + (144)(−3) + (210 )(6) + (672)(−3) + (720)(3) + (1050)(0) 5824 = (10)(−6) + (16)(−3) + (16)(−9) + (45)(0) + (54)(0) + (120)(−6) + (126)(−6) + (144)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b179">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−3) + (210)(0) + (320)(6) + (560)(3) + (720)(3) + (945)(0) + (1050)(0) + (1200)(−3)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b180">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">)+(16)(−1)+(45)(8)+(45)(−4)+(54)(−4)+2(120)(2)+(126)(2)+(144)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b181">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−1)+(144)(−7)+(210)(−4)+(320)(2)+(560)(5)+(560)(−1)+(720)(−1)+(945)(−4)+ (1200)(−1) + (1728)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b182">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−4)+(54)(8)+(54)(−4)+(126)(2)+ (144)(5) + (144)(−1) + (144)(−7) + (210)(−4) + (210 )(2) + (320)(2) + (560)(−1) + (720)(5) + (720)(−1) + (1050)(−4) + (1440)(−1) + (1728)(2) 17550 = (10)(2) + (16)(5) + (16)(−1) + (45)(−4) + 2(120)(2) + (126)(2) + (126)</title>
		<editor>−10)+(16)(−1)+(16)(−7)+(45</editor>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b183">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−1)+(210)(8)+(210)(−4)+(320)(2)+(560)(5)+2(560)(−1)+(560)(−7)+(770)(−4)+</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b184">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">−4) + (1050)(−4) + (1200)(5) + (1200)(−1) + (1728)(2) + (2970)(2) + (3696)(−1) Table A</title>
		<imprint/>
	</monogr>
	<note>continued</note>
</biblStruct>

<biblStruct xml:id="b185">
	<monogr>
		<title level="m" type="main">×SU(3)×SU(3) 27 =</title>
		<author>
			<persName>
				<forename type="first">→</forename>
				<surname>Su</surname>
			</persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b186">
	<monogr>
		<title/>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b187">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="1" to="3" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b188">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page">351</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b189">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="3" to="8" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b190">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page">650</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b191">
	<monogr>
		<title/>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b192">
	<monogr>
		<title/>
		<imprint>
			<biblScope unit="page" from="1" to="3" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b193">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">) + (6, 8, 3) +</title>
		<imprint>
			<biblScope unit="page" from="8" to="15" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b194">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">3) + (3, 3, 6) + (3, 6, 3) + (3) + (8, 1, 8) + (1, 8, 8) + (6</title>
		<imprint>
			<biblScope unit="page" from="6" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b195">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">3) + (3, 6, 3) + (3, 3, 6) + (6) + (1, 1, 10) + (6, 3, 6) + (6</title>
		<imprint>
			<biblScope unit="page" from="3" to="8" />
		</imprint>
	</monogr>
	<note>3. ) + (10, 1, 1) + (10, 1, 1) + (1</note>
</biblStruct>

<biblStruct xml:id="b196">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">3) + (3, 6, 3) + (3) + (1, 8, 8) + (10, 1, 10) + (10</title>
		<imprint>
			<biblScope unit="page" from="3" to="3" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b197">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">) + 2(3, 6, 3) + 2(3, 3, 6) + 2</title>
		<imprint>
			<biblScope unit="page" from="1" to="2" />
		</imprint>
	</monogr>
	<note>3. ) + (6, 3, 6) + (6, 6, 3) + (3</note>
</biblStruct>

<biblStruct xml:id="b198">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">15) + (15, 6, 3) + (3</title>
		<imprint>
			<biblScope unit="page" from="15" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b199">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">1)+4(3, 8, 3)+4(8, 3, 3)+4(3, 3, 8)+(3) + 2(8, 6, 3) + 2(6, 3, 8) + 2(3, 6, 8) + (15</title>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="1" to="2" />
		</imprint>
	</monogr>
	<note>3. )+(3, 10, 3)+ (10, 3, 3) + (10, 3, 3) + (3, 3</note>
</biblStruct>

<biblStruct xml:id="b200">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">1)+3(3, 8, 3)+3(8, 3, 3)+3(3, 3, 8)+2(3) + (3, 1, 15) + (6, 10, 3) + (10, 3, 6) + (10</title>
		<imprint>
			<biblScope unit="page" from="1" to="3" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b201">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">) + 2(1, 6, 3) + 2(6, 3, 1) +</title>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="3" to="3" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b202">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">15) + (6, 3, 10) + 2(15, 3, 1) + (3, 6, 10) + 2(3) + (15, 6, 1) + 2(15, 8, 3)+2(3</title>
		<imprint>
			<biblScope unit="page" from="6" to="2" />
		</imprint>
	</monogr>
	<note>1. ) + (6, 8, 6) + (8, 6, 6) + (6, 6, 8) + (15</note>
</biblStruct>

<biblStruct xml:id="b203">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">10)+(10, 45)+(10, 45)+(45, 10)+ (75, 1) +</title>
		<imprint>
			<biblScope unit="page" from="40" to="40" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b204">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">10)+2(10, 5)+2(10, 5)+2(5, 10)+(5, 15)+(15, 5)+(15, 5)+(5, 15)</title>
		<imprint>
			<biblScope unit="page" from="2" to="2" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b205">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">45) + 2(10, 45) + 2(45, 10) + (50, 15) + 75) + (70, 10) + (10, 70) + (10, 70) + (70, 10) + (45, 40) + (40, 45) + (40, 45) + (45, 40) +</title>
		<imprint>
			<date type="published" when="0200" />
			<biblScope unit="page" from="40" to="40" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b206">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">10)+(5, 15)+(15, 5)+(15, 5)+(5, 15)</title>
		<imprint>
			<biblScope unit="page" from="1" to="3" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b207">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="m">24)+2 10) + (45, 15) + (15, 45) + (15, 45) + 50) + (50, 10) + (75, 1) + (1, 75) + (70, 10) + (10, 70) + (10, 70) + (70, 10) + (45, 40) + (40, 45) + (40, 45) + (45, 40) +</title>
		<imprint>
			<biblScope unit="page" from="40" to="2" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b208">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">References</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b209">
	<analytic>
		<title level="a" type="main">Semisimple subalgebras of semisimple Lie algebras</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Dynkin</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Trans.Am.Math.Soc</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page">111</biblScope>
			<date type="published" when="1957" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b210">
	<analytic>
		<title level="a" type="main">Maximal subgroups of the classical groups</title>
		<author>
			<persName>
				<surname>Dynkin</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Trans.Am.Math.Soc</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page">245</biblScope>
			<date type="published" when="1957" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b211">
	<analytic>
		<title level="a" type="main">Unity of All Elementary Particle Forces</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Georgi</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Glashow</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Phys.Rev.Lett</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="438" to="441" />
			<date type="published" when="1974" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b212">
	<monogr>
		<title/>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b213">
	<analytic>
		<title level="a" type="main">Particles And Fields: Williamsburg 1974</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Georgi</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">AIP Conference Proceedings</title>
		<editor>23 -C. E. Carlson</editor>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b214">
	<monogr>
		<title level="m" type="main">Unified Interactions of Leptons and Hadrons, Annals Phys</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Fritzsch</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Minkowski</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1975" />
			<biblScope unit="page" from="193" to="266" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b215">
	<monogr>
		<title level="m" type="main">A Universal Gauge Theory Model Based on E6</title>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Gursey</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Ramond</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Sikivie</surname>
			</persName>
		</author>
		<imprint>
			<biblScope unit="page" from="0370" to="269390417" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b216">
	<analytic>
		<title level="a" type="main">Group Theory for Unified Model Building</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Slansky</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Phys.Rept</title>
		<imprint>
			<biblScope unit="volume">79</biblScope>
			<biblScope unit="issue">81</biblScope>
			<biblScope unit="page" from="0370" to="157390092" />
			<date type="published" when="1981" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b217">
	<analytic>
		<title level="a" type="main">Tables of dimensions, indices, and branching rules for representations of simple Lie algebras</title>
		<author>
			<persName>
				<forename type="first">W</forename>
				<forename type="middle">G</forename>
				<surname>Mckay</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Patera</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Lecture Notes in Pure and Applied Mathematics</title>
		<imprint>
			<date type="published" when="1981" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b218">
	<analytic>
		<title level="a" type="main">Lie Algebras in Particle Physics</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Georgi</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Front.Phys</title>
		<imprint>
			<biblScope unit="volume">54</biblScope>
			<biblScope unit="page" from="1" to="255" />
			<date type="published" when="1982" />
		</imprint>
	</monogr>
	<note>from. Isospin to Unified Theories</note>
</biblStruct>

<biblStruct xml:id="b219">
	<monogr>
		<title level="m" type="main">Group theory: A physicist&apos;s survey</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Ramond</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2010" />
			<publisher>Cambridge University Press</publisher>
			<pubPlace>Cambridge, UK</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b220">
	<monogr>
		<title level="m" type="main">Semi-simple lie algebras and their representations</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Cahn</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1984" />
			<pubPlace>Benjamin Cummings, Menlo Park, CA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b221">
	<monogr>
		<title level="m" type="main">Lisser, LiE, A Package for Lie Group Computations</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Van Leeuwen</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Cohen</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B</forename>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1992" />
			<pubPlace>Amsterdam</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b222">
	<monogr>
		<title/>
		<editor>13] B. G. Wybourne, Schur</editor>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b223">
	<monogr>
		<title/>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b224">
	<monogr>
		<title/>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Nutma</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">Simplie</forename>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b225">
	<monogr>
		<title level="m" type="main">A. Nazarov, Affine.m -Mathematica package for computations in representation theory of finite- dimensional and affine Lie algebrasarXiv</title>
		<imprint>
			<biblScope unit="page" from="1107" to="4681" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b226">
	<analytic>
		<title level="a" type="main">Calculating the renormalisation group equations of a susy model with susyno</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">M</forename>
				<surname>Fonseca</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Physics Communications</title>
		<imprint>
			<biblScope unit="volume">183</biblScope>
			<biblScope unit="issue">10</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b227">
	<analytic>
		<title level="a" type="main">An explicit SU(12) family and flavor unification model with natural fermion masses and mixings</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<forename type="middle">H</forename>
				<surname>Albright</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">P</forename>
				<surname>Feger</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">T</forename>
				<forename type="middle">W</forename>
				<surname>Kephart</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Phys.Rev</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b228">
	<analytic>
		<title/>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Klimyk</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Patera</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Orbit Functions, SIGMA</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b229">
	<analytic>
		<title level="a" type="main">Fast Recursion Formula for Weight Multiplicities</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">V</forename>
				<surname>Moody</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Patera</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bull.Amer.Math.Soc.(N.S.)</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="237" to="242" />
			<date type="published" when="1982" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b230">
	<analytic>
		<title level="a" type="main">Congruence number, a generalization of SU(3) triality</title>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Lemire</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Patera</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J.Math.Phys</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">8</biblScope>
			<date type="published" when="1980" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b231">
	<monogr>
		<title level="m" type="main">Decomposition of the direct product of irreducible representations of a semisimple Lie algebra into irreducible representations</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">U</forename>
				<surname>Klimyk</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1967" />
			<publisher>American Mathematical Society Translations</publisher>
			<biblScope unit="page">76</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b232">
	<monogr>
		<title level="m" type="main">Introduction to Lie Algebras and Representation Theory</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Humphreys</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1972" />
			<publisher>Springer</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b233">
	<analytic>
		<title level="a" type="main">Branching rules for the Weyl group orbits of the Lie algebra A(n)</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Larouche</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Nesterenko</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Patera</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Phys. A: Math. Theor</title>
		<imprint>
			<biblScope unit="volume">42</biblScope>
			<biblScope unit="issue">485203</biblScope>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b234">
	<analytic>
		<title level="a" type="main">Branching rules for Weyl group orbits of simple Lie algebras B(n), C(n) and D(n)</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Larouche</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Patera</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Phys. A: Math. Theor</title>
		<imprint>
			<biblScope unit="volume">4444</biblScope>
			<biblScope unit="issue">1111</biblScope>
			<biblScope unit="page" from="1751" to="8113" />
			<date type="published" when="115203" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
